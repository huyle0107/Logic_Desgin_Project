
LCD.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005e1c  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000043c  08005f30  08005f30  00015f30  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800636c  0800636c  000201dc  2**0
                  CONTENTS
  4 .ARM          00000000  0800636c  0800636c  000201dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800636c  0800636c  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800636c  0800636c  0001636c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006370  08006370  00016370  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  08006374  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000f8  200001e0  08006550  000201e0  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  200002d8  08006550  000202d8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000b0f9  00000000  00000000  00020205  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001f20  00000000  00000000  0002b2fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000ad0  00000000  00000000  0002d220  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000009c8  00000000  00000000  0002dcf0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018563  00000000  00000000  0002e6b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000bbf6  00000000  00000000  00046c1b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008781b  00000000  00000000  00052811  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000da02c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003cb8  00000000  00000000  000da080  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001e0 	.word	0x200001e0
 800012c:	00000000 	.word	0x00000000
 8000130:	08005f14 	.word	0x08005f14

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001e4 	.word	0x200001e4
 800014c:	08005f14 	.word	0x08005f14

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <check_row>:
		'1','2','3','-',
		'#','0','=','+'
};
char operator;

unsigned char check_row(unsigned char col){
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b082      	sub	sp, #8
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	4603      	mov	r3, r0
 8000a90:	71fb      	strb	r3, [r7, #7]
	if(HAL_GPIO_ReadPin(GPIOB, R0_Pin) == 0 )	return KEY[col];
 8000a92:	2102      	movs	r1, #2
 8000a94:	481a      	ldr	r0, [pc, #104]	; (8000b00 <check_row+0x78>)
 8000a96:	f001 fb77 	bl	8002188 <HAL_GPIO_ReadPin>
 8000a9a:	4603      	mov	r3, r0
 8000a9c:	2b00      	cmp	r3, #0
 8000a9e:	d103      	bne.n	8000aa8 <check_row+0x20>
 8000aa0:	79fb      	ldrb	r3, [r7, #7]
 8000aa2:	4a18      	ldr	r2, [pc, #96]	; (8000b04 <check_row+0x7c>)
 8000aa4:	5cd3      	ldrb	r3, [r2, r3]
 8000aa6:	e026      	b.n	8000af6 <check_row+0x6e>
	else if (HAL_GPIO_ReadPin(GPIOB, R1_Pin) == 0)	return KEY[4+col];
 8000aa8:	2104      	movs	r1, #4
 8000aaa:	4815      	ldr	r0, [pc, #84]	; (8000b00 <check_row+0x78>)
 8000aac:	f001 fb6c 	bl	8002188 <HAL_GPIO_ReadPin>
 8000ab0:	4603      	mov	r3, r0
 8000ab2:	2b00      	cmp	r3, #0
 8000ab4:	d104      	bne.n	8000ac0 <check_row+0x38>
 8000ab6:	79fb      	ldrb	r3, [r7, #7]
 8000ab8:	3304      	adds	r3, #4
 8000aba:	4a12      	ldr	r2, [pc, #72]	; (8000b04 <check_row+0x7c>)
 8000abc:	5cd3      	ldrb	r3, [r2, r3]
 8000abe:	e01a      	b.n	8000af6 <check_row+0x6e>
	else if (HAL_GPIO_ReadPin(GPIOB, R2_Pin) == 0)	return KEY[8+col];
 8000ac0:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000ac4:	480e      	ldr	r0, [pc, #56]	; (8000b00 <check_row+0x78>)
 8000ac6:	f001 fb5f 	bl	8002188 <HAL_GPIO_ReadPin>
 8000aca:	4603      	mov	r3, r0
 8000acc:	2b00      	cmp	r3, #0
 8000ace:	d104      	bne.n	8000ada <check_row+0x52>
 8000ad0:	79fb      	ldrb	r3, [r7, #7]
 8000ad2:	3308      	adds	r3, #8
 8000ad4:	4a0b      	ldr	r2, [pc, #44]	; (8000b04 <check_row+0x7c>)
 8000ad6:	5cd3      	ldrb	r3, [r2, r3]
 8000ad8:	e00d      	b.n	8000af6 <check_row+0x6e>
	else if (HAL_GPIO_ReadPin(GPIOB, R3_Pin) == 0)	return KEY[12+col];
 8000ada:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000ade:	4808      	ldr	r0, [pc, #32]	; (8000b00 <check_row+0x78>)
 8000ae0:	f001 fb52 	bl	8002188 <HAL_GPIO_ReadPin>
 8000ae4:	4603      	mov	r3, r0
 8000ae6:	2b00      	cmp	r3, #0
 8000ae8:	d104      	bne.n	8000af4 <check_row+0x6c>
 8000aea:	79fb      	ldrb	r3, [r7, #7]
 8000aec:	330c      	adds	r3, #12
 8000aee:	4a05      	ldr	r2, [pc, #20]	; (8000b04 <check_row+0x7c>)
 8000af0:	5cd3      	ldrb	r3, [r2, r3]
 8000af2:	e000      	b.n	8000af6 <check_row+0x6e>
	else return 0xFF;
 8000af4:	23ff      	movs	r3, #255	; 0xff
}
 8000af6:	4618      	mov	r0, r3
 8000af8:	3708      	adds	r7, #8
 8000afa:	46bd      	mov	sp, r7
 8000afc:	bd80      	pop	{r7, pc}
 8000afe:	bf00      	nop
 8000b00:	40010c00 	.word	0x40010c00
 8000b04:	08005f68 	.word	0x08005f68

08000b08 <KEYPAD_Read>:
unsigned char KEYPAD_Read(void){
 8000b08:	b580      	push	{r7, lr}
 8000b0a:	b082      	sub	sp, #8
 8000b0c:	af00      	add	r7, sp, #0
	unsigned char key;
	HAL_GPIO_WritePin(GPIOA, C0_Pin|C1_Pin|C2_Pin, GPIO_PIN_SET);
 8000b0e:	2201      	movs	r2, #1
 8000b10:	2113      	movs	r1, #19
 8000b12:	482e      	ldr	r0, [pc, #184]	; (8000bcc <KEYPAD_Read+0xc4>)
 8000b14:	f001 fb4f 	bl	80021b6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, C3_Pin, GPIO_PIN_SET);
 8000b18:	2201      	movs	r2, #1
 8000b1a:	2101      	movs	r1, #1
 8000b1c:	482c      	ldr	r0, [pc, #176]	; (8000bd0 <KEYPAD_Read+0xc8>)
 8000b1e:	f001 fb4a 	bl	80021b6 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(GPIOA, C0_Pin, RESET);
 8000b22:	2200      	movs	r2, #0
 8000b24:	2101      	movs	r1, #1
 8000b26:	4829      	ldr	r0, [pc, #164]	; (8000bcc <KEYPAD_Read+0xc4>)
 8000b28:	f001 fb45 	bl	80021b6 <HAL_GPIO_WritePin>
	key = check_row(0);
 8000b2c:	2000      	movs	r0, #0
 8000b2e:	f7ff ffab 	bl	8000a88 <check_row>
 8000b32:	4603      	mov	r3, r0
 8000b34:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOA, C0_Pin, SET);
 8000b36:	2201      	movs	r2, #1
 8000b38:	2101      	movs	r1, #1
 8000b3a:	4824      	ldr	r0, [pc, #144]	; (8000bcc <KEYPAD_Read+0xc4>)
 8000b3c:	f001 fb3b 	bl	80021b6 <HAL_GPIO_WritePin>
	if(key != 0xFF)	return key;
 8000b40:	79fb      	ldrb	r3, [r7, #7]
 8000b42:	2bff      	cmp	r3, #255	; 0xff
 8000b44:	d001      	beq.n	8000b4a <KEYPAD_Read+0x42>
 8000b46:	79fb      	ldrb	r3, [r7, #7]
 8000b48:	e03c      	b.n	8000bc4 <KEYPAD_Read+0xbc>

	HAL_GPIO_WritePin(GPIOA, C1_Pin, RESET);
 8000b4a:	2200      	movs	r2, #0
 8000b4c:	2102      	movs	r1, #2
 8000b4e:	481f      	ldr	r0, [pc, #124]	; (8000bcc <KEYPAD_Read+0xc4>)
 8000b50:	f001 fb31 	bl	80021b6 <HAL_GPIO_WritePin>
	key = check_row(1);
 8000b54:	2001      	movs	r0, #1
 8000b56:	f7ff ff97 	bl	8000a88 <check_row>
 8000b5a:	4603      	mov	r3, r0
 8000b5c:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOA, C1_Pin, SET);
 8000b5e:	2201      	movs	r2, #1
 8000b60:	2102      	movs	r1, #2
 8000b62:	481a      	ldr	r0, [pc, #104]	; (8000bcc <KEYPAD_Read+0xc4>)
 8000b64:	f001 fb27 	bl	80021b6 <HAL_GPIO_WritePin>
	if(key != 0xFF)	return key;
 8000b68:	79fb      	ldrb	r3, [r7, #7]
 8000b6a:	2bff      	cmp	r3, #255	; 0xff
 8000b6c:	d001      	beq.n	8000b72 <KEYPAD_Read+0x6a>
 8000b6e:	79fb      	ldrb	r3, [r7, #7]
 8000b70:	e028      	b.n	8000bc4 <KEYPAD_Read+0xbc>

	HAL_GPIO_WritePin(GPIOA, C2_Pin, RESET);
 8000b72:	2200      	movs	r2, #0
 8000b74:	2110      	movs	r1, #16
 8000b76:	4815      	ldr	r0, [pc, #84]	; (8000bcc <KEYPAD_Read+0xc4>)
 8000b78:	f001 fb1d 	bl	80021b6 <HAL_GPIO_WritePin>
	key = check_row(2);
 8000b7c:	2002      	movs	r0, #2
 8000b7e:	f7ff ff83 	bl	8000a88 <check_row>
 8000b82:	4603      	mov	r3, r0
 8000b84:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOA, C2_Pin, SET);
 8000b86:	2201      	movs	r2, #1
 8000b88:	2110      	movs	r1, #16
 8000b8a:	4810      	ldr	r0, [pc, #64]	; (8000bcc <KEYPAD_Read+0xc4>)
 8000b8c:	f001 fb13 	bl	80021b6 <HAL_GPIO_WritePin>
	if(key != 0xFF)	return key;
 8000b90:	79fb      	ldrb	r3, [r7, #7]
 8000b92:	2bff      	cmp	r3, #255	; 0xff
 8000b94:	d001      	beq.n	8000b9a <KEYPAD_Read+0x92>
 8000b96:	79fb      	ldrb	r3, [r7, #7]
 8000b98:	e014      	b.n	8000bc4 <KEYPAD_Read+0xbc>

	HAL_GPIO_WritePin(GPIOB, C3_Pin, RESET);
 8000b9a:	2200      	movs	r2, #0
 8000b9c:	2101      	movs	r1, #1
 8000b9e:	480c      	ldr	r0, [pc, #48]	; (8000bd0 <KEYPAD_Read+0xc8>)
 8000ba0:	f001 fb09 	bl	80021b6 <HAL_GPIO_WritePin>
	key = check_row(3);
 8000ba4:	2003      	movs	r0, #3
 8000ba6:	f7ff ff6f 	bl	8000a88 <check_row>
 8000baa:	4603      	mov	r3, r0
 8000bac:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOB, C3_Pin, SET);
 8000bae:	2201      	movs	r2, #1
 8000bb0:	2101      	movs	r1, #1
 8000bb2:	4807      	ldr	r0, [pc, #28]	; (8000bd0 <KEYPAD_Read+0xc8>)
 8000bb4:	f001 faff 	bl	80021b6 <HAL_GPIO_WritePin>
	if(key != 0xFF)	return key;
 8000bb8:	79fb      	ldrb	r3, [r7, #7]
 8000bba:	2bff      	cmp	r3, #255	; 0xff
 8000bbc:	d001      	beq.n	8000bc2 <KEYPAD_Read+0xba>
 8000bbe:	79fb      	ldrb	r3, [r7, #7]
 8000bc0:	e000      	b.n	8000bc4 <KEYPAD_Read+0xbc>

	return 0xFF;
 8000bc2:	23ff      	movs	r3, #255	; 0xff
}
 8000bc4:	4618      	mov	r0, r3
 8000bc6:	3708      	adds	r7, #8
 8000bc8:	46bd      	mov	sp, r7
 8000bca:	bd80      	pop	{r7, pc}
 8000bcc:	40010800 	.word	0x40010800
 8000bd0:	40010c00 	.word	0x40010c00

08000bd4 <Key_Read>:

void Key_Read(){
 8000bd4:	b580      	push	{r7, lr}
 8000bd6:	b082      	sub	sp, #8
 8000bd8:	af00      	add	r7, sp, #0
	char text = KEYPAD_Read();
 8000bda:	f7ff ff95 	bl	8000b08 <KEYPAD_Read>
 8000bde:	4603      	mov	r3, r0
 8000be0:	71fb      	strb	r3, [r7, #7]
	if(text != 0xFF)
 8000be2:	79fb      	ldrb	r3, [r7, #7]
 8000be4:	2bff      	cmp	r3, #255	; 0xff
 8000be6:	d00a      	beq.n	8000bfe <Key_Read+0x2a>
	{
		text = KEYPAD_Read();
 8000be8:	f7ff ff8e 	bl	8000b08 <KEYPAD_Read>
 8000bec:	4603      	mov	r3, r0
 8000bee:	71fb      	strb	r3, [r7, #7]
		if(text != 0xFF)
 8000bf0:	79fb      	ldrb	r3, [r7, #7]
 8000bf2:	2bff      	cmp	r3, #255	; 0xff
 8000bf4:	d003      	beq.n	8000bfe <Key_Read+0x2a>
		{
			LCD_add_To_String(text);
 8000bf6:	79fb      	ldrb	r3, [r7, #7]
 8000bf8:	4618      	mov	r0, r3
 8000bfa:	f000 fa93 	bl	8001124 <LCD_add_To_String>
//			HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
		}

	}
}
 8000bfe:	bf00      	nop
 8000c00:	3708      	adds	r7, #8
 8000c02:	46bd      	mov	sp, r7
 8000c04:	bd80      	pop	{r7, pc}
	...

08000c08 <logicCal>:
char final[16];
unsigned long long result1 = 0;
double result2 = 0;

int logicCal(char str1[16], char str2[16], char cal, int check2, int temp, int i, int j)
{
 8000c08:	b5b0      	push	{r4, r5, r7, lr}
 8000c0a:	b092      	sub	sp, #72	; 0x48
 8000c0c:	af00      	add	r7, sp, #0
 8000c0e:	60f8      	str	r0, [r7, #12]
 8000c10:	60b9      	str	r1, [r7, #8]
 8000c12:	603b      	str	r3, [r7, #0]
 8000c14:	4613      	mov	r3, r2
 8000c16:	71fb      	strb	r3, [r7, #7]
	int num1 = 0, num2 = 0, count1 = 0, count2 = 0, count3 = 0, check1 = 0;
 8000c18:	2300      	movs	r3, #0
 8000c1a:	647b      	str	r3, [r7, #68]	; 0x44
 8000c1c:	2300      	movs	r3, #0
 8000c1e:	643b      	str	r3, [r7, #64]	; 0x40
 8000c20:	2300      	movs	r3, #0
 8000c22:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000c24:	2300      	movs	r3, #0
 8000c26:	63bb      	str	r3, [r7, #56]	; 0x38
 8000c28:	2300      	movs	r3, #0
 8000c2a:	637b      	str	r3, [r7, #52]	; 0x34
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	633b      	str	r3, [r7, #48]	; 0x30

	if (temp == 2)
 8000c30:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8000c32:	2b02      	cmp	r3, #2
 8000c34:	d14b      	bne.n	8000cce <logicCal+0xc6>
	{
		i = 0;
 8000c36:	2300      	movs	r3, #0
 8000c38:	65fb      	str	r3, [r7, #92]	; 0x5c
		while (final[count3] != '\0')
 8000c3a:	e03e      	b.n	8000cba <logicCal+0xb2>
		{
			if (final[count3] == '.')
 8000c3c:	4aa2      	ldr	r2, [pc, #648]	; (8000ec8 <logicCal+0x2c0>)
 8000c3e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000c40:	4413      	add	r3, r2
 8000c42:	781b      	ldrb	r3, [r3, #0]
 8000c44:	2b2e      	cmp	r3, #46	; 0x2e
 8000c46:	d125      	bne.n	8000c94 <logicCal+0x8c>
			{
				if (final[count3 + 1] == '0')
 8000c48:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000c4a:	3301      	adds	r3, #1
 8000c4c:	4a9e      	ldr	r2, [pc, #632]	; (8000ec8 <logicCal+0x2c0>)
 8000c4e:	5cd3      	ldrb	r3, [r2, r3]
 8000c50:	2b30      	cmp	r3, #48	; 0x30
 8000c52:	d11d      	bne.n	8000c90 <logicCal+0x88>
					if (final[count3 + 2] == '0')
 8000c54:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000c56:	3302      	adds	r3, #2
 8000c58:	4a9b      	ldr	r2, [pc, #620]	; (8000ec8 <logicCal+0x2c0>)
 8000c5a:	5cd3      	ldrb	r3, [r2, r3]
 8000c5c:	2b30      	cmp	r3, #48	; 0x30
 8000c5e:	d117      	bne.n	8000c90 <logicCal+0x88>
						if (final[count3 + 3] == '0')
 8000c60:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000c62:	3303      	adds	r3, #3
 8000c64:	4a98      	ldr	r2, [pc, #608]	; (8000ec8 <logicCal+0x2c0>)
 8000c66:	5cd3      	ldrb	r3, [r2, r3]
 8000c68:	2b30      	cmp	r3, #48	; 0x30
 8000c6a:	d111      	bne.n	8000c90 <logicCal+0x88>
							if (final[count3 + 4] == '0')
 8000c6c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000c6e:	3304      	adds	r3, #4
 8000c70:	4a95      	ldr	r2, [pc, #596]	; (8000ec8 <logicCal+0x2c0>)
 8000c72:	5cd3      	ldrb	r3, [r2, r3]
 8000c74:	2b30      	cmp	r3, #48	; 0x30
 8000c76:	d10b      	bne.n	8000c90 <logicCal+0x88>
								if (final[count3 + 5] == '0')
 8000c78:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000c7a:	3305      	adds	r3, #5
 8000c7c:	4a92      	ldr	r2, [pc, #584]	; (8000ec8 <logicCal+0x2c0>)
 8000c7e:	5cd3      	ldrb	r3, [r2, r3]
 8000c80:	2b30      	cmp	r3, #48	; 0x30
 8000c82:	d105      	bne.n	8000c90 <logicCal+0x88>
									if (final[count3 + 6] == '0') break;
 8000c84:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000c86:	3306      	adds	r3, #6
 8000c88:	4a8f      	ldr	r2, [pc, #572]	; (8000ec8 <logicCal+0x2c0>)
 8000c8a:	5cd3      	ldrb	r3, [r2, r3]
 8000c8c:	2b30      	cmp	r3, #48	; 0x30
 8000c8e:	d01b      	beq.n	8000cc8 <logicCal+0xc0>
				check1 = 1;
 8000c90:	2301      	movs	r3, #1
 8000c92:	633b      	str	r3, [r7, #48]	; 0x30
			}
			str1[count3] = final[count3];
 8000c94:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000c96:	68fa      	ldr	r2, [r7, #12]
 8000c98:	4413      	add	r3, r2
 8000c9a:	498b      	ldr	r1, [pc, #556]	; (8000ec8 <logicCal+0x2c0>)
 8000c9c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8000c9e:	440a      	add	r2, r1
 8000ca0:	7812      	ldrb	r2, [r2, #0]
 8000ca2:	701a      	strb	r2, [r3, #0]
			final[count3] = '\0';
 8000ca4:	4a88      	ldr	r2, [pc, #544]	; (8000ec8 <logicCal+0x2c0>)
 8000ca6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000ca8:	4413      	add	r3, r2
 8000caa:	2200      	movs	r2, #0
 8000cac:	701a      	strb	r2, [r3, #0]
			i++; count3++;
 8000cae:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000cb0:	3301      	adds	r3, #1
 8000cb2:	65fb      	str	r3, [r7, #92]	; 0x5c
 8000cb4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000cb6:	3301      	adds	r3, #1
 8000cb8:	637b      	str	r3, [r7, #52]	; 0x34
		while (final[count3] != '\0')
 8000cba:	4a83      	ldr	r2, [pc, #524]	; (8000ec8 <logicCal+0x2c0>)
 8000cbc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000cbe:	4413      	add	r3, r2
 8000cc0:	781b      	ldrb	r3, [r3, #0]
 8000cc2:	2b00      	cmp	r3, #0
 8000cc4:	d1ba      	bne.n	8000c3c <logicCal+0x34>
 8000cc6:	e000      	b.n	8000cca <logicCal+0xc2>
									if (final[count3 + 6] == '0') break;
 8000cc8:	bf00      	nop
		}
		LCD_Clear();
 8000cca:	f000 fc9f 	bl	800160c <LCD_Clear>
	}

	if (check2 == 1)
 8000cce:	683b      	ldr	r3, [r7, #0]
 8000cd0:	2b01      	cmp	r3, #1
 8000cd2:	d14a      	bne.n	8000d6a <logicCal+0x162>
	{
		for (int l = 0; l < 16; l++) final[l] = '\0';
 8000cd4:	2300      	movs	r3, #0
 8000cd6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000cd8:	e007      	b.n	8000cea <logicCal+0xe2>
 8000cda:	4a7b      	ldr	r2, [pc, #492]	; (8000ec8 <logicCal+0x2c0>)
 8000cdc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000cde:	4413      	add	r3, r2
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	701a      	strb	r2, [r3, #0]
 8000ce4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000ce6:	3301      	adds	r3, #1
 8000ce8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000cea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000cec:	2b0f      	cmp	r3, #15
 8000cee:	ddf4      	ble.n	8000cda <logicCal+0xd2>
	}

	while (count1 < i)
 8000cf0:	e03b      	b.n	8000d6a <logicCal+0x162>
	{
		if (check1 == 1)
 8000cf2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000cf4:	2b01      	cmp	r3, #1
 8000cf6:	d102      	bne.n	8000cfe <logicCal+0xf6>
		{
			count1 = 1;
 8000cf8:	2301      	movs	r3, #1
 8000cfa:	63fb      	str	r3, [r7, #60]	; 0x3c
			break;
 8000cfc:	e039      	b.n	8000d72 <logicCal+0x16a>
		}
		if (str1[count1] == '-')
 8000cfe:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000d00:	68fa      	ldr	r2, [r7, #12]
 8000d02:	4413      	add	r3, r2
 8000d04:	781b      	ldrb	r3, [r3, #0]
 8000d06:	2b2d      	cmp	r3, #45	; 0x2d
 8000d08:	d11d      	bne.n	8000d46 <logicCal+0x13e>
	    {
			count1++;
 8000d0a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000d0c:	3301      	adds	r3, #1
 8000d0e:	63fb      	str	r3, [r7, #60]	; 0x3c
			while (count1 < i)
 8000d10:	e011      	b.n	8000d36 <logicCal+0x12e>
			{
				int temp1 = (int)str1[count1] - 48;
 8000d12:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000d14:	68fa      	ldr	r2, [r7, #12]
 8000d16:	4413      	add	r3, r2
 8000d18:	781b      	ldrb	r3, [r3, #0]
 8000d1a:	3b30      	subs	r3, #48	; 0x30
 8000d1c:	61bb      	str	r3, [r7, #24]
				num1 = num1 * 10 + temp1;
 8000d1e:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8000d20:	4613      	mov	r3, r2
 8000d22:	009b      	lsls	r3, r3, #2
 8000d24:	4413      	add	r3, r2
 8000d26:	005b      	lsls	r3, r3, #1
 8000d28:	461a      	mov	r2, r3
 8000d2a:	69bb      	ldr	r3, [r7, #24]
 8000d2c:	4413      	add	r3, r2
 8000d2e:	647b      	str	r3, [r7, #68]	; 0x44
				count1++;
 8000d30:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000d32:	3301      	adds	r3, #1
 8000d34:	63fb      	str	r3, [r7, #60]	; 0x3c
			while (count1 < i)
 8000d36:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8000d38:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000d3a:	429a      	cmp	r2, r3
 8000d3c:	dbe9      	blt.n	8000d12 <logicCal+0x10a>
			}
			num1 *= -1;
 8000d3e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000d40:	425b      	negs	r3, r3
 8000d42:	647b      	str	r3, [r7, #68]	; 0x44
			break;
 8000d44:	e015      	b.n	8000d72 <logicCal+0x16a>
	    }
	    int temp1 = (int)str1[count1] - 48;
 8000d46:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000d48:	68fa      	ldr	r2, [r7, #12]
 8000d4a:	4413      	add	r3, r2
 8000d4c:	781b      	ldrb	r3, [r3, #0]
 8000d4e:	3b30      	subs	r3, #48	; 0x30
 8000d50:	61fb      	str	r3, [r7, #28]
	    num1 = num1 * 10 + temp1;
 8000d52:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8000d54:	4613      	mov	r3, r2
 8000d56:	009b      	lsls	r3, r3, #2
 8000d58:	4413      	add	r3, r2
 8000d5a:	005b      	lsls	r3, r3, #1
 8000d5c:	461a      	mov	r2, r3
 8000d5e:	69fb      	ldr	r3, [r7, #28]
 8000d60:	4413      	add	r3, r2
 8000d62:	647b      	str	r3, [r7, #68]	; 0x44
	    count1++;
 8000d64:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000d66:	3301      	adds	r3, #1
 8000d68:	63fb      	str	r3, [r7, #60]	; 0x3c
	while (count1 < i)
 8000d6a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8000d6c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000d6e:	429a      	cmp	r2, r3
 8000d70:	dbbf      	blt.n	8000cf2 <logicCal+0xea>
	}
	while (count2 < j)
 8000d72:	e035      	b.n	8000de0 <logicCal+0x1d8>
	{
		if (str2[count2] == '-')
 8000d74:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000d76:	68ba      	ldr	r2, [r7, #8]
 8000d78:	4413      	add	r3, r2
 8000d7a:	781b      	ldrb	r3, [r3, #0]
 8000d7c:	2b2d      	cmp	r3, #45	; 0x2d
 8000d7e:	d11d      	bne.n	8000dbc <logicCal+0x1b4>
	    {
			count2++;
 8000d80:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000d82:	3301      	adds	r3, #1
 8000d84:	63bb      	str	r3, [r7, #56]	; 0x38
	    	while (count2 < j)
 8000d86:	e011      	b.n	8000dac <logicCal+0x1a4>
	    	{
	    		int temp2 = (int)str2[count2] - 48;
 8000d88:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000d8a:	68ba      	ldr	r2, [r7, #8]
 8000d8c:	4413      	add	r3, r2
 8000d8e:	781b      	ldrb	r3, [r3, #0]
 8000d90:	3b30      	subs	r3, #48	; 0x30
 8000d92:	613b      	str	r3, [r7, #16]
	    		num2 = num2 * 10 + temp2;
 8000d94:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8000d96:	4613      	mov	r3, r2
 8000d98:	009b      	lsls	r3, r3, #2
 8000d9a:	4413      	add	r3, r2
 8000d9c:	005b      	lsls	r3, r3, #1
 8000d9e:	461a      	mov	r2, r3
 8000da0:	693b      	ldr	r3, [r7, #16]
 8000da2:	4413      	add	r3, r2
 8000da4:	643b      	str	r3, [r7, #64]	; 0x40
	    		count2++;
 8000da6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000da8:	3301      	adds	r3, #1
 8000daa:	63bb      	str	r3, [r7, #56]	; 0x38
	    	while (count2 < j)
 8000dac:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8000dae:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8000db0:	429a      	cmp	r2, r3
 8000db2:	dbe9      	blt.n	8000d88 <logicCal+0x180>
	    	}
	    	num2 *= -1;
 8000db4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000db6:	425b      	negs	r3, r3
 8000db8:	643b      	str	r3, [r7, #64]	; 0x40
	    	break;
 8000dba:	e015      	b.n	8000de8 <logicCal+0x1e0>
	    }
	    int temp2 = (int)str2[count2] - 48;
 8000dbc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000dbe:	68ba      	ldr	r2, [r7, #8]
 8000dc0:	4413      	add	r3, r2
 8000dc2:	781b      	ldrb	r3, [r3, #0]
 8000dc4:	3b30      	subs	r3, #48	; 0x30
 8000dc6:	617b      	str	r3, [r7, #20]
	    num2 = num2 * 10 + temp2;
 8000dc8:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8000dca:	4613      	mov	r3, r2
 8000dcc:	009b      	lsls	r3, r3, #2
 8000dce:	4413      	add	r3, r2
 8000dd0:	005b      	lsls	r3, r3, #1
 8000dd2:	461a      	mov	r2, r3
 8000dd4:	697b      	ldr	r3, [r7, #20]
 8000dd6:	4413      	add	r3, r2
 8000dd8:	643b      	str	r3, [r7, #64]	; 0x40
	    count2++;
 8000dda:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000ddc:	3301      	adds	r3, #1
 8000dde:	63bb      	str	r3, [r7, #56]	; 0x38
	while (count2 < j)
 8000de0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8000de2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8000de4:	429a      	cmp	r2, r3
 8000de6:	dbc5      	blt.n	8000d74 <logicCal+0x16c>
	}

	if (cal == '\0')
 8000de8:	79fb      	ldrb	r3, [r7, #7]
 8000dea:	2b00      	cmp	r3, #0
 8000dec:	d108      	bne.n	8000e00 <logicCal+0x1f8>
	{
		LCD_Put_Cur(1, 11);
 8000dee:	210b      	movs	r1, #11
 8000df0:	2001      	movs	r0, #1
 8000df2:	f000 fbe9 	bl	80015c8 <LCD_Put_Cur>
		LCD_Send_String("error");
 8000df6:	4835      	ldr	r0, [pc, #212]	; (8000ecc <logicCal+0x2c4>)
 8000df8:	f000 fbca 	bl	8001590 <LCD_Send_String>
	    return 0;
 8000dfc:	2300      	movs	r3, #0
 8000dfe:	e13b      	b.n	8001078 <logicCal+0x470>
	}
	else if (count1 == 0)
 8000e00:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000e02:	2b00      	cmp	r3, #0
 8000e04:	d108      	bne.n	8000e18 <logicCal+0x210>
	{
		LCD_Put_Cur(1, 11);
 8000e06:	210b      	movs	r1, #11
 8000e08:	2001      	movs	r0, #1
 8000e0a:	f000 fbdd 	bl	80015c8 <LCD_Put_Cur>
		LCD_Send_String("error");
 8000e0e:	482f      	ldr	r0, [pc, #188]	; (8000ecc <logicCal+0x2c4>)
 8000e10:	f000 fbbe 	bl	8001590 <LCD_Send_String>
		return 0;
 8000e14:	2300      	movs	r3, #0
 8000e16:	e12f      	b.n	8001078 <logicCal+0x470>
	}
	else if (count2 == 0)
 8000e18:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000e1a:	2b00      	cmp	r3, #0
 8000e1c:	d108      	bne.n	8000e30 <logicCal+0x228>
	{
		LCD_Put_Cur(1, 11);
 8000e1e:	210b      	movs	r1, #11
 8000e20:	2001      	movs	r0, #1
 8000e22:	f000 fbd1 	bl	80015c8 <LCD_Put_Cur>
		LCD_Send_String("error");
 8000e26:	4829      	ldr	r0, [pc, #164]	; (8000ecc <logicCal+0x2c4>)
 8000e28:	f000 fbb2 	bl	8001590 <LCD_Send_String>
		return 0;
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	e123      	b.n	8001078 <logicCal+0x470>
	}

	switch(cal)
 8000e30:	79fb      	ldrb	r3, [r7, #7]
 8000e32:	2b78      	cmp	r3, #120	; 0x78
 8000e34:	d050      	beq.n	8000ed8 <logicCal+0x2d0>
 8000e36:	2b78      	cmp	r3, #120	; 0x78
 8000e38:	f300 80d3 	bgt.w	8000fe2 <logicCal+0x3da>
 8000e3c:	2b2f      	cmp	r3, #47	; 0x2f
 8000e3e:	f000 8099 	beq.w	8000f74 <logicCal+0x36c>
 8000e42:	2b2f      	cmp	r3, #47	; 0x2f
 8000e44:	f300 80cd 	bgt.w	8000fe2 <logicCal+0x3da>
 8000e48:	2b2b      	cmp	r3, #43	; 0x2b
 8000e4a:	d002      	beq.n	8000e52 <logicCal+0x24a>
 8000e4c:	2b2d      	cmp	r3, #45	; 0x2d
 8000e4e:	d01b      	beq.n	8000e88 <logicCal+0x280>
 8000e50:	e0c7      	b.n	8000fe2 <logicCal+0x3da>
	{
		case '+':
			if (check1 == 1) result2 += (double)num2;
 8000e52:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000e54:	2b01      	cmp	r3, #1
 8000e56:	d10d      	bne.n	8000e74 <logicCal+0x26c>
 8000e58:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8000e5a:	f7ff fad3 	bl	8000404 <__aeabi_i2d>
 8000e5e:	4b1c      	ldr	r3, [pc, #112]	; (8000ed0 <logicCal+0x2c8>)
 8000e60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000e64:	f7ff f982 	bl	800016c <__adddf3>
 8000e68:	4602      	mov	r2, r0
 8000e6a:	460b      	mov	r3, r1
 8000e6c:	4918      	ldr	r1, [pc, #96]	; (8000ed0 <logicCal+0x2c8>)
 8000e6e:	e9c1 2300 	strd	r2, r3, [r1]
			else result1 = num1 + num2;
	        break;
 8000e72:	e0b6      	b.n	8000fe2 <logicCal+0x3da>
			else result1 = num1 + num2;
 8000e74:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8000e76:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000e78:	4413      	add	r3, r2
 8000e7a:	461a      	mov	r2, r3
 8000e7c:	ea4f 73e2 	mov.w	r3, r2, asr #31
 8000e80:	4914      	ldr	r1, [pc, #80]	; (8000ed4 <logicCal+0x2cc>)
 8000e82:	e9c1 2300 	strd	r2, r3, [r1]
	        break;
 8000e86:	e0ac      	b.n	8000fe2 <logicCal+0x3da>
	    case '-':
	    	if (check1 == 1) result2 -= (double)num2;
 8000e88:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000e8a:	2b01      	cmp	r3, #1
 8000e8c:	d111      	bne.n	8000eb2 <logicCal+0x2aa>
 8000e8e:	4b10      	ldr	r3, [pc, #64]	; (8000ed0 <logicCal+0x2c8>)
 8000e90:	e9d3 4500 	ldrd	r4, r5, [r3]
 8000e94:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8000e96:	f7ff fab5 	bl	8000404 <__aeabi_i2d>
 8000e9a:	4602      	mov	r2, r0
 8000e9c:	460b      	mov	r3, r1
 8000e9e:	4620      	mov	r0, r4
 8000ea0:	4629      	mov	r1, r5
 8000ea2:	f7ff f961 	bl	8000168 <__aeabi_dsub>
 8000ea6:	4602      	mov	r2, r0
 8000ea8:	460b      	mov	r3, r1
 8000eaa:	4909      	ldr	r1, [pc, #36]	; (8000ed0 <logicCal+0x2c8>)
 8000eac:	e9c1 2300 	strd	r2, r3, [r1]
	    	else result1 = num1 - num2;
	        break;
 8000eb0:	e097      	b.n	8000fe2 <logicCal+0x3da>
	    	else result1 = num1 - num2;
 8000eb2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8000eb4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000eb6:	1ad3      	subs	r3, r2, r3
 8000eb8:	461a      	mov	r2, r3
 8000eba:	ea4f 73e2 	mov.w	r3, r2, asr #31
 8000ebe:	4905      	ldr	r1, [pc, #20]	; (8000ed4 <logicCal+0x2cc>)
 8000ec0:	e9c1 2300 	strd	r2, r3, [r1]
	        break;
 8000ec4:	e08d      	b.n	8000fe2 <logicCal+0x3da>
 8000ec6:	bf00      	nop
 8000ec8:	2000023c 	.word	0x2000023c
 8000ecc:	08005f30 	.word	0x08005f30
 8000ed0:	20000208 	.word	0x20000208
 8000ed4:	20000200 	.word	0x20000200
	    case 'x':
	    	if (check1 == 1) result2 *= (double)num2;
 8000ed8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000eda:	2b01      	cmp	r3, #1
 8000edc:	d10d      	bne.n	8000efa <logicCal+0x2f2>
 8000ede:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8000ee0:	f7ff fa90 	bl	8000404 <__aeabi_i2d>
 8000ee4:	4b66      	ldr	r3, [pc, #408]	; (8001080 <logicCal+0x478>)
 8000ee6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000eea:	f7ff faf5 	bl	80004d8 <__aeabi_dmul>
 8000eee:	4602      	mov	r2, r0
 8000ef0:	460b      	mov	r3, r1
 8000ef2:	4963      	ldr	r1, [pc, #396]	; (8001080 <logicCal+0x478>)
 8000ef4:	e9c1 2300 	strd	r2, r3, [r1]
 8000ef8:	e009      	b.n	8000f0e <logicCal+0x306>
	    	else result1 = num1 * num2;
 8000efa:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000efc:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8000efe:	fb02 f303 	mul.w	r3, r2, r3
 8000f02:	461a      	mov	r2, r3
 8000f04:	ea4f 73e2 	mov.w	r3, r2, asr #31
 8000f08:	495e      	ldr	r1, [pc, #376]	; (8001084 <logicCal+0x47c>)
 8000f0a:	e9c1 2300 	strd	r2, r3, [r1]
	    	if ((result2 * (double)num2) < -2147483648 && (result2 * (double)num2) > 2147483648)
 8000f0e:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8000f10:	f7ff fa78 	bl	8000404 <__aeabi_i2d>
 8000f14:	4b5a      	ldr	r3, [pc, #360]	; (8001080 <logicCal+0x478>)
 8000f16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f1a:	f7ff fadd 	bl	80004d8 <__aeabi_dmul>
 8000f1e:	4602      	mov	r2, r0
 8000f20:	460b      	mov	r3, r1
 8000f22:	4610      	mov	r0, r2
 8000f24:	4619      	mov	r1, r3
 8000f26:	f04f 0200 	mov.w	r2, #0
 8000f2a:	4b57      	ldr	r3, [pc, #348]	; (8001088 <logicCal+0x480>)
 8000f2c:	f7ff fd46 	bl	80009bc <__aeabi_dcmplt>
 8000f30:	4603      	mov	r3, r0
 8000f32:	2b00      	cmp	r3, #0
 8000f34:	d100      	bne.n	8000f38 <logicCal+0x330>
	        {
	        	LCD_Put_Cur(1, 6);
	        	LCD_Send_String("math error");
	        	return 0;
	        }
	        break;
 8000f36:	e054      	b.n	8000fe2 <logicCal+0x3da>
	    	if ((result2 * (double)num2) < -2147483648 && (result2 * (double)num2) > 2147483648)
 8000f38:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8000f3a:	f7ff fa63 	bl	8000404 <__aeabi_i2d>
 8000f3e:	4b50      	ldr	r3, [pc, #320]	; (8001080 <logicCal+0x478>)
 8000f40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f44:	f7ff fac8 	bl	80004d8 <__aeabi_dmul>
 8000f48:	4602      	mov	r2, r0
 8000f4a:	460b      	mov	r3, r1
 8000f4c:	4610      	mov	r0, r2
 8000f4e:	4619      	mov	r1, r3
 8000f50:	f04f 0200 	mov.w	r2, #0
 8000f54:	4b4d      	ldr	r3, [pc, #308]	; (800108c <logicCal+0x484>)
 8000f56:	f7ff fd4f 	bl	80009f8 <__aeabi_dcmpgt>
 8000f5a:	4603      	mov	r3, r0
 8000f5c:	2b00      	cmp	r3, #0
 8000f5e:	d100      	bne.n	8000f62 <logicCal+0x35a>
	        break;
 8000f60:	e03f      	b.n	8000fe2 <logicCal+0x3da>
				LCD_Put_Cur(1, 6);
 8000f62:	2106      	movs	r1, #6
 8000f64:	2001      	movs	r0, #1
 8000f66:	f000 fb2f 	bl	80015c8 <LCD_Put_Cur>
				LCD_Send_String("math error");
 8000f6a:	4849      	ldr	r0, [pc, #292]	; (8001090 <logicCal+0x488>)
 8000f6c:	f000 fb10 	bl	8001590 <LCD_Send_String>
				return 0;
 8000f70:	2300      	movs	r3, #0
 8000f72:	e081      	b.n	8001078 <logicCal+0x470>
	    case '/':
	    	if(num2 == 0)
 8000f74:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d108      	bne.n	8000f8c <logicCal+0x384>
	        {
	        	LCD_Put_Cur(1, 11);
 8000f7a:	210b      	movs	r1, #11
 8000f7c:	2001      	movs	r0, #1
 8000f7e:	f000 fb23 	bl	80015c8 <LCD_Put_Cur>
	        	LCD_Send_String("error");
 8000f82:	4844      	ldr	r0, [pc, #272]	; (8001094 <logicCal+0x48c>)
 8000f84:	f000 fb04 	bl	8001590 <LCD_Send_String>
	        	return 0;
 8000f88:	2300      	movs	r3, #0
 8000f8a:	e075      	b.n	8001078 <logicCal+0x470>
	        }
	    	else if (check1 == 1)
 8000f8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000f8e:	2b01      	cmp	r3, #1
 8000f90:	d111      	bne.n	8000fb6 <logicCal+0x3ae>
	    	{
	    		result2 /= (double)num2;
 8000f92:	4b3b      	ldr	r3, [pc, #236]	; (8001080 <logicCal+0x478>)
 8000f94:	e9d3 4500 	ldrd	r4, r5, [r3]
 8000f98:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8000f9a:	f7ff fa33 	bl	8000404 <__aeabi_i2d>
 8000f9e:	4602      	mov	r2, r0
 8000fa0:	460b      	mov	r3, r1
 8000fa2:	4620      	mov	r0, r4
 8000fa4:	4629      	mov	r1, r5
 8000fa6:	f7ff fbc1 	bl	800072c <__aeabi_ddiv>
 8000faa:	4602      	mov	r2, r0
 8000fac:	460b      	mov	r3, r1
 8000fae:	4934      	ldr	r1, [pc, #208]	; (8001080 <logicCal+0x478>)
 8000fb0:	e9c1 2300 	strd	r2, r3, [r1]
	        else
	        {
	        	check1 = 1;
	            result2 = (double)num1/num2;
	        }
	        break;
 8000fb4:	e014      	b.n	8000fe0 <logicCal+0x3d8>
	        	check1 = 1;
 8000fb6:	2301      	movs	r3, #1
 8000fb8:	633b      	str	r3, [r7, #48]	; 0x30
	            result2 = (double)num1/num2;
 8000fba:	6c78      	ldr	r0, [r7, #68]	; 0x44
 8000fbc:	f7ff fa22 	bl	8000404 <__aeabi_i2d>
 8000fc0:	4604      	mov	r4, r0
 8000fc2:	460d      	mov	r5, r1
 8000fc4:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8000fc6:	f7ff fa1d 	bl	8000404 <__aeabi_i2d>
 8000fca:	4602      	mov	r2, r0
 8000fcc:	460b      	mov	r3, r1
 8000fce:	4620      	mov	r0, r4
 8000fd0:	4629      	mov	r1, r5
 8000fd2:	f7ff fbab 	bl	800072c <__aeabi_ddiv>
 8000fd6:	4602      	mov	r2, r0
 8000fd8:	460b      	mov	r3, r1
 8000fda:	4929      	ldr	r1, [pc, #164]	; (8001080 <logicCal+0x478>)
 8000fdc:	e9c1 2300 	strd	r2, r3, [r1]
	        break;
 8000fe0:	bf00      	nop
	}
	if (check1 == 0)
 8000fe2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000fe4:	2b00      	cmp	r3, #0
 8000fe6:	d107      	bne.n	8000ff8 <logicCal+0x3f0>
	{
		sprintf(final, "%d", result1);
 8000fe8:	4b26      	ldr	r3, [pc, #152]	; (8001084 <logicCal+0x47c>)
 8000fea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000fee:	492a      	ldr	r1, [pc, #168]	; (8001098 <logicCal+0x490>)
 8000ff0:	482a      	ldr	r0, [pc, #168]	; (800109c <logicCal+0x494>)
 8000ff2:	f002 fd57 	bl	8003aa4 <siprintf>
 8000ff6:	e006      	b.n	8001006 <logicCal+0x3fe>
	}
	else
	{
		sprintf(final, "%.6f", result2);
 8000ff8:	4b21      	ldr	r3, [pc, #132]	; (8001080 <logicCal+0x478>)
 8000ffa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000ffe:	4928      	ldr	r1, [pc, #160]	; (80010a0 <logicCal+0x498>)
 8001000:	4826      	ldr	r0, [pc, #152]	; (800109c <logicCal+0x494>)
 8001002:	f002 fd4f 	bl	8003aa4 <siprintf>
	}
	int tmpcount = 0;
 8001006:	2300      	movs	r3, #0
 8001008:	62bb      	str	r3, [r7, #40]	; 0x28
	for(int z = 0; z < 16; z++)
 800100a:	2300      	movs	r3, #0
 800100c:	627b      	str	r3, [r7, #36]	; 0x24
 800100e:	e00c      	b.n	800102a <logicCal+0x422>
	{
		LCD_Put_Cur(1, tmpcount);
 8001010:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001012:	2001      	movs	r0, #1
 8001014:	f000 fad8 	bl	80015c8 <LCD_Put_Cur>
		LCD_Send_Data(' ');
 8001018:	2020      	movs	r0, #32
 800101a:	f000 fa97 	bl	800154c <LCD_Send_Data>
		tmpcount++;
 800101e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001020:	3301      	adds	r3, #1
 8001022:	62bb      	str	r3, [r7, #40]	; 0x28
	for(int z = 0; z < 16; z++)
 8001024:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001026:	3301      	adds	r3, #1
 8001028:	627b      	str	r3, [r7, #36]	; 0x24
 800102a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800102c:	2b0f      	cmp	r3, #15
 800102e:	ddef      	ble.n	8001010 <logicCal+0x408>
	}
	count3 = 0;
 8001030:	2300      	movs	r3, #0
 8001032:	637b      	str	r3, [r7, #52]	; 0x34
	while (final[count3] != '\0') count3++;
 8001034:	e002      	b.n	800103c <logicCal+0x434>
 8001036:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001038:	3301      	adds	r3, #1
 800103a:	637b      	str	r3, [r7, #52]	; 0x34
 800103c:	4a17      	ldr	r2, [pc, #92]	; (800109c <logicCal+0x494>)
 800103e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001040:	4413      	add	r3, r2
 8001042:	781b      	ldrb	r3, [r3, #0]
 8001044:	2b00      	cmp	r3, #0
 8001046:	d1f6      	bne.n	8001036 <logicCal+0x42e>
	LCD_Put_Cur(1, 16 - count3);
 8001048:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800104a:	f1c3 0310 	rsb	r3, r3, #16
 800104e:	4619      	mov	r1, r3
 8001050:	2001      	movs	r0, #1
 8001052:	f000 fab9 	bl	80015c8 <LCD_Put_Cur>
	for(int y = 0; y < 16; y++) LCD_Send_Data(final[y]);
 8001056:	2300      	movs	r3, #0
 8001058:	623b      	str	r3, [r7, #32]
 800105a:	e009      	b.n	8001070 <logicCal+0x468>
 800105c:	4a0f      	ldr	r2, [pc, #60]	; (800109c <logicCal+0x494>)
 800105e:	6a3b      	ldr	r3, [r7, #32]
 8001060:	4413      	add	r3, r2
 8001062:	781b      	ldrb	r3, [r3, #0]
 8001064:	4618      	mov	r0, r3
 8001066:	f000 fa71 	bl	800154c <LCD_Send_Data>
 800106a:	6a3b      	ldr	r3, [r7, #32]
 800106c:	3301      	adds	r3, #1
 800106e:	623b      	str	r3, [r7, #32]
 8001070:	6a3b      	ldr	r3, [r7, #32]
 8001072:	2b0f      	cmp	r3, #15
 8001074:	ddf2      	ble.n	800105c <logicCal+0x454>
	return 1;
 8001076:	2301      	movs	r3, #1
}
 8001078:	4618      	mov	r0, r3
 800107a:	3748      	adds	r7, #72	; 0x48
 800107c:	46bd      	mov	sp, r7
 800107e:	bdb0      	pop	{r4, r5, r7, pc}
 8001080:	20000208 	.word	0x20000208
 8001084:	20000200 	.word	0x20000200
 8001088:	c1e00000 	.word	0xc1e00000
 800108c:	41e00000 	.word	0x41e00000
 8001090:	08005f38 	.word	0x08005f38
 8001094:	08005f30 	.word	0x08005f30
 8001098:	08005f44 	.word	0x08005f44
 800109c:	2000023c 	.word	0x2000023c
 80010a0:	08005f48 	.word	0x08005f48

080010a4 <ClearData>:
char operand[16];
int check = 0, check1 = 0;
int i = 0, j = 0, temp = 0;

void ClearData()
{
 80010a4:	b480      	push	{r7}
 80010a6:	b083      	sub	sp, #12
 80010a8:	af00      	add	r7, sp, #0
	for (int l = 0; l < 16; l++)
 80010aa:	2300      	movs	r3, #0
 80010ac:	607b      	str	r3, [r7, #4]
 80010ae:	e011      	b.n	80010d4 <ClearData+0x30>
	{
		operand1[l] = '\0';
 80010b0:	4a14      	ldr	r2, [pc, #80]	; (8001104 <ClearData+0x60>)
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	4413      	add	r3, r2
 80010b6:	2200      	movs	r2, #0
 80010b8:	701a      	strb	r2, [r3, #0]
		operand2[l] = '\0';
 80010ba:	4a13      	ldr	r2, [pc, #76]	; (8001108 <ClearData+0x64>)
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	4413      	add	r3, r2
 80010c0:	2200      	movs	r2, #0
 80010c2:	701a      	strb	r2, [r3, #0]
		operand[l] = '\0';
 80010c4:	4a11      	ldr	r2, [pc, #68]	; (800110c <ClearData+0x68>)
 80010c6:	687b      	ldr	r3, [r7, #4]
 80010c8:	4413      	add	r3, r2
 80010ca:	2200      	movs	r2, #0
 80010cc:	701a      	strb	r2, [r3, #0]
	for (int l = 0; l < 16; l++)
 80010ce:	687b      	ldr	r3, [r7, #4]
 80010d0:	3301      	adds	r3, #1
 80010d2:	607b      	str	r3, [r7, #4]
 80010d4:	687b      	ldr	r3, [r7, #4]
 80010d6:	2b0f      	cmp	r3, #15
 80010d8:	ddea      	ble.n	80010b0 <ClearData+0xc>
	}
	operator = '\0';
 80010da:	4b0d      	ldr	r3, [pc, #52]	; (8001110 <ClearData+0x6c>)
 80010dc:	2200      	movs	r2, #0
 80010de:	701a      	strb	r2, [r3, #0]
	i = 0; j = 0;
 80010e0:	4b0c      	ldr	r3, [pc, #48]	; (8001114 <ClearData+0x70>)
 80010e2:	2200      	movs	r2, #0
 80010e4:	601a      	str	r2, [r3, #0]
 80010e6:	4b0c      	ldr	r3, [pc, #48]	; (8001118 <ClearData+0x74>)
 80010e8:	2200      	movs	r2, #0
 80010ea:	601a      	str	r2, [r3, #0]
	check =  0; check1 = 1;
 80010ec:	4b0b      	ldr	r3, [pc, #44]	; (800111c <ClearData+0x78>)
 80010ee:	2200      	movs	r2, #0
 80010f0:	601a      	str	r2, [r3, #0]
 80010f2:	4b0b      	ldr	r3, [pc, #44]	; (8001120 <ClearData+0x7c>)
 80010f4:	2201      	movs	r2, #1
 80010f6:	601a      	str	r2, [r3, #0]
}
 80010f8:	bf00      	nop
 80010fa:	370c      	adds	r7, #12
 80010fc:	46bd      	mov	sp, r7
 80010fe:	bc80      	pop	{r7}
 8001100:	4770      	bx	lr
 8001102:	bf00      	nop
 8001104:	2000026c 	.word	0x2000026c
 8001108:	2000024c 	.word	0x2000024c
 800110c:	2000025c 	.word	0x2000025c
 8001110:	20000238 	.word	0x20000238
 8001114:	20000218 	.word	0x20000218
 8001118:	2000021c 	.word	0x2000021c
 800111c:	20000210 	.word	0x20000210
 8001120:	20000214 	.word	0x20000214

08001124 <LCD_add_To_String>:

void LCD_add_To_String(char data)
{
 8001124:	b590      	push	{r4, r7, lr}
 8001126:	b091      	sub	sp, #68	; 0x44
 8001128:	af04      	add	r7, sp, #16
 800112a:	4603      	mov	r3, r0
 800112c:	71fb      	strb	r3, [r7, #7]
	if (temp == 0 && check1 == 0)
 800112e:	4b98      	ldr	r3, [pc, #608]	; (8001390 <LCD_add_To_String+0x26c>)
 8001130:	681b      	ldr	r3, [r3, #0]
 8001132:	2b00      	cmp	r3, #0
 8001134:	d107      	bne.n	8001146 <LCD_add_To_String+0x22>
 8001136:	4b97      	ldr	r3, [pc, #604]	; (8001394 <LCD_add_To_String+0x270>)
 8001138:	681b      	ldr	r3, [r3, #0]
 800113a:	2b00      	cmp	r3, #0
 800113c:	d103      	bne.n	8001146 <LCD_add_To_String+0x22>
	{
		ClearData();
 800113e:	f7ff ffb1 	bl	80010a4 <ClearData>
		LCD_Clear();
 8001142:	f000 fa63 	bl	800160c <LCD_Clear>
	}
	if (data == '#')
 8001146:	79fb      	ldrb	r3, [r7, #7]
 8001148:	2b23      	cmp	r3, #35	; 0x23
 800114a:	d104      	bne.n	8001156 <LCD_add_To_String+0x32>
	{
		ClearData();
 800114c:	f7ff ffaa 	bl	80010a4 <ClearData>
		LCD_Clear();
 8001150:	f000 fa5c 	bl	800160c <LCD_Clear>
		return;
 8001154:	e156      	b.n	8001404 <LCD_add_To_String+0x2e0>
	}
	else if (data == '=')
 8001156:	79fb      	ldrb	r3, [r7, #7]
 8001158:	2b3d      	cmp	r3, #61	; 0x3d
 800115a:	d125      	bne.n	80011a8 <LCD_add_To_String+0x84>
	{
		if ((i + j + 1) > 16)
 800115c:	4b8e      	ldr	r3, [pc, #568]	; (8001398 <LCD_add_To_String+0x274>)
 800115e:	681a      	ldr	r2, [r3, #0]
 8001160:	4b8e      	ldr	r3, [pc, #568]	; (800139c <LCD_add_To_String+0x278>)
 8001162:	681b      	ldr	r3, [r3, #0]
 8001164:	4413      	add	r3, r2
 8001166:	2b0f      	cmp	r3, #15
 8001168:	dd04      	ble.n	8001174 <LCD_add_To_String+0x50>
		{
			ClearData();
 800116a:	f7ff ff9b 	bl	80010a4 <ClearData>
			LCD_Clear();
 800116e:	f000 fa4d 	bl	800160c <LCD_Clear>
			return;
 8001172:	e147      	b.n	8001404 <LCD_add_To_String+0x2e0>
		}
		temp = logicCal(operand1, operand2, operator, check1, temp, i, j);
 8001174:	4b8a      	ldr	r3, [pc, #552]	; (80013a0 <LCD_add_To_String+0x27c>)
 8001176:	7818      	ldrb	r0, [r3, #0]
 8001178:	4b86      	ldr	r3, [pc, #536]	; (8001394 <LCD_add_To_String+0x270>)
 800117a:	681c      	ldr	r4, [r3, #0]
 800117c:	4b84      	ldr	r3, [pc, #528]	; (8001390 <LCD_add_To_String+0x26c>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	4a85      	ldr	r2, [pc, #532]	; (8001398 <LCD_add_To_String+0x274>)
 8001182:	6812      	ldr	r2, [r2, #0]
 8001184:	4985      	ldr	r1, [pc, #532]	; (800139c <LCD_add_To_String+0x278>)
 8001186:	6809      	ldr	r1, [r1, #0]
 8001188:	9102      	str	r1, [sp, #8]
 800118a:	9201      	str	r2, [sp, #4]
 800118c:	9300      	str	r3, [sp, #0]
 800118e:	4623      	mov	r3, r4
 8001190:	4602      	mov	r2, r0
 8001192:	4984      	ldr	r1, [pc, #528]	; (80013a4 <LCD_add_To_String+0x280>)
 8001194:	4884      	ldr	r0, [pc, #528]	; (80013a8 <LCD_add_To_String+0x284>)
 8001196:	f7ff fd37 	bl	8000c08 <logicCal>
 800119a:	4603      	mov	r3, r0
 800119c:	4a7c      	ldr	r2, [pc, #496]	; (8001390 <LCD_add_To_String+0x26c>)
 800119e:	6013      	str	r3, [r2, #0]
		check1 = 0;
 80011a0:	4b7c      	ldr	r3, [pc, #496]	; (8001394 <LCD_add_To_String+0x270>)
 80011a2:	2200      	movs	r2, #0
 80011a4:	601a      	str	r2, [r3, #0]
		return;
 80011a6:	e12d      	b.n	8001404 <LCD_add_To_String+0x2e0>
	}
	else if (temp == 1 && check1 == 0)
 80011a8:	4b79      	ldr	r3, [pc, #484]	; (8001390 <LCD_add_To_String+0x26c>)
 80011aa:	681b      	ldr	r3, [r3, #0]
 80011ac:	2b01      	cmp	r3, #1
 80011ae:	d16c      	bne.n	800128a <LCD_add_To_String+0x166>
 80011b0:	4b78      	ldr	r3, [pc, #480]	; (8001394 <LCD_add_To_String+0x270>)
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	2b00      	cmp	r3, #0
 80011b6:	d168      	bne.n	800128a <LCD_add_To_String+0x166>
	{
		for (int l = 0; l < 16; l++)
 80011b8:	2300      	movs	r3, #0
 80011ba:	62fb      	str	r3, [r7, #44]	; 0x2c
 80011bc:	e011      	b.n	80011e2 <LCD_add_To_String+0xbe>
		{
			operand1[l] = '\0';
 80011be:	4a7a      	ldr	r2, [pc, #488]	; (80013a8 <LCD_add_To_String+0x284>)
 80011c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80011c2:	4413      	add	r3, r2
 80011c4:	2200      	movs	r2, #0
 80011c6:	701a      	strb	r2, [r3, #0]
			operand2[l] = '\0';
 80011c8:	4a76      	ldr	r2, [pc, #472]	; (80013a4 <LCD_add_To_String+0x280>)
 80011ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80011cc:	4413      	add	r3, r2
 80011ce:	2200      	movs	r2, #0
 80011d0:	701a      	strb	r2, [r3, #0]
			operand[l] = '\0';
 80011d2:	4a76      	ldr	r2, [pc, #472]	; (80013ac <LCD_add_To_String+0x288>)
 80011d4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80011d6:	4413      	add	r3, r2
 80011d8:	2200      	movs	r2, #0
 80011da:	701a      	strb	r2, [r3, #0]
		for (int l = 0; l < 16; l++)
 80011dc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80011de:	3301      	adds	r3, #1
 80011e0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80011e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80011e4:	2b0f      	cmp	r3, #15
 80011e6:	ddea      	ble.n	80011be <LCD_add_To_String+0x9a>
		}
		operator = '\0';
 80011e8:	4b6d      	ldr	r3, [pc, #436]	; (80013a0 <LCD_add_To_String+0x27c>)
 80011ea:	2200      	movs	r2, #0
 80011ec:	701a      	strb	r2, [r3, #0]
		int tmpcount = 0;
 80011ee:	2300      	movs	r3, #0
 80011f0:	62bb      	str	r3, [r7, #40]	; 0x28
		for(int z = 0; z < 16; z++)
 80011f2:	2300      	movs	r3, #0
 80011f4:	627b      	str	r3, [r7, #36]	; 0x24
 80011f6:	e00c      	b.n	8001212 <LCD_add_To_String+0xee>
		{
			LCD_Put_Cur(0, tmpcount);
 80011f8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80011fa:	2000      	movs	r0, #0
 80011fc:	f000 f9e4 	bl	80015c8 <LCD_Put_Cur>
			LCD_Send_Data(' ');
 8001200:	2020      	movs	r0, #32
 8001202:	f000 f9a3 	bl	800154c <LCD_Send_Data>
			tmpcount++;
 8001206:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001208:	3301      	adds	r3, #1
 800120a:	62bb      	str	r3, [r7, #40]	; 0x28
		for(int z = 0; z < 16; z++)
 800120c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800120e:	3301      	adds	r3, #1
 8001210:	627b      	str	r3, [r7, #36]	; 0x24
 8001212:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001214:	2b0f      	cmp	r3, #15
 8001216:	ddef      	ble.n	80011f8 <LCD_add_To_String+0xd4>
		}

		for(int z = 0; z < 15; z++)
 8001218:	2300      	movs	r3, #0
 800121a:	623b      	str	r3, [r7, #32]
 800121c:	e00b      	b.n	8001236 <LCD_add_To_String+0x112>
		{
			operand[z] = operand[z+1];
 800121e:	6a3b      	ldr	r3, [r7, #32]
 8001220:	3301      	adds	r3, #1
 8001222:	4a62      	ldr	r2, [pc, #392]	; (80013ac <LCD_add_To_String+0x288>)
 8001224:	5cd1      	ldrb	r1, [r2, r3]
 8001226:	4a61      	ldr	r2, [pc, #388]	; (80013ac <LCD_add_To_String+0x288>)
 8001228:	6a3b      	ldr	r3, [r7, #32]
 800122a:	4413      	add	r3, r2
 800122c:	460a      	mov	r2, r1
 800122e:	701a      	strb	r2, [r3, #0]
		for(int z = 0; z < 15; z++)
 8001230:	6a3b      	ldr	r3, [r7, #32]
 8001232:	3301      	adds	r3, #1
 8001234:	623b      	str	r3, [r7, #32]
 8001236:	6a3b      	ldr	r3, [r7, #32]
 8001238:	2b0e      	cmp	r3, #14
 800123a:	ddf0      	ble.n	800121e <LCD_add_To_String+0xfa>
		}
		operand[15] = data;
 800123c:	4a5b      	ldr	r2, [pc, #364]	; (80013ac <LCD_add_To_String+0x288>)
 800123e:	79fb      	ldrb	r3, [r7, #7]
 8001240:	73d3      	strb	r3, [r2, #15]
		LCD_Put_Cur(0,0);
 8001242:	2100      	movs	r1, #0
 8001244:	2000      	movs	r0, #0
 8001246:	f000 f9bf 	bl	80015c8 <LCD_Put_Cur>
		for(int z = 0; z < 16; z++) LCD_Send_Data(operand[z]);
 800124a:	2300      	movs	r3, #0
 800124c:	61fb      	str	r3, [r7, #28]
 800124e:	e009      	b.n	8001264 <LCD_add_To_String+0x140>
 8001250:	4a56      	ldr	r2, [pc, #344]	; (80013ac <LCD_add_To_String+0x288>)
 8001252:	69fb      	ldr	r3, [r7, #28]
 8001254:	4413      	add	r3, r2
 8001256:	781b      	ldrb	r3, [r3, #0]
 8001258:	4618      	mov	r0, r3
 800125a:	f000 f977 	bl	800154c <LCD_Send_Data>
 800125e:	69fb      	ldr	r3, [r7, #28]
 8001260:	3301      	adds	r3, #1
 8001262:	61fb      	str	r3, [r7, #28]
 8001264:	69fb      	ldr	r3, [r7, #28]
 8001266:	2b0f      	cmp	r3, #15
 8001268:	ddf2      	ble.n	8001250 <LCD_add_To_String+0x12c>

		operator = data;
 800126a:	4a4d      	ldr	r2, [pc, #308]	; (80013a0 <LCD_add_To_String+0x27c>)
 800126c:	79fb      	ldrb	r3, [r7, #7]
 800126e:	7013      	strb	r3, [r2, #0]
		i = 1; j = 0;
 8001270:	4b49      	ldr	r3, [pc, #292]	; (8001398 <LCD_add_To_String+0x274>)
 8001272:	2201      	movs	r2, #1
 8001274:	601a      	str	r2, [r3, #0]
 8001276:	4b49      	ldr	r3, [pc, #292]	; (800139c <LCD_add_To_String+0x278>)
 8001278:	2200      	movs	r2, #0
 800127a:	601a      	str	r2, [r3, #0]
		temp = 2; check = 1;
 800127c:	4b44      	ldr	r3, [pc, #272]	; (8001390 <LCD_add_To_String+0x26c>)
 800127e:	2202      	movs	r2, #2
 8001280:	601a      	str	r2, [r3, #0]
 8001282:	4b4b      	ldr	r3, [pc, #300]	; (80013b0 <LCD_add_To_String+0x28c>)
 8001284:	2201      	movs	r2, #1
 8001286:	601a      	str	r2, [r3, #0]

		return;
 8001288:	e0bc      	b.n	8001404 <LCD_add_To_String+0x2e0>
	}


	if (operator != '\0')
 800128a:	4b45      	ldr	r3, [pc, #276]	; (80013a0 <LCD_add_To_String+0x27c>)
 800128c:	781b      	ldrb	r3, [r3, #0]
 800128e:	2b00      	cmp	r3, #0
 8001290:	d00c      	beq.n	80012ac <LCD_add_To_String+0x188>
	{
		if (data == '+' || data == 'x' || data == '/')
 8001292:	79fb      	ldrb	r3, [r7, #7]
 8001294:	2b2b      	cmp	r3, #43	; 0x2b
 8001296:	d005      	beq.n	80012a4 <LCD_add_To_String+0x180>
 8001298:	79fb      	ldrb	r3, [r7, #7]
 800129a:	2b78      	cmp	r3, #120	; 0x78
 800129c:	d002      	beq.n	80012a4 <LCD_add_To_String+0x180>
 800129e:	79fb      	ldrb	r3, [r7, #7]
 80012a0:	2b2f      	cmp	r3, #47	; 0x2f
 80012a2:	d103      	bne.n	80012ac <LCD_add_To_String+0x188>
		{
			operator = data;
 80012a4:	4a3e      	ldr	r2, [pc, #248]	; (80013a0 <LCD_add_To_String+0x27c>)
 80012a6:	79fb      	ldrb	r3, [r7, #7]
 80012a8:	7013      	strb	r3, [r2, #0]
			return;
 80012aa:	e0ab      	b.n	8001404 <LCD_add_To_String+0x2e0>
		}
	}

	if (data >= '0' && data <= '9')
 80012ac:	79fb      	ldrb	r3, [r7, #7]
 80012ae:	2b2f      	cmp	r3, #47	; 0x2f
 80012b0:	d91c      	bls.n	80012ec <LCD_add_To_String+0x1c8>
 80012b2:	79fb      	ldrb	r3, [r7, #7]
 80012b4:	2b39      	cmp	r3, #57	; 0x39
 80012b6:	d819      	bhi.n	80012ec <LCD_add_To_String+0x1c8>
	{
		if (check == 0)
 80012b8:	4b3d      	ldr	r3, [pc, #244]	; (80013b0 <LCD_add_To_String+0x28c>)
 80012ba:	681b      	ldr	r3, [r3, #0]
 80012bc:	2b00      	cmp	r3, #0
 80012be:	d10a      	bne.n	80012d6 <LCD_add_To_String+0x1b2>
		{
			operand1[i] = data;
 80012c0:	4b35      	ldr	r3, [pc, #212]	; (8001398 <LCD_add_To_String+0x274>)
 80012c2:	681b      	ldr	r3, [r3, #0]
 80012c4:	4938      	ldr	r1, [pc, #224]	; (80013a8 <LCD_add_To_String+0x284>)
 80012c6:	79fa      	ldrb	r2, [r7, #7]
 80012c8:	54ca      	strb	r2, [r1, r3]
			i++;
 80012ca:	4b33      	ldr	r3, [pc, #204]	; (8001398 <LCD_add_To_String+0x274>)
 80012cc:	681b      	ldr	r3, [r3, #0]
 80012ce:	3301      	adds	r3, #1
 80012d0:	4a31      	ldr	r2, [pc, #196]	; (8001398 <LCD_add_To_String+0x274>)
 80012d2:	6013      	str	r3, [r2, #0]
		if (check == 0)
 80012d4:	e058      	b.n	8001388 <LCD_add_To_String+0x264>
		}
		else
		{
			operand2[j] = data;
 80012d6:	4b31      	ldr	r3, [pc, #196]	; (800139c <LCD_add_To_String+0x278>)
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	4932      	ldr	r1, [pc, #200]	; (80013a4 <LCD_add_To_String+0x280>)
 80012dc:	79fa      	ldrb	r2, [r7, #7]
 80012de:	54ca      	strb	r2, [r1, r3]
			j++;
 80012e0:	4b2e      	ldr	r3, [pc, #184]	; (800139c <LCD_add_To_String+0x278>)
 80012e2:	681b      	ldr	r3, [r3, #0]
 80012e4:	3301      	adds	r3, #1
 80012e6:	4a2d      	ldr	r2, [pc, #180]	; (800139c <LCD_add_To_String+0x278>)
 80012e8:	6013      	str	r3, [r2, #0]
		if (check == 0)
 80012ea:	e04d      	b.n	8001388 <LCD_add_To_String+0x264>
		}
	}
	else if (data == '+' || data == '-' || data == 'x' || data == '/')
 80012ec:	79fb      	ldrb	r3, [r7, #7]
 80012ee:	2b2b      	cmp	r3, #43	; 0x2b
 80012f0:	d008      	beq.n	8001304 <LCD_add_To_String+0x1e0>
 80012f2:	79fb      	ldrb	r3, [r7, #7]
 80012f4:	2b2d      	cmp	r3, #45	; 0x2d
 80012f6:	d005      	beq.n	8001304 <LCD_add_To_String+0x1e0>
 80012f8:	79fb      	ldrb	r3, [r7, #7]
 80012fa:	2b78      	cmp	r3, #120	; 0x78
 80012fc:	d002      	beq.n	8001304 <LCD_add_To_String+0x1e0>
 80012fe:	79fb      	ldrb	r3, [r7, #7]
 8001300:	2b2f      	cmp	r3, #47	; 0x2f
 8001302:	d124      	bne.n	800134e <LCD_add_To_String+0x22a>
	{
		if (i == 0)
 8001304:	4b24      	ldr	r3, [pc, #144]	; (8001398 <LCD_add_To_String+0x274>)
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	2b00      	cmp	r3, #0
 800130a:	d10a      	bne.n	8001322 <LCD_add_To_String+0x1fe>
		{
			operand1[i] = data;
 800130c:	4b22      	ldr	r3, [pc, #136]	; (8001398 <LCD_add_To_String+0x274>)
 800130e:	681b      	ldr	r3, [r3, #0]
 8001310:	4925      	ldr	r1, [pc, #148]	; (80013a8 <LCD_add_To_String+0x284>)
 8001312:	79fa      	ldrb	r2, [r7, #7]
 8001314:	54ca      	strb	r2, [r1, r3]
			i++;
 8001316:	4b20      	ldr	r3, [pc, #128]	; (8001398 <LCD_add_To_String+0x274>)
 8001318:	681b      	ldr	r3, [r3, #0]
 800131a:	3301      	adds	r3, #1
 800131c:	4a1e      	ldr	r2, [pc, #120]	; (8001398 <LCD_add_To_String+0x274>)
 800131e:	6013      	str	r3, [r2, #0]
		if (i == 0)
 8001320:	e032      	b.n	8001388 <LCD_add_To_String+0x264>
		}
		else if (check == 0)
 8001322:	4b23      	ldr	r3, [pc, #140]	; (80013b0 <LCD_add_To_String+0x28c>)
 8001324:	681b      	ldr	r3, [r3, #0]
 8001326:	2b00      	cmp	r3, #0
 8001328:	d106      	bne.n	8001338 <LCD_add_To_String+0x214>
		{
			operator = data;
 800132a:	4a1d      	ldr	r2, [pc, #116]	; (80013a0 <LCD_add_To_String+0x27c>)
 800132c:	79fb      	ldrb	r3, [r7, #7]
 800132e:	7013      	strb	r3, [r2, #0]
			check = 1;
 8001330:	4b1f      	ldr	r3, [pc, #124]	; (80013b0 <LCD_add_To_String+0x28c>)
 8001332:	2201      	movs	r2, #1
 8001334:	601a      	str	r2, [r3, #0]
		if (i == 0)
 8001336:	e027      	b.n	8001388 <LCD_add_To_String+0x264>
		}
		else
		{
			operand2[j] = data;
 8001338:	4b18      	ldr	r3, [pc, #96]	; (800139c <LCD_add_To_String+0x278>)
 800133a:	681b      	ldr	r3, [r3, #0]
 800133c:	4919      	ldr	r1, [pc, #100]	; (80013a4 <LCD_add_To_String+0x280>)
 800133e:	79fa      	ldrb	r2, [r7, #7]
 8001340:	54ca      	strb	r2, [r1, r3]
		    j++;
 8001342:	4b16      	ldr	r3, [pc, #88]	; (800139c <LCD_add_To_String+0x278>)
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	3301      	adds	r3, #1
 8001348:	4a14      	ldr	r2, [pc, #80]	; (800139c <LCD_add_To_String+0x278>)
 800134a:	6013      	str	r3, [r2, #0]
		if (i == 0)
 800134c:	e01c      	b.n	8001388 <LCD_add_To_String+0x264>
		}
	}
	else
	{
		int tmpcount = 0;
 800134e:	2300      	movs	r3, #0
 8001350:	61bb      	str	r3, [r7, #24]
		for(int z = 0; z < 16; z++)
 8001352:	2300      	movs	r3, #0
 8001354:	617b      	str	r3, [r7, #20]
 8001356:	e00c      	b.n	8001372 <LCD_add_To_String+0x24e>
		{
			LCD_Put_Cur(1, tmpcount);
 8001358:	69b9      	ldr	r1, [r7, #24]
 800135a:	2001      	movs	r0, #1
 800135c:	f000 f934 	bl	80015c8 <LCD_Put_Cur>
			LCD_Send_Data(' ');
 8001360:	2020      	movs	r0, #32
 8001362:	f000 f8f3 	bl	800154c <LCD_Send_Data>
			tmpcount++;
 8001366:	69bb      	ldr	r3, [r7, #24]
 8001368:	3301      	adds	r3, #1
 800136a:	61bb      	str	r3, [r7, #24]
		for(int z = 0; z < 16; z++)
 800136c:	697b      	ldr	r3, [r7, #20]
 800136e:	3301      	adds	r3, #1
 8001370:	617b      	str	r3, [r7, #20]
 8001372:	697b      	ldr	r3, [r7, #20]
 8001374:	2b0f      	cmp	r3, #15
 8001376:	ddef      	ble.n	8001358 <LCD_add_To_String+0x234>
		}
		LCD_Put_Cur(1, 11);
 8001378:	210b      	movs	r1, #11
 800137a:	2001      	movs	r0, #1
 800137c:	f000 f924 	bl	80015c8 <LCD_Put_Cur>
		LCD_Send_String("error");
 8001380:	480c      	ldr	r0, [pc, #48]	; (80013b4 <LCD_add_To_String+0x290>)
 8001382:	f000 f905 	bl	8001590 <LCD_Send_String>
        return;
 8001386:	e03d      	b.n	8001404 <LCD_add_To_String+0x2e0>
    }

	for(int z = 0; z < 15; z++)
 8001388:	2300      	movs	r3, #0
 800138a:	613b      	str	r3, [r7, #16]
 800138c:	e020      	b.n	80013d0 <LCD_add_To_String+0x2ac>
 800138e:	bf00      	nop
 8001390:	20000220 	.word	0x20000220
 8001394:	20000214 	.word	0x20000214
 8001398:	20000218 	.word	0x20000218
 800139c:	2000021c 	.word	0x2000021c
 80013a0:	20000238 	.word	0x20000238
 80013a4:	2000024c 	.word	0x2000024c
 80013a8:	2000026c 	.word	0x2000026c
 80013ac:	2000025c 	.word	0x2000025c
 80013b0:	20000210 	.word	0x20000210
 80013b4:	08005f50 	.word	0x08005f50
	{
		operand[z] = operand[z+1];
 80013b8:	693b      	ldr	r3, [r7, #16]
 80013ba:	3301      	adds	r3, #1
 80013bc:	4a13      	ldr	r2, [pc, #76]	; (800140c <LCD_add_To_String+0x2e8>)
 80013be:	5cd1      	ldrb	r1, [r2, r3]
 80013c0:	4a12      	ldr	r2, [pc, #72]	; (800140c <LCD_add_To_String+0x2e8>)
 80013c2:	693b      	ldr	r3, [r7, #16]
 80013c4:	4413      	add	r3, r2
 80013c6:	460a      	mov	r2, r1
 80013c8:	701a      	strb	r2, [r3, #0]
	for(int z = 0; z < 15; z++)
 80013ca:	693b      	ldr	r3, [r7, #16]
 80013cc:	3301      	adds	r3, #1
 80013ce:	613b      	str	r3, [r7, #16]
 80013d0:	693b      	ldr	r3, [r7, #16]
 80013d2:	2b0e      	cmp	r3, #14
 80013d4:	ddf0      	ble.n	80013b8 <LCD_add_To_String+0x294>
	}
	operand[15] = data;
 80013d6:	4a0d      	ldr	r2, [pc, #52]	; (800140c <LCD_add_To_String+0x2e8>)
 80013d8:	79fb      	ldrb	r3, [r7, #7]
 80013da:	73d3      	strb	r3, [r2, #15]
	LCD_Put_Cur(0,0);
 80013dc:	2100      	movs	r1, #0
 80013de:	2000      	movs	r0, #0
 80013e0:	f000 f8f2 	bl	80015c8 <LCD_Put_Cur>
	for(int z = 0; z < 16; z++) LCD_Send_Data(operand[z]);
 80013e4:	2300      	movs	r3, #0
 80013e6:	60fb      	str	r3, [r7, #12]
 80013e8:	e009      	b.n	80013fe <LCD_add_To_String+0x2da>
 80013ea:	4a08      	ldr	r2, [pc, #32]	; (800140c <LCD_add_To_String+0x2e8>)
 80013ec:	68fb      	ldr	r3, [r7, #12]
 80013ee:	4413      	add	r3, r2
 80013f0:	781b      	ldrb	r3, [r3, #0]
 80013f2:	4618      	mov	r0, r3
 80013f4:	f000 f8aa 	bl	800154c <LCD_Send_Data>
 80013f8:	68fb      	ldr	r3, [r7, #12]
 80013fa:	3301      	adds	r3, #1
 80013fc:	60fb      	str	r3, [r7, #12]
 80013fe:	68fb      	ldr	r3, [r7, #12]
 8001400:	2b0f      	cmp	r3, #15
 8001402:	ddf2      	ble.n	80013ea <LCD_add_To_String+0x2c6>
}
 8001404:	3734      	adds	r7, #52	; 0x34
 8001406:	46bd      	mov	sp, r7
 8001408:	bd90      	pop	{r4, r7, pc}
 800140a:	bf00      	nop
 800140c:	2000025c 	.word	0x2000025c

08001410 <send8bitstoLCD>:

void send8bitstoLCD(char vee){
 8001410:	b580      	push	{r7, lr}
 8001412:	b08a      	sub	sp, #40	; 0x28
 8001414:	af00      	add	r7, sp, #0
 8001416:	4603      	mov	r3, r0
 8001418:	71fb      	strb	r3, [r7, #7]
	int b0,b1,b2,b3,b4,b5,b6,b7;

	b0 = vee & 1;
 800141a:	79fb      	ldrb	r3, [r7, #7]
 800141c:	f003 0301 	and.w	r3, r3, #1
 8001420:	627b      	str	r3, [r7, #36]	; 0x24
	b1 = vee & 2;
 8001422:	79fb      	ldrb	r3, [r7, #7]
 8001424:	f003 0302 	and.w	r3, r3, #2
 8001428:	623b      	str	r3, [r7, #32]
	b2 = vee & 4;
 800142a:	79fb      	ldrb	r3, [r7, #7]
 800142c:	f003 0304 	and.w	r3, r3, #4
 8001430:	61fb      	str	r3, [r7, #28]
	b3 = vee & 8;
 8001432:	79fb      	ldrb	r3, [r7, #7]
 8001434:	f003 0308 	and.w	r3, r3, #8
 8001438:	61bb      	str	r3, [r7, #24]
	b4 = vee & 16;
 800143a:	79fb      	ldrb	r3, [r7, #7]
 800143c:	f003 0310 	and.w	r3, r3, #16
 8001440:	617b      	str	r3, [r7, #20]
	b5 = vee & 32;
 8001442:	79fb      	ldrb	r3, [r7, #7]
 8001444:	f003 0320 	and.w	r3, r3, #32
 8001448:	613b      	str	r3, [r7, #16]
	b6 = vee & 64;
 800144a:	79fb      	ldrb	r3, [r7, #7]
 800144c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001450:	60fb      	str	r3, [r7, #12]
	b7 = vee & 128;
 8001452:	79fb      	ldrb	r3, [r7, #7]
 8001454:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001458:	60bb      	str	r3, [r7, #8]

	HAL_GPIO_WritePin(D0_GPIO_Port, D0_Pin, b0);
 800145a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800145c:	b2db      	uxtb	r3, r3
 800145e:	461a      	mov	r2, r3
 8001460:	2108      	movs	r1, #8
 8001462:	481d      	ldr	r0, [pc, #116]	; (80014d8 <send8bitstoLCD+0xc8>)
 8001464:	f000 fea7 	bl	80021b6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D1_GPIO_Port, D1_Pin, b1);
 8001468:	6a3b      	ldr	r3, [r7, #32]
 800146a:	b2db      	uxtb	r3, r3
 800146c:	461a      	mov	r2, r3
 800146e:	2104      	movs	r1, #4
 8001470:	4819      	ldr	r0, [pc, #100]	; (80014d8 <send8bitstoLCD+0xc8>)
 8001472:	f000 fea0 	bl	80021b6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D2_GPIO_Port, D2_Pin, b2);
 8001476:	69fb      	ldr	r3, [r7, #28]
 8001478:	b2db      	uxtb	r3, r3
 800147a:	461a      	mov	r2, r3
 800147c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001480:	4815      	ldr	r0, [pc, #84]	; (80014d8 <send8bitstoLCD+0xc8>)
 8001482:	f000 fe98 	bl	80021b6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, b3);
 8001486:	69bb      	ldr	r3, [r7, #24]
 8001488:	b2db      	uxtb	r3, r3
 800148a:	461a      	mov	r2, r3
 800148c:	2108      	movs	r1, #8
 800148e:	4813      	ldr	r0, [pc, #76]	; (80014dc <send8bitstoLCD+0xcc>)
 8001490:	f000 fe91 	bl	80021b6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, b4);
 8001494:	697b      	ldr	r3, [r7, #20]
 8001496:	b2db      	uxtb	r3, r3
 8001498:	461a      	mov	r2, r3
 800149a:	2120      	movs	r1, #32
 800149c:	480f      	ldr	r0, [pc, #60]	; (80014dc <send8bitstoLCD+0xcc>)
 800149e:	f000 fe8a 	bl	80021b6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, b5);
 80014a2:	693b      	ldr	r3, [r7, #16]
 80014a4:	b2db      	uxtb	r3, r3
 80014a6:	461a      	mov	r2, r3
 80014a8:	2110      	movs	r1, #16
 80014aa:	480c      	ldr	r0, [pc, #48]	; (80014dc <send8bitstoLCD+0xcc>)
 80014ac:	f000 fe83 	bl	80021b6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, b6);
 80014b0:	68fb      	ldr	r3, [r7, #12]
 80014b2:	b2db      	uxtb	r3, r3
 80014b4:	461a      	mov	r2, r3
 80014b6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80014ba:	4808      	ldr	r0, [pc, #32]	; (80014dc <send8bitstoLCD+0xcc>)
 80014bc:	f000 fe7b 	bl	80021b6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, b7);
 80014c0:	68bb      	ldr	r3, [r7, #8]
 80014c2:	b2db      	uxtb	r3, r3
 80014c4:	461a      	mov	r2, r3
 80014c6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80014ca:	4803      	ldr	r0, [pc, #12]	; (80014d8 <send8bitstoLCD+0xc8>)
 80014cc:	f000 fe73 	bl	80021b6 <HAL_GPIO_WritePin>

}
 80014d0:	bf00      	nop
 80014d2:	3728      	adds	r7, #40	; 0x28
 80014d4:	46bd      	mov	sp, r7
 80014d6:	bd80      	pop	{r7, pc}
 80014d8:	40010800 	.word	0x40010800
 80014dc:	40010c00 	.word	0x40010c00

080014e0 <LCD_Init>:

void LCD_Init(){
 80014e0:	b580      	push	{r7, lr}
 80014e2:	af00      	add	r7, sp, #0
//	HAL_Delay(10);
	LCD_Send_CMD(0x38);		/* Initialization of 16X2 LCD in 8bit mode */
 80014e4:	2038      	movs	r0, #56	; 0x38
 80014e6:	f000 f80f 	bl	8001508 <LCD_Send_CMD>
	LCD_Send_CMD(0x0C);		/* Display ON Cursor OFF */
 80014ea:	200c      	movs	r0, #12
 80014ec:	f000 f80c 	bl	8001508 <LCD_Send_CMD>
	LCD_Send_CMD(0x06);		/* Auto Increment cursor */
 80014f0:	2006      	movs	r0, #6
 80014f2:	f000 f809 	bl	8001508 <LCD_Send_CMD>
	LCD_Send_CMD(0x01);		/* Clear display */
 80014f6:	2001      	movs	r0, #1
 80014f8:	f000 f806 	bl	8001508 <LCD_Send_CMD>
	LCD_Send_CMD(0x80);		/* Cursor at home position */
 80014fc:	2080      	movs	r0, #128	; 0x80
 80014fe:	f000 f803 	bl	8001508 <LCD_Send_CMD>
}
 8001502:	bf00      	nop
 8001504:	bd80      	pop	{r7, pc}
	...

08001508 <LCD_Send_CMD>:

void LCD_Send_CMD(char cmd){
 8001508:	b580      	push	{r7, lr}
 800150a:	b082      	sub	sp, #8
 800150c:	af00      	add	r7, sp, #0
 800150e:	4603      	mov	r3, r0
 8001510:	71fb      	strb	r3, [r7, #7]
//	HAL_Delay(20);
	HAL_GPIO_WritePin(GPIOB, RS_Pin, 0); // RS = 0 nean send command
 8001512:	2200      	movs	r2, #0
 8001514:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001518:	480b      	ldr	r0, [pc, #44]	; (8001548 <LCD_Send_CMD+0x40>)
 800151a:	f000 fe4c 	bl	80021b6 <HAL_GPIO_WritePin>
	send8bitstoLCD(cmd);
 800151e:	79fb      	ldrb	r3, [r7, #7]
 8001520:	4618      	mov	r0, r3
 8001522:	f7ff ff75 	bl	8001410 <send8bitstoLCD>
	HAL_GPIO_WritePin(GPIOB, EN_Pin, 0);
 8001526:	2200      	movs	r2, #0
 8001528:	f44f 7100 	mov.w	r1, #512	; 0x200
 800152c:	4806      	ldr	r0, [pc, #24]	; (8001548 <LCD_Send_CMD+0x40>)
 800152e:	f000 fe42 	bl	80021b6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, EN_Pin, 1);
 8001532:	2201      	movs	r2, #1
 8001534:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001538:	4803      	ldr	r0, [pc, #12]	; (8001548 <LCD_Send_CMD+0x40>)
 800153a:	f000 fe3c 	bl	80021b6 <HAL_GPIO_WritePin>
}
 800153e:	bf00      	nop
 8001540:	3708      	adds	r7, #8
 8001542:	46bd      	mov	sp, r7
 8001544:	bd80      	pop	{r7, pc}
 8001546:	bf00      	nop
 8001548:	40010c00 	.word	0x40010c00

0800154c <LCD_Send_Data>:

void LCD_Send_Data(char data){
 800154c:	b580      	push	{r7, lr}
 800154e:	b082      	sub	sp, #8
 8001550:	af00      	add	r7, sp, #0
 8001552:	4603      	mov	r3, r0
 8001554:	71fb      	strb	r3, [r7, #7]
//	HAL_Delay(20);
	HAL_GPIO_WritePin(GPIOB, RS_Pin, 1); // RS = 1 send data
 8001556:	2201      	movs	r2, #1
 8001558:	f44f 7180 	mov.w	r1, #256	; 0x100
 800155c:	480b      	ldr	r0, [pc, #44]	; (800158c <LCD_Send_Data+0x40>)
 800155e:	f000 fe2a 	bl	80021b6 <HAL_GPIO_WritePin>
	send8bitstoLCD(data);
 8001562:	79fb      	ldrb	r3, [r7, #7]
 8001564:	4618      	mov	r0, r3
 8001566:	f7ff ff53 	bl	8001410 <send8bitstoLCD>
	HAL_GPIO_WritePin(GPIOB, EN_Pin, 0);
 800156a:	2200      	movs	r2, #0
 800156c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001570:	4806      	ldr	r0, [pc, #24]	; (800158c <LCD_Send_Data+0x40>)
 8001572:	f000 fe20 	bl	80021b6 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, EN_Pin, 1);
 8001576:	2201      	movs	r2, #1
 8001578:	f44f 7100 	mov.w	r1, #512	; 0x200
 800157c:	4803      	ldr	r0, [pc, #12]	; (800158c <LCD_Send_Data+0x40>)
 800157e:	f000 fe1a 	bl	80021b6 <HAL_GPIO_WritePin>
}
 8001582:	bf00      	nop
 8001584:	3708      	adds	r7, #8
 8001586:	46bd      	mov	sp, r7
 8001588:	bd80      	pop	{r7, pc}
 800158a:	bf00      	nop
 800158c:	40010c00 	.word	0x40010c00

08001590 <LCD_Send_String>:

void LCD_Send_String(char *str){
 8001590:	b580      	push	{r7, lr}
 8001592:	b084      	sub	sp, #16
 8001594:	af00      	add	r7, sp, #0
 8001596:	6078      	str	r0, [r7, #4]
	for (int i = 0; str[i] != '\0'; i++){
 8001598:	2300      	movs	r3, #0
 800159a:	60fb      	str	r3, [r7, #12]
 800159c:	e009      	b.n	80015b2 <LCD_Send_String+0x22>
		LCD_Send_Data(str[i]);
 800159e:	68fb      	ldr	r3, [r7, #12]
 80015a0:	687a      	ldr	r2, [r7, #4]
 80015a2:	4413      	add	r3, r2
 80015a4:	781b      	ldrb	r3, [r3, #0]
 80015a6:	4618      	mov	r0, r3
 80015a8:	f7ff ffd0 	bl	800154c <LCD_Send_Data>
	for (int i = 0; str[i] != '\0'; i++){
 80015ac:	68fb      	ldr	r3, [r7, #12]
 80015ae:	3301      	adds	r3, #1
 80015b0:	60fb      	str	r3, [r7, #12]
 80015b2:	68fb      	ldr	r3, [r7, #12]
 80015b4:	687a      	ldr	r2, [r7, #4]
 80015b6:	4413      	add	r3, r2
 80015b8:	781b      	ldrb	r3, [r3, #0]
 80015ba:	2b00      	cmp	r3, #0
 80015bc:	d1ef      	bne.n	800159e <LCD_Send_String+0xe>
	}
}
 80015be:	bf00      	nop
 80015c0:	bf00      	nop
 80015c2:	3710      	adds	r7, #16
 80015c4:	46bd      	mov	sp, r7
 80015c6:	bd80      	pop	{r7, pc}

080015c8 <LCD_Put_Cur>:

void LCD_Put_Cur(int row,int col){
 80015c8:	b580      	push	{r7, lr}
 80015ca:	b082      	sub	sp, #8
 80015cc:	af00      	add	r7, sp, #0
 80015ce:	6078      	str	r0, [r7, #4]
 80015d0:	6039      	str	r1, [r7, #0]
	LCD_Send_CMD(0x3C);		//Activate second line
 80015d2:	203c      	movs	r0, #60	; 0x3c
 80015d4:	f7ff ff98 	bl	8001508 <LCD_Send_CMD>
	switch(row){
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d003      	beq.n	80015e6 <LCD_Put_Cur+0x1e>
 80015de:	687b      	ldr	r3, [r7, #4]
 80015e0:	2b01      	cmp	r3, #1
 80015e2:	d005      	beq.n	80015f0 <LCD_Put_Cur+0x28>
 80015e4:	e009      	b.n	80015fa <LCD_Put_Cur+0x32>
	case 0:
		col |= 0x80;
 80015e6:	683b      	ldr	r3, [r7, #0]
 80015e8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80015ec:	603b      	str	r3, [r7, #0]
		break;
 80015ee:	e004      	b.n	80015fa <LCD_Put_Cur+0x32>
	case 1:
		col |= 0xC0;
 80015f0:	683b      	ldr	r3, [r7, #0]
 80015f2:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80015f6:	603b      	str	r3, [r7, #0]
		break;
 80015f8:	bf00      	nop
	}
	LCD_Send_CMD(col);
 80015fa:	683b      	ldr	r3, [r7, #0]
 80015fc:	b2db      	uxtb	r3, r3
 80015fe:	4618      	mov	r0, r3
 8001600:	f7ff ff82 	bl	8001508 <LCD_Send_CMD>
}
 8001604:	bf00      	nop
 8001606:	3708      	adds	r7, #8
 8001608:	46bd      	mov	sp, r7
 800160a:	bd80      	pop	{r7, pc}

0800160c <LCD_Clear>:

void LCD_Clear(){
 800160c:	b580      	push	{r7, lr}
 800160e:	af00      	add	r7, sp, #0
	LCD_Send_CMD(0x01);
 8001610:	2001      	movs	r0, #1
 8001612:	f7ff ff79 	bl	8001508 <LCD_Send_CMD>
}
 8001616:	bf00      	nop
 8001618:	bd80      	pop	{r7, pc}
	...

0800161c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800161c:	b580      	push	{r7, lr}
 800161e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001620:	f000 faa4 	bl	8001b6c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001624:	f000 f812 	bl	800164c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001628:	f000 f898 	bl	800175c <MX_GPIO_Init>
  MX_TIM2_Init();
 800162c:	f000 f84a 	bl	80016c4 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT (&htim2);
 8001630:	4805      	ldr	r0, [pc, #20]	; (8001648 <main+0x2c>)
 8001632:	f001 fa11 	bl	8002a58 <HAL_TIM_Base_Start_IT>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  LCD_Init();
 8001636:	f7ff ff53 	bl	80014e0 <LCD_Init>
  while (1)
  {
    /* USER CODE END WHILE */
	  Key_Read();
 800163a:	f7ff facb 	bl	8000bd4 <Key_Read>
	  HAL_Delay(300);
 800163e:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8001642:	f000 faf5 	bl	8001c30 <HAL_Delay>
	  Key_Read();
 8001646:	e7f8      	b.n	800163a <main+0x1e>
 8001648:	2000027c 	.word	0x2000027c

0800164c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800164c:	b580      	push	{r7, lr}
 800164e:	b090      	sub	sp, #64	; 0x40
 8001650:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001652:	f107 0318 	add.w	r3, r7, #24
 8001656:	2228      	movs	r2, #40	; 0x28
 8001658:	2100      	movs	r1, #0
 800165a:	4618      	mov	r0, r3
 800165c:	f001 fdba 	bl	80031d4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001660:	1d3b      	adds	r3, r7, #4
 8001662:	2200      	movs	r2, #0
 8001664:	601a      	str	r2, [r3, #0]
 8001666:	605a      	str	r2, [r3, #4]
 8001668:	609a      	str	r2, [r3, #8]
 800166a:	60da      	str	r2, [r3, #12]
 800166c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800166e:	2302      	movs	r3, #2
 8001670:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001672:	2301      	movs	r3, #1
 8001674:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001676:	2310      	movs	r3, #16
 8001678:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800167a:	2300      	movs	r3, #0
 800167c:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800167e:	f107 0318 	add.w	r3, r7, #24
 8001682:	4618      	mov	r0, r3
 8001684:	f000 fdb0 	bl	80021e8 <HAL_RCC_OscConfig>
 8001688:	4603      	mov	r3, r0
 800168a:	2b00      	cmp	r3, #0
 800168c:	d001      	beq.n	8001692 <SystemClock_Config+0x46>
  {
    Error_Handler();
 800168e:	f000 f8d9 	bl	8001844 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001692:	230f      	movs	r3, #15
 8001694:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8001696:	2300      	movs	r3, #0
 8001698:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800169a:	2300      	movs	r3, #0
 800169c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800169e:	2300      	movs	r3, #0
 80016a0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80016a2:	2300      	movs	r3, #0
 80016a4:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80016a6:	1d3b      	adds	r3, r7, #4
 80016a8:	2100      	movs	r1, #0
 80016aa:	4618      	mov	r0, r3
 80016ac:	f001 f81c 	bl	80026e8 <HAL_RCC_ClockConfig>
 80016b0:	4603      	mov	r3, r0
 80016b2:	2b00      	cmp	r3, #0
 80016b4:	d001      	beq.n	80016ba <SystemClock_Config+0x6e>
  {
    Error_Handler();
 80016b6:	f000 f8c5 	bl	8001844 <Error_Handler>
  }
}
 80016ba:	bf00      	nop
 80016bc:	3740      	adds	r7, #64	; 0x40
 80016be:	46bd      	mov	sp, r7
 80016c0:	bd80      	pop	{r7, pc}
	...

080016c4 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80016c4:	b580      	push	{r7, lr}
 80016c6:	b086      	sub	sp, #24
 80016c8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80016ca:	f107 0308 	add.w	r3, r7, #8
 80016ce:	2200      	movs	r2, #0
 80016d0:	601a      	str	r2, [r3, #0]
 80016d2:	605a      	str	r2, [r3, #4]
 80016d4:	609a      	str	r2, [r3, #8]
 80016d6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80016d8:	463b      	mov	r3, r7
 80016da:	2200      	movs	r2, #0
 80016dc:	601a      	str	r2, [r3, #0]
 80016de:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80016e0:	4b1d      	ldr	r3, [pc, #116]	; (8001758 <MX_TIM2_Init+0x94>)
 80016e2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016e6:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 80016e8:	4b1b      	ldr	r3, [pc, #108]	; (8001758 <MX_TIM2_Init+0x94>)
 80016ea:	f641 723f 	movw	r2, #7999	; 0x1f3f
 80016ee:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016f0:	4b19      	ldr	r3, [pc, #100]	; (8001758 <MX_TIM2_Init+0x94>)
 80016f2:	2200      	movs	r2, #0
 80016f4:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 80016f6:	4b18      	ldr	r3, [pc, #96]	; (8001758 <MX_TIM2_Init+0x94>)
 80016f8:	2209      	movs	r2, #9
 80016fa:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80016fc:	4b16      	ldr	r3, [pc, #88]	; (8001758 <MX_TIM2_Init+0x94>)
 80016fe:	2200      	movs	r2, #0
 8001700:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001702:	4b15      	ldr	r3, [pc, #84]	; (8001758 <MX_TIM2_Init+0x94>)
 8001704:	2200      	movs	r2, #0
 8001706:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001708:	4813      	ldr	r0, [pc, #76]	; (8001758 <MX_TIM2_Init+0x94>)
 800170a:	f001 f955 	bl	80029b8 <HAL_TIM_Base_Init>
 800170e:	4603      	mov	r3, r0
 8001710:	2b00      	cmp	r3, #0
 8001712:	d001      	beq.n	8001718 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001714:	f000 f896 	bl	8001844 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001718:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800171c:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800171e:	f107 0308 	add.w	r3, r7, #8
 8001722:	4619      	mov	r1, r3
 8001724:	480c      	ldr	r0, [pc, #48]	; (8001758 <MX_TIM2_Init+0x94>)
 8001726:	f001 faeb 	bl	8002d00 <HAL_TIM_ConfigClockSource>
 800172a:	4603      	mov	r3, r0
 800172c:	2b00      	cmp	r3, #0
 800172e:	d001      	beq.n	8001734 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8001730:	f000 f888 	bl	8001844 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001734:	2300      	movs	r3, #0
 8001736:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001738:	2300      	movs	r3, #0
 800173a:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800173c:	463b      	mov	r3, r7
 800173e:	4619      	mov	r1, r3
 8001740:	4805      	ldr	r0, [pc, #20]	; (8001758 <MX_TIM2_Init+0x94>)
 8001742:	f001 fcb3 	bl	80030ac <HAL_TIMEx_MasterConfigSynchronization>
 8001746:	4603      	mov	r3, r0
 8001748:	2b00      	cmp	r3, #0
 800174a:	d001      	beq.n	8001750 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 800174c:	f000 f87a 	bl	8001844 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8001750:	bf00      	nop
 8001752:	3718      	adds	r7, #24
 8001754:	46bd      	mov	sp, r7
 8001756:	bd80      	pop	{r7, pc}
 8001758:	2000027c 	.word	0x2000027c

0800175c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800175c:	b580      	push	{r7, lr}
 800175e:	b086      	sub	sp, #24
 8001760:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001762:	f107 0308 	add.w	r3, r7, #8
 8001766:	2200      	movs	r2, #0
 8001768:	601a      	str	r2, [r3, #0]
 800176a:	605a      	str	r2, [r3, #4]
 800176c:	609a      	str	r2, [r3, #8]
 800176e:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001770:	4b2c      	ldr	r3, [pc, #176]	; (8001824 <MX_GPIO_Init+0xc8>)
 8001772:	699b      	ldr	r3, [r3, #24]
 8001774:	4a2b      	ldr	r2, [pc, #172]	; (8001824 <MX_GPIO_Init+0xc8>)
 8001776:	f043 0304 	orr.w	r3, r3, #4
 800177a:	6193      	str	r3, [r2, #24]
 800177c:	4b29      	ldr	r3, [pc, #164]	; (8001824 <MX_GPIO_Init+0xc8>)
 800177e:	699b      	ldr	r3, [r3, #24]
 8001780:	f003 0304 	and.w	r3, r3, #4
 8001784:	607b      	str	r3, [r7, #4]
 8001786:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001788:	4b26      	ldr	r3, [pc, #152]	; (8001824 <MX_GPIO_Init+0xc8>)
 800178a:	699b      	ldr	r3, [r3, #24]
 800178c:	4a25      	ldr	r2, [pc, #148]	; (8001824 <MX_GPIO_Init+0xc8>)
 800178e:	f043 0308 	orr.w	r3, r3, #8
 8001792:	6193      	str	r3, [r2, #24]
 8001794:	4b23      	ldr	r3, [pc, #140]	; (8001824 <MX_GPIO_Init+0xc8>)
 8001796:	699b      	ldr	r3, [r3, #24]
 8001798:	f003 0308 	and.w	r3, r3, #8
 800179c:	603b      	str	r3, [r7, #0]
 800179e:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, C0_Pin|C1_Pin|D1_Pin|D0_Pin
 80017a0:	2200      	movs	r2, #0
 80017a2:	f240 511f 	movw	r1, #1311	; 0x51f
 80017a6:	4820      	ldr	r0, [pc, #128]	; (8001828 <MX_GPIO_Init+0xcc>)
 80017a8:	f000 fd05 	bl	80021b6 <HAL_GPIO_WritePin>
                          |C2_Pin|D7_Pin|D2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, C3_Pin|R0_Pin|R1_Pin|D6_Pin
 80017ac:	2200      	movs	r2, #0
 80017ae:	f641 713f 	movw	r1, #7999	; 0x1f3f
 80017b2:	481e      	ldr	r0, [pc, #120]	; (800182c <MX_GPIO_Init+0xd0>)
 80017b4:	f000 fcff 	bl	80021b6 <HAL_GPIO_WritePin>
                          |R2_Pin|R3_Pin|D3_Pin|D5_Pin
                          |D4_Pin|RS_Pin|EN_Pin, GPIO_PIN_RESET);

  HAL_GPIO_WritePin(GPIOB, R0_Pin|R1_Pin|R2_Pin|R3_Pin, GPIO_PIN_SET);
 80017b8:	2201      	movs	r2, #1
 80017ba:	f641 0106 	movw	r1, #6150	; 0x1806
 80017be:	481b      	ldr	r0, [pc, #108]	; (800182c <MX_GPIO_Init+0xd0>)
 80017c0:	f000 fcf9 	bl	80021b6 <HAL_GPIO_WritePin>
  /*Configure GPIO pins : C0_Pin C1_Pin D1_Pin D0_Pin
                           C2_Pin D7_Pin D2_Pin */
  GPIO_InitStruct.Pin = C0_Pin|C1_Pin|D1_Pin|D0_Pin
 80017c4:	f240 531f 	movw	r3, #1311	; 0x51f
 80017c8:	60bb      	str	r3, [r7, #8]
                          |C2_Pin|D7_Pin|D2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017ca:	2301      	movs	r3, #1
 80017cc:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017ce:	2300      	movs	r3, #0
 80017d0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017d2:	2302      	movs	r3, #2
 80017d4:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017d6:	f107 0308 	add.w	r3, r7, #8
 80017da:	4619      	mov	r1, r3
 80017dc:	4812      	ldr	r0, [pc, #72]	; (8001828 <MX_GPIO_Init+0xcc>)
 80017de:	f000 fb59 	bl	8001e94 <HAL_GPIO_Init>

  /*Configure GPIO pins : C3_Pin R0_Pin R1_Pin D6_Pin
                           R2_Pin R3_Pin D3_Pin RS_Pin
                           EN_Pin */
  GPIO_InitStruct.Pin = C3_Pin|R0_Pin|R1_Pin|D6_Pin
 80017e2:	f641 730f 	movw	r3, #7951	; 0x1f0f
 80017e6:	60bb      	str	r3, [r7, #8]
                          |R2_Pin|R3_Pin|D3_Pin|RS_Pin
                          |EN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017e8:	2301      	movs	r3, #1
 80017ea:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017ec:	2300      	movs	r3, #0
 80017ee:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017f0:	2302      	movs	r3, #2
 80017f2:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017f4:	f107 0308 	add.w	r3, r7, #8
 80017f8:	4619      	mov	r1, r3
 80017fa:	480c      	ldr	r0, [pc, #48]	; (800182c <MX_GPIO_Init+0xd0>)
 80017fc:	f000 fb4a 	bl	8001e94 <HAL_GPIO_Init>

  /*Configure GPIO pins : D5_Pin D4_Pin */
  GPIO_InitStruct.Pin = D5_Pin|D4_Pin;
 8001800:	2330      	movs	r3, #48	; 0x30
 8001802:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001804:	2301      	movs	r3, #1
 8001806:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001808:	2302      	movs	r3, #2
 800180a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800180c:	2302      	movs	r3, #2
 800180e:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001810:	f107 0308 	add.w	r3, r7, #8
 8001814:	4619      	mov	r1, r3
 8001816:	4805      	ldr	r0, [pc, #20]	; (800182c <MX_GPIO_Init+0xd0>)
 8001818:	f000 fb3c 	bl	8001e94 <HAL_GPIO_Init>

}
 800181c:	bf00      	nop
 800181e:	3718      	adds	r7, #24
 8001820:	46bd      	mov	sp, r7
 8001822:	bd80      	pop	{r7, pc}
 8001824:	40021000 	.word	0x40021000
 8001828:	40010800 	.word	0x40010800
 800182c:	40010c00 	.word	0x40010c00

08001830 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback ( TIM_HandleTypeDef * htim ){
 8001830:	b580      	push	{r7, lr}
 8001832:	b082      	sub	sp, #8
 8001834:	af00      	add	r7, sp, #0
 8001836:	6078      	str	r0, [r7, #4]
	timerRun();
 8001838:	f000 f80a 	bl	8001850 <timerRun>
}
 800183c:	bf00      	nop
 800183e:	3708      	adds	r7, #8
 8001840:	46bd      	mov	sp, r7
 8001842:	bd80      	pop	{r7, pc}

08001844 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001844:	b480      	push	{r7}
 8001846:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001848:	b672      	cpsid	i
}
 800184a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800184c:	e7fe      	b.n	800184c <Error_Handler+0x8>
	...

08001850 <timerRun>:
 8001850:	b480      	push	{r7}
 8001852:	af00      	add	r7, sp, #0
 8001854:	4b09      	ldr	r3, [pc, #36]	; (800187c <timerRun+0x2c>)
 8001856:	681b      	ldr	r3, [r3, #0]
 8001858:	2b00      	cmp	r3, #0
 800185a:	dd0b      	ble.n	8001874 <timerRun+0x24>
 800185c:	4b07      	ldr	r3, [pc, #28]	; (800187c <timerRun+0x2c>)
 800185e:	681b      	ldr	r3, [r3, #0]
 8001860:	3b01      	subs	r3, #1
 8001862:	4a06      	ldr	r2, [pc, #24]	; (800187c <timerRun+0x2c>)
 8001864:	6013      	str	r3, [r2, #0]
 8001866:	4b05      	ldr	r3, [pc, #20]	; (800187c <timerRun+0x2c>)
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	2b00      	cmp	r3, #0
 800186c:	dc02      	bgt.n	8001874 <timerRun+0x24>
 800186e:	4b04      	ldr	r3, [pc, #16]	; (8001880 <timerRun+0x30>)
 8001870:	2201      	movs	r2, #1
 8001872:	601a      	str	r2, [r3, #0]
 8001874:	bf00      	nop
 8001876:	46bd      	mov	sp, r7
 8001878:	bc80      	pop	{r7}
 800187a:	4770      	bx	lr
 800187c:	20000228 	.word	0x20000228
 8001880:	20000224 	.word	0x20000224

08001884 <HAL_MspInit>:
 8001884:	b480      	push	{r7}
 8001886:	b085      	sub	sp, #20
 8001888:	af00      	add	r7, sp, #0
 800188a:	4b15      	ldr	r3, [pc, #84]	; (80018e0 <HAL_MspInit+0x5c>)
 800188c:	699b      	ldr	r3, [r3, #24]
 800188e:	4a14      	ldr	r2, [pc, #80]	; (80018e0 <HAL_MspInit+0x5c>)
 8001890:	f043 0301 	orr.w	r3, r3, #1
 8001894:	6193      	str	r3, [r2, #24]
 8001896:	4b12      	ldr	r3, [pc, #72]	; (80018e0 <HAL_MspInit+0x5c>)
 8001898:	699b      	ldr	r3, [r3, #24]
 800189a:	f003 0301 	and.w	r3, r3, #1
 800189e:	60bb      	str	r3, [r7, #8]
 80018a0:	68bb      	ldr	r3, [r7, #8]
 80018a2:	4b0f      	ldr	r3, [pc, #60]	; (80018e0 <HAL_MspInit+0x5c>)
 80018a4:	69db      	ldr	r3, [r3, #28]
 80018a6:	4a0e      	ldr	r2, [pc, #56]	; (80018e0 <HAL_MspInit+0x5c>)
 80018a8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80018ac:	61d3      	str	r3, [r2, #28]
 80018ae:	4b0c      	ldr	r3, [pc, #48]	; (80018e0 <HAL_MspInit+0x5c>)
 80018b0:	69db      	ldr	r3, [r3, #28]
 80018b2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80018b6:	607b      	str	r3, [r7, #4]
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	4b0a      	ldr	r3, [pc, #40]	; (80018e4 <HAL_MspInit+0x60>)
 80018bc:	685b      	ldr	r3, [r3, #4]
 80018be:	60fb      	str	r3, [r7, #12]
 80018c0:	68fb      	ldr	r3, [r7, #12]
 80018c2:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80018c6:	60fb      	str	r3, [r7, #12]
 80018c8:	68fb      	ldr	r3, [r7, #12]
 80018ca:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80018ce:	60fb      	str	r3, [r7, #12]
 80018d0:	4a04      	ldr	r2, [pc, #16]	; (80018e4 <HAL_MspInit+0x60>)
 80018d2:	68fb      	ldr	r3, [r7, #12]
 80018d4:	6053      	str	r3, [r2, #4]
 80018d6:	bf00      	nop
 80018d8:	3714      	adds	r7, #20
 80018da:	46bd      	mov	sp, r7
 80018dc:	bc80      	pop	{r7}
 80018de:	4770      	bx	lr
 80018e0:	40021000 	.word	0x40021000
 80018e4:	40010000 	.word	0x40010000

080018e8 <HAL_TIM_Base_MspInit>:
 80018e8:	b580      	push	{r7, lr}
 80018ea:	b084      	sub	sp, #16
 80018ec:	af00      	add	r7, sp, #0
 80018ee:	6078      	str	r0, [r7, #4]
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	681b      	ldr	r3, [r3, #0]
 80018f4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80018f8:	d113      	bne.n	8001922 <HAL_TIM_Base_MspInit+0x3a>
 80018fa:	4b0c      	ldr	r3, [pc, #48]	; (800192c <HAL_TIM_Base_MspInit+0x44>)
 80018fc:	69db      	ldr	r3, [r3, #28]
 80018fe:	4a0b      	ldr	r2, [pc, #44]	; (800192c <HAL_TIM_Base_MspInit+0x44>)
 8001900:	f043 0301 	orr.w	r3, r3, #1
 8001904:	61d3      	str	r3, [r2, #28]
 8001906:	4b09      	ldr	r3, [pc, #36]	; (800192c <HAL_TIM_Base_MspInit+0x44>)
 8001908:	69db      	ldr	r3, [r3, #28]
 800190a:	f003 0301 	and.w	r3, r3, #1
 800190e:	60fb      	str	r3, [r7, #12]
 8001910:	68fb      	ldr	r3, [r7, #12]
 8001912:	2200      	movs	r2, #0
 8001914:	2100      	movs	r1, #0
 8001916:	201c      	movs	r0, #28
 8001918:	f000 fa85 	bl	8001e26 <HAL_NVIC_SetPriority>
 800191c:	201c      	movs	r0, #28
 800191e:	f000 fa9e 	bl	8001e5e <HAL_NVIC_EnableIRQ>
 8001922:	bf00      	nop
 8001924:	3710      	adds	r7, #16
 8001926:	46bd      	mov	sp, r7
 8001928:	bd80      	pop	{r7, pc}
 800192a:	bf00      	nop
 800192c:	40021000 	.word	0x40021000

08001930 <NMI_Handler>:
 8001930:	b480      	push	{r7}
 8001932:	af00      	add	r7, sp, #0
 8001934:	e7fe      	b.n	8001934 <NMI_Handler+0x4>

08001936 <HardFault_Handler>:
 8001936:	b480      	push	{r7}
 8001938:	af00      	add	r7, sp, #0
 800193a:	e7fe      	b.n	800193a <HardFault_Handler+0x4>

0800193c <MemManage_Handler>:
 800193c:	b480      	push	{r7}
 800193e:	af00      	add	r7, sp, #0
 8001940:	e7fe      	b.n	8001940 <MemManage_Handler+0x4>

08001942 <BusFault_Handler>:
 8001942:	b480      	push	{r7}
 8001944:	af00      	add	r7, sp, #0
 8001946:	e7fe      	b.n	8001946 <BusFault_Handler+0x4>

08001948 <UsageFault_Handler>:
 8001948:	b480      	push	{r7}
 800194a:	af00      	add	r7, sp, #0
 800194c:	e7fe      	b.n	800194c <UsageFault_Handler+0x4>

0800194e <SVC_Handler>:
 800194e:	b480      	push	{r7}
 8001950:	af00      	add	r7, sp, #0
 8001952:	bf00      	nop
 8001954:	46bd      	mov	sp, r7
 8001956:	bc80      	pop	{r7}
 8001958:	4770      	bx	lr

0800195a <DebugMon_Handler>:
 800195a:	b480      	push	{r7}
 800195c:	af00      	add	r7, sp, #0
 800195e:	bf00      	nop
 8001960:	46bd      	mov	sp, r7
 8001962:	bc80      	pop	{r7}
 8001964:	4770      	bx	lr

08001966 <PendSV_Handler>:
 8001966:	b480      	push	{r7}
 8001968:	af00      	add	r7, sp, #0
 800196a:	bf00      	nop
 800196c:	46bd      	mov	sp, r7
 800196e:	bc80      	pop	{r7}
 8001970:	4770      	bx	lr

08001972 <SysTick_Handler>:
 8001972:	b580      	push	{r7, lr}
 8001974:	af00      	add	r7, sp, #0
 8001976:	f000 f93f 	bl	8001bf8 <HAL_IncTick>
 800197a:	bf00      	nop
 800197c:	bd80      	pop	{r7, pc}
	...

08001980 <TIM2_IRQHandler>:
 8001980:	b580      	push	{r7, lr}
 8001982:	af00      	add	r7, sp, #0
 8001984:	4802      	ldr	r0, [pc, #8]	; (8001990 <TIM2_IRQHandler+0x10>)
 8001986:	f001 f8b3 	bl	8002af0 <HAL_TIM_IRQHandler>
 800198a:	bf00      	nop
 800198c:	bd80      	pop	{r7, pc}
 800198e:	bf00      	nop
 8001990:	2000027c 	.word	0x2000027c

08001994 <_getpid>:
 8001994:	b480      	push	{r7}
 8001996:	af00      	add	r7, sp, #0
 8001998:	2301      	movs	r3, #1
 800199a:	4618      	mov	r0, r3
 800199c:	46bd      	mov	sp, r7
 800199e:	bc80      	pop	{r7}
 80019a0:	4770      	bx	lr

080019a2 <_kill>:
 80019a2:	b580      	push	{r7, lr}
 80019a4:	b082      	sub	sp, #8
 80019a6:	af00      	add	r7, sp, #0
 80019a8:	6078      	str	r0, [r7, #4]
 80019aa:	6039      	str	r1, [r7, #0]
 80019ac:	f001 fbe8 	bl	8003180 <__errno>
 80019b0:	4603      	mov	r3, r0
 80019b2:	2216      	movs	r2, #22
 80019b4:	601a      	str	r2, [r3, #0]
 80019b6:	f04f 33ff 	mov.w	r3, #4294967295
 80019ba:	4618      	mov	r0, r3
 80019bc:	3708      	adds	r7, #8
 80019be:	46bd      	mov	sp, r7
 80019c0:	bd80      	pop	{r7, pc}

080019c2 <_exit>:
 80019c2:	b580      	push	{r7, lr}
 80019c4:	b082      	sub	sp, #8
 80019c6:	af00      	add	r7, sp, #0
 80019c8:	6078      	str	r0, [r7, #4]
 80019ca:	f04f 31ff 	mov.w	r1, #4294967295
 80019ce:	6878      	ldr	r0, [r7, #4]
 80019d0:	f7ff ffe7 	bl	80019a2 <_kill>
 80019d4:	e7fe      	b.n	80019d4 <_exit+0x12>

080019d6 <_read>:
 80019d6:	b580      	push	{r7, lr}
 80019d8:	b086      	sub	sp, #24
 80019da:	af00      	add	r7, sp, #0
 80019dc:	60f8      	str	r0, [r7, #12]
 80019de:	60b9      	str	r1, [r7, #8]
 80019e0:	607a      	str	r2, [r7, #4]
 80019e2:	2300      	movs	r3, #0
 80019e4:	617b      	str	r3, [r7, #20]
 80019e6:	e00a      	b.n	80019fe <_read+0x28>
 80019e8:	f3af 8000 	nop.w
 80019ec:	4601      	mov	r1, r0
 80019ee:	68bb      	ldr	r3, [r7, #8]
 80019f0:	1c5a      	adds	r2, r3, #1
 80019f2:	60ba      	str	r2, [r7, #8]
 80019f4:	b2ca      	uxtb	r2, r1
 80019f6:	701a      	strb	r2, [r3, #0]
 80019f8:	697b      	ldr	r3, [r7, #20]
 80019fa:	3301      	adds	r3, #1
 80019fc:	617b      	str	r3, [r7, #20]
 80019fe:	697a      	ldr	r2, [r7, #20]
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	429a      	cmp	r2, r3
 8001a04:	dbf0      	blt.n	80019e8 <_read+0x12>
 8001a06:	687b      	ldr	r3, [r7, #4]
 8001a08:	4618      	mov	r0, r3
 8001a0a:	3718      	adds	r7, #24
 8001a0c:	46bd      	mov	sp, r7
 8001a0e:	bd80      	pop	{r7, pc}

08001a10 <_write>:
 8001a10:	b580      	push	{r7, lr}
 8001a12:	b086      	sub	sp, #24
 8001a14:	af00      	add	r7, sp, #0
 8001a16:	60f8      	str	r0, [r7, #12]
 8001a18:	60b9      	str	r1, [r7, #8]
 8001a1a:	607a      	str	r2, [r7, #4]
 8001a1c:	2300      	movs	r3, #0
 8001a1e:	617b      	str	r3, [r7, #20]
 8001a20:	e009      	b.n	8001a36 <_write+0x26>
 8001a22:	68bb      	ldr	r3, [r7, #8]
 8001a24:	1c5a      	adds	r2, r3, #1
 8001a26:	60ba      	str	r2, [r7, #8]
 8001a28:	781b      	ldrb	r3, [r3, #0]
 8001a2a:	4618      	mov	r0, r3
 8001a2c:	f3af 8000 	nop.w
 8001a30:	697b      	ldr	r3, [r7, #20]
 8001a32:	3301      	adds	r3, #1
 8001a34:	617b      	str	r3, [r7, #20]
 8001a36:	697a      	ldr	r2, [r7, #20]
 8001a38:	687b      	ldr	r3, [r7, #4]
 8001a3a:	429a      	cmp	r2, r3
 8001a3c:	dbf1      	blt.n	8001a22 <_write+0x12>
 8001a3e:	687b      	ldr	r3, [r7, #4]
 8001a40:	4618      	mov	r0, r3
 8001a42:	3718      	adds	r7, #24
 8001a44:	46bd      	mov	sp, r7
 8001a46:	bd80      	pop	{r7, pc}

08001a48 <_close>:
 8001a48:	b480      	push	{r7}
 8001a4a:	b083      	sub	sp, #12
 8001a4c:	af00      	add	r7, sp, #0
 8001a4e:	6078      	str	r0, [r7, #4]
 8001a50:	f04f 33ff 	mov.w	r3, #4294967295
 8001a54:	4618      	mov	r0, r3
 8001a56:	370c      	adds	r7, #12
 8001a58:	46bd      	mov	sp, r7
 8001a5a:	bc80      	pop	{r7}
 8001a5c:	4770      	bx	lr

08001a5e <_fstat>:
 8001a5e:	b480      	push	{r7}
 8001a60:	b083      	sub	sp, #12
 8001a62:	af00      	add	r7, sp, #0
 8001a64:	6078      	str	r0, [r7, #4]
 8001a66:	6039      	str	r1, [r7, #0]
 8001a68:	683b      	ldr	r3, [r7, #0]
 8001a6a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001a6e:	605a      	str	r2, [r3, #4]
 8001a70:	2300      	movs	r3, #0
 8001a72:	4618      	mov	r0, r3
 8001a74:	370c      	adds	r7, #12
 8001a76:	46bd      	mov	sp, r7
 8001a78:	bc80      	pop	{r7}
 8001a7a:	4770      	bx	lr

08001a7c <_isatty>:
 8001a7c:	b480      	push	{r7}
 8001a7e:	b083      	sub	sp, #12
 8001a80:	af00      	add	r7, sp, #0
 8001a82:	6078      	str	r0, [r7, #4]
 8001a84:	2301      	movs	r3, #1
 8001a86:	4618      	mov	r0, r3
 8001a88:	370c      	adds	r7, #12
 8001a8a:	46bd      	mov	sp, r7
 8001a8c:	bc80      	pop	{r7}
 8001a8e:	4770      	bx	lr

08001a90 <_lseek>:
 8001a90:	b480      	push	{r7}
 8001a92:	b085      	sub	sp, #20
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	60f8      	str	r0, [r7, #12]
 8001a98:	60b9      	str	r1, [r7, #8]
 8001a9a:	607a      	str	r2, [r7, #4]
 8001a9c:	2300      	movs	r3, #0
 8001a9e:	4618      	mov	r0, r3
 8001aa0:	3714      	adds	r7, #20
 8001aa2:	46bd      	mov	sp, r7
 8001aa4:	bc80      	pop	{r7}
 8001aa6:	4770      	bx	lr

08001aa8 <_sbrk>:
 8001aa8:	b580      	push	{r7, lr}
 8001aaa:	b086      	sub	sp, #24
 8001aac:	af00      	add	r7, sp, #0
 8001aae:	6078      	str	r0, [r7, #4]
 8001ab0:	4a14      	ldr	r2, [pc, #80]	; (8001b04 <_sbrk+0x5c>)
 8001ab2:	4b15      	ldr	r3, [pc, #84]	; (8001b08 <_sbrk+0x60>)
 8001ab4:	1ad3      	subs	r3, r2, r3
 8001ab6:	617b      	str	r3, [r7, #20]
 8001ab8:	697b      	ldr	r3, [r7, #20]
 8001aba:	613b      	str	r3, [r7, #16]
 8001abc:	4b13      	ldr	r3, [pc, #76]	; (8001b0c <_sbrk+0x64>)
 8001abe:	681b      	ldr	r3, [r3, #0]
 8001ac0:	2b00      	cmp	r3, #0
 8001ac2:	d102      	bne.n	8001aca <_sbrk+0x22>
 8001ac4:	4b11      	ldr	r3, [pc, #68]	; (8001b0c <_sbrk+0x64>)
 8001ac6:	4a12      	ldr	r2, [pc, #72]	; (8001b10 <_sbrk+0x68>)
 8001ac8:	601a      	str	r2, [r3, #0]
 8001aca:	4b10      	ldr	r3, [pc, #64]	; (8001b0c <_sbrk+0x64>)
 8001acc:	681a      	ldr	r2, [r3, #0]
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	4413      	add	r3, r2
 8001ad2:	693a      	ldr	r2, [r7, #16]
 8001ad4:	429a      	cmp	r2, r3
 8001ad6:	d207      	bcs.n	8001ae8 <_sbrk+0x40>
 8001ad8:	f001 fb52 	bl	8003180 <__errno>
 8001adc:	4603      	mov	r3, r0
 8001ade:	220c      	movs	r2, #12
 8001ae0:	601a      	str	r2, [r3, #0]
 8001ae2:	f04f 33ff 	mov.w	r3, #4294967295
 8001ae6:	e009      	b.n	8001afc <_sbrk+0x54>
 8001ae8:	4b08      	ldr	r3, [pc, #32]	; (8001b0c <_sbrk+0x64>)
 8001aea:	681b      	ldr	r3, [r3, #0]
 8001aec:	60fb      	str	r3, [r7, #12]
 8001aee:	4b07      	ldr	r3, [pc, #28]	; (8001b0c <_sbrk+0x64>)
 8001af0:	681a      	ldr	r2, [r3, #0]
 8001af2:	687b      	ldr	r3, [r7, #4]
 8001af4:	4413      	add	r3, r2
 8001af6:	4a05      	ldr	r2, [pc, #20]	; (8001b0c <_sbrk+0x64>)
 8001af8:	6013      	str	r3, [r2, #0]
 8001afa:	68fb      	ldr	r3, [r7, #12]
 8001afc:	4618      	mov	r0, r3
 8001afe:	3718      	adds	r7, #24
 8001b00:	46bd      	mov	sp, r7
 8001b02:	bd80      	pop	{r7, pc}
 8001b04:	20002800 	.word	0x20002800
 8001b08:	00000400 	.word	0x00000400
 8001b0c:	2000022c 	.word	0x2000022c
 8001b10:	200002d8 	.word	0x200002d8

08001b14 <SystemInit>:
 8001b14:	b480      	push	{r7}
 8001b16:	af00      	add	r7, sp, #0
 8001b18:	bf00      	nop
 8001b1a:	46bd      	mov	sp, r7
 8001b1c:	bc80      	pop	{r7}
 8001b1e:	4770      	bx	lr

08001b20 <Reset_Handler>:
 8001b20:	480c      	ldr	r0, [pc, #48]	; (8001b54 <LoopFillZerobss+0x12>)
 8001b22:	490d      	ldr	r1, [pc, #52]	; (8001b58 <LoopFillZerobss+0x16>)
 8001b24:	4a0d      	ldr	r2, [pc, #52]	; (8001b5c <LoopFillZerobss+0x1a>)
 8001b26:	2300      	movs	r3, #0
 8001b28:	e002      	b.n	8001b30 <LoopCopyDataInit>

08001b2a <CopyDataInit>:
 8001b2a:	58d4      	ldr	r4, [r2, r3]
 8001b2c:	50c4      	str	r4, [r0, r3]
 8001b2e:	3304      	adds	r3, #4

08001b30 <LoopCopyDataInit>:
 8001b30:	18c4      	adds	r4, r0, r3
 8001b32:	428c      	cmp	r4, r1
 8001b34:	d3f9      	bcc.n	8001b2a <CopyDataInit>
 8001b36:	4a0a      	ldr	r2, [pc, #40]	; (8001b60 <LoopFillZerobss+0x1e>)
 8001b38:	4c0a      	ldr	r4, [pc, #40]	; (8001b64 <LoopFillZerobss+0x22>)
 8001b3a:	2300      	movs	r3, #0
 8001b3c:	e001      	b.n	8001b42 <LoopFillZerobss>

08001b3e <FillZerobss>:
 8001b3e:	6013      	str	r3, [r2, #0]
 8001b40:	3204      	adds	r2, #4

08001b42 <LoopFillZerobss>:
 8001b42:	42a2      	cmp	r2, r4
 8001b44:	d3fb      	bcc.n	8001b3e <FillZerobss>
 8001b46:	f7ff ffe5 	bl	8001b14 <SystemInit>
 8001b4a:	f001 fb1f 	bl	800318c <__libc_init_array>
 8001b4e:	f7ff fd65 	bl	800161c <main>
 8001b52:	4770      	bx	lr
 8001b54:	20000000 	.word	0x20000000
 8001b58:	200001dc 	.word	0x200001dc
 8001b5c:	08006374 	.word	0x08006374
 8001b60:	200001e0 	.word	0x200001e0
 8001b64:	200002d8 	.word	0x200002d8

08001b68 <ADC1_2_IRQHandler>:
 8001b68:	e7fe      	b.n	8001b68 <ADC1_2_IRQHandler>
	...

08001b6c <HAL_Init>:
 8001b6c:	b580      	push	{r7, lr}
 8001b6e:	af00      	add	r7, sp, #0
 8001b70:	4b08      	ldr	r3, [pc, #32]	; (8001b94 <HAL_Init+0x28>)
 8001b72:	681b      	ldr	r3, [r3, #0]
 8001b74:	4a07      	ldr	r2, [pc, #28]	; (8001b94 <HAL_Init+0x28>)
 8001b76:	f043 0310 	orr.w	r3, r3, #16
 8001b7a:	6013      	str	r3, [r2, #0]
 8001b7c:	2003      	movs	r0, #3
 8001b7e:	f000 f947 	bl	8001e10 <HAL_NVIC_SetPriorityGrouping>
 8001b82:	200f      	movs	r0, #15
 8001b84:	f000 f808 	bl	8001b98 <HAL_InitTick>
 8001b88:	f7ff fe7c 	bl	8001884 <HAL_MspInit>
 8001b8c:	2300      	movs	r3, #0
 8001b8e:	4618      	mov	r0, r3
 8001b90:	bd80      	pop	{r7, pc}
 8001b92:	bf00      	nop
 8001b94:	40022000 	.word	0x40022000

08001b98 <HAL_InitTick>:
 8001b98:	b580      	push	{r7, lr}
 8001b9a:	b082      	sub	sp, #8
 8001b9c:	af00      	add	r7, sp, #0
 8001b9e:	6078      	str	r0, [r7, #4]
 8001ba0:	4b12      	ldr	r3, [pc, #72]	; (8001bec <HAL_InitTick+0x54>)
 8001ba2:	681a      	ldr	r2, [r3, #0]
 8001ba4:	4b12      	ldr	r3, [pc, #72]	; (8001bf0 <HAL_InitTick+0x58>)
 8001ba6:	781b      	ldrb	r3, [r3, #0]
 8001ba8:	4619      	mov	r1, r3
 8001baa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001bae:	fbb3 f3f1 	udiv	r3, r3, r1
 8001bb2:	fbb2 f3f3 	udiv	r3, r2, r3
 8001bb6:	4618      	mov	r0, r3
 8001bb8:	f000 f95f 	bl	8001e7a <HAL_SYSTICK_Config>
 8001bbc:	4603      	mov	r3, r0
 8001bbe:	2b00      	cmp	r3, #0
 8001bc0:	d001      	beq.n	8001bc6 <HAL_InitTick+0x2e>
 8001bc2:	2301      	movs	r3, #1
 8001bc4:	e00e      	b.n	8001be4 <HAL_InitTick+0x4c>
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	2b0f      	cmp	r3, #15
 8001bca:	d80a      	bhi.n	8001be2 <HAL_InitTick+0x4a>
 8001bcc:	2200      	movs	r2, #0
 8001bce:	6879      	ldr	r1, [r7, #4]
 8001bd0:	f04f 30ff 	mov.w	r0, #4294967295
 8001bd4:	f000 f927 	bl	8001e26 <HAL_NVIC_SetPriority>
 8001bd8:	4a06      	ldr	r2, [pc, #24]	; (8001bf4 <HAL_InitTick+0x5c>)
 8001bda:	687b      	ldr	r3, [r7, #4]
 8001bdc:	6013      	str	r3, [r2, #0]
 8001bde:	2300      	movs	r3, #0
 8001be0:	e000      	b.n	8001be4 <HAL_InitTick+0x4c>
 8001be2:	2301      	movs	r3, #1
 8001be4:	4618      	mov	r0, r3
 8001be6:	3708      	adds	r7, #8
 8001be8:	46bd      	mov	sp, r7
 8001bea:	bd80      	pop	{r7, pc}
 8001bec:	20000000 	.word	0x20000000
 8001bf0:	20000008 	.word	0x20000008
 8001bf4:	20000004 	.word	0x20000004

08001bf8 <HAL_IncTick>:
 8001bf8:	b480      	push	{r7}
 8001bfa:	af00      	add	r7, sp, #0
 8001bfc:	4b05      	ldr	r3, [pc, #20]	; (8001c14 <HAL_IncTick+0x1c>)
 8001bfe:	781b      	ldrb	r3, [r3, #0]
 8001c00:	461a      	mov	r2, r3
 8001c02:	4b05      	ldr	r3, [pc, #20]	; (8001c18 <HAL_IncTick+0x20>)
 8001c04:	681b      	ldr	r3, [r3, #0]
 8001c06:	4413      	add	r3, r2
 8001c08:	4a03      	ldr	r2, [pc, #12]	; (8001c18 <HAL_IncTick+0x20>)
 8001c0a:	6013      	str	r3, [r2, #0]
 8001c0c:	bf00      	nop
 8001c0e:	46bd      	mov	sp, r7
 8001c10:	bc80      	pop	{r7}
 8001c12:	4770      	bx	lr
 8001c14:	20000008 	.word	0x20000008
 8001c18:	200002c4 	.word	0x200002c4

08001c1c <HAL_GetTick>:
 8001c1c:	b480      	push	{r7}
 8001c1e:	af00      	add	r7, sp, #0
 8001c20:	4b02      	ldr	r3, [pc, #8]	; (8001c2c <HAL_GetTick+0x10>)
 8001c22:	681b      	ldr	r3, [r3, #0]
 8001c24:	4618      	mov	r0, r3
 8001c26:	46bd      	mov	sp, r7
 8001c28:	bc80      	pop	{r7}
 8001c2a:	4770      	bx	lr
 8001c2c:	200002c4 	.word	0x200002c4

08001c30 <HAL_Delay>:
 8001c30:	b580      	push	{r7, lr}
 8001c32:	b084      	sub	sp, #16
 8001c34:	af00      	add	r7, sp, #0
 8001c36:	6078      	str	r0, [r7, #4]
 8001c38:	f7ff fff0 	bl	8001c1c <HAL_GetTick>
 8001c3c:	60b8      	str	r0, [r7, #8]
 8001c3e:	687b      	ldr	r3, [r7, #4]
 8001c40:	60fb      	str	r3, [r7, #12]
 8001c42:	68fb      	ldr	r3, [r7, #12]
 8001c44:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001c48:	d005      	beq.n	8001c56 <HAL_Delay+0x26>
 8001c4a:	4b0a      	ldr	r3, [pc, #40]	; (8001c74 <HAL_Delay+0x44>)
 8001c4c:	781b      	ldrb	r3, [r3, #0]
 8001c4e:	461a      	mov	r2, r3
 8001c50:	68fb      	ldr	r3, [r7, #12]
 8001c52:	4413      	add	r3, r2
 8001c54:	60fb      	str	r3, [r7, #12]
 8001c56:	bf00      	nop
 8001c58:	f7ff ffe0 	bl	8001c1c <HAL_GetTick>
 8001c5c:	4602      	mov	r2, r0
 8001c5e:	68bb      	ldr	r3, [r7, #8]
 8001c60:	1ad3      	subs	r3, r2, r3
 8001c62:	68fa      	ldr	r2, [r7, #12]
 8001c64:	429a      	cmp	r2, r3
 8001c66:	d8f7      	bhi.n	8001c58 <HAL_Delay+0x28>
 8001c68:	bf00      	nop
 8001c6a:	bf00      	nop
 8001c6c:	3710      	adds	r7, #16
 8001c6e:	46bd      	mov	sp, r7
 8001c70:	bd80      	pop	{r7, pc}
 8001c72:	bf00      	nop
 8001c74:	20000008 	.word	0x20000008

08001c78 <__NVIC_SetPriorityGrouping>:
 8001c78:	b480      	push	{r7}
 8001c7a:	b085      	sub	sp, #20
 8001c7c:	af00      	add	r7, sp, #0
 8001c7e:	6078      	str	r0, [r7, #4]
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	f003 0307 	and.w	r3, r3, #7
 8001c86:	60fb      	str	r3, [r7, #12]
 8001c88:	4b0c      	ldr	r3, [pc, #48]	; (8001cbc <__NVIC_SetPriorityGrouping+0x44>)
 8001c8a:	68db      	ldr	r3, [r3, #12]
 8001c8c:	60bb      	str	r3, [r7, #8]
 8001c8e:	68ba      	ldr	r2, [r7, #8]
 8001c90:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001c94:	4013      	ands	r3, r2
 8001c96:	60bb      	str	r3, [r7, #8]
 8001c98:	68fb      	ldr	r3, [r7, #12]
 8001c9a:	021a      	lsls	r2, r3, #8
 8001c9c:	68bb      	ldr	r3, [r7, #8]
 8001c9e:	4313      	orrs	r3, r2
 8001ca0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001ca4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001ca8:	60bb      	str	r3, [r7, #8]
 8001caa:	4a04      	ldr	r2, [pc, #16]	; (8001cbc <__NVIC_SetPriorityGrouping+0x44>)
 8001cac:	68bb      	ldr	r3, [r7, #8]
 8001cae:	60d3      	str	r3, [r2, #12]
 8001cb0:	bf00      	nop
 8001cb2:	3714      	adds	r7, #20
 8001cb4:	46bd      	mov	sp, r7
 8001cb6:	bc80      	pop	{r7}
 8001cb8:	4770      	bx	lr
 8001cba:	bf00      	nop
 8001cbc:	e000ed00 	.word	0xe000ed00

08001cc0 <__NVIC_GetPriorityGrouping>:
 8001cc0:	b480      	push	{r7}
 8001cc2:	af00      	add	r7, sp, #0
 8001cc4:	4b04      	ldr	r3, [pc, #16]	; (8001cd8 <__NVIC_GetPriorityGrouping+0x18>)
 8001cc6:	68db      	ldr	r3, [r3, #12]
 8001cc8:	0a1b      	lsrs	r3, r3, #8
 8001cca:	f003 0307 	and.w	r3, r3, #7
 8001cce:	4618      	mov	r0, r3
 8001cd0:	46bd      	mov	sp, r7
 8001cd2:	bc80      	pop	{r7}
 8001cd4:	4770      	bx	lr
 8001cd6:	bf00      	nop
 8001cd8:	e000ed00 	.word	0xe000ed00

08001cdc <__NVIC_EnableIRQ>:
 8001cdc:	b480      	push	{r7}
 8001cde:	b083      	sub	sp, #12
 8001ce0:	af00      	add	r7, sp, #0
 8001ce2:	4603      	mov	r3, r0
 8001ce4:	71fb      	strb	r3, [r7, #7]
 8001ce6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cea:	2b00      	cmp	r3, #0
 8001cec:	db0b      	blt.n	8001d06 <__NVIC_EnableIRQ+0x2a>
 8001cee:	79fb      	ldrb	r3, [r7, #7]
 8001cf0:	f003 021f 	and.w	r2, r3, #31
 8001cf4:	4906      	ldr	r1, [pc, #24]	; (8001d10 <__NVIC_EnableIRQ+0x34>)
 8001cf6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cfa:	095b      	lsrs	r3, r3, #5
 8001cfc:	2001      	movs	r0, #1
 8001cfe:	fa00 f202 	lsl.w	r2, r0, r2
 8001d02:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001d06:	bf00      	nop
 8001d08:	370c      	adds	r7, #12
 8001d0a:	46bd      	mov	sp, r7
 8001d0c:	bc80      	pop	{r7}
 8001d0e:	4770      	bx	lr
 8001d10:	e000e100 	.word	0xe000e100

08001d14 <__NVIC_SetPriority>:
 8001d14:	b480      	push	{r7}
 8001d16:	b083      	sub	sp, #12
 8001d18:	af00      	add	r7, sp, #0
 8001d1a:	4603      	mov	r3, r0
 8001d1c:	6039      	str	r1, [r7, #0]
 8001d1e:	71fb      	strb	r3, [r7, #7]
 8001d20:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d24:	2b00      	cmp	r3, #0
 8001d26:	db0a      	blt.n	8001d3e <__NVIC_SetPriority+0x2a>
 8001d28:	683b      	ldr	r3, [r7, #0]
 8001d2a:	b2da      	uxtb	r2, r3
 8001d2c:	490c      	ldr	r1, [pc, #48]	; (8001d60 <__NVIC_SetPriority+0x4c>)
 8001d2e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d32:	0112      	lsls	r2, r2, #4
 8001d34:	b2d2      	uxtb	r2, r2
 8001d36:	440b      	add	r3, r1
 8001d38:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001d3c:	e00a      	b.n	8001d54 <__NVIC_SetPriority+0x40>
 8001d3e:	683b      	ldr	r3, [r7, #0]
 8001d40:	b2da      	uxtb	r2, r3
 8001d42:	4908      	ldr	r1, [pc, #32]	; (8001d64 <__NVIC_SetPriority+0x50>)
 8001d44:	79fb      	ldrb	r3, [r7, #7]
 8001d46:	f003 030f 	and.w	r3, r3, #15
 8001d4a:	3b04      	subs	r3, #4
 8001d4c:	0112      	lsls	r2, r2, #4
 8001d4e:	b2d2      	uxtb	r2, r2
 8001d50:	440b      	add	r3, r1
 8001d52:	761a      	strb	r2, [r3, #24]
 8001d54:	bf00      	nop
 8001d56:	370c      	adds	r7, #12
 8001d58:	46bd      	mov	sp, r7
 8001d5a:	bc80      	pop	{r7}
 8001d5c:	4770      	bx	lr
 8001d5e:	bf00      	nop
 8001d60:	e000e100 	.word	0xe000e100
 8001d64:	e000ed00 	.word	0xe000ed00

08001d68 <NVIC_EncodePriority>:
 8001d68:	b480      	push	{r7}
 8001d6a:	b089      	sub	sp, #36	; 0x24
 8001d6c:	af00      	add	r7, sp, #0
 8001d6e:	60f8      	str	r0, [r7, #12]
 8001d70:	60b9      	str	r1, [r7, #8]
 8001d72:	607a      	str	r2, [r7, #4]
 8001d74:	68fb      	ldr	r3, [r7, #12]
 8001d76:	f003 0307 	and.w	r3, r3, #7
 8001d7a:	61fb      	str	r3, [r7, #28]
 8001d7c:	69fb      	ldr	r3, [r7, #28]
 8001d7e:	f1c3 0307 	rsb	r3, r3, #7
 8001d82:	2b04      	cmp	r3, #4
 8001d84:	bf28      	it	cs
 8001d86:	2304      	movcs	r3, #4
 8001d88:	61bb      	str	r3, [r7, #24]
 8001d8a:	69fb      	ldr	r3, [r7, #28]
 8001d8c:	3304      	adds	r3, #4
 8001d8e:	2b06      	cmp	r3, #6
 8001d90:	d902      	bls.n	8001d98 <NVIC_EncodePriority+0x30>
 8001d92:	69fb      	ldr	r3, [r7, #28]
 8001d94:	3b03      	subs	r3, #3
 8001d96:	e000      	b.n	8001d9a <NVIC_EncodePriority+0x32>
 8001d98:	2300      	movs	r3, #0
 8001d9a:	617b      	str	r3, [r7, #20]
 8001d9c:	f04f 32ff 	mov.w	r2, #4294967295
 8001da0:	69bb      	ldr	r3, [r7, #24]
 8001da2:	fa02 f303 	lsl.w	r3, r2, r3
 8001da6:	43da      	mvns	r2, r3
 8001da8:	68bb      	ldr	r3, [r7, #8]
 8001daa:	401a      	ands	r2, r3
 8001dac:	697b      	ldr	r3, [r7, #20]
 8001dae:	409a      	lsls	r2, r3
 8001db0:	f04f 31ff 	mov.w	r1, #4294967295
 8001db4:	697b      	ldr	r3, [r7, #20]
 8001db6:	fa01 f303 	lsl.w	r3, r1, r3
 8001dba:	43d9      	mvns	r1, r3
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	400b      	ands	r3, r1
 8001dc0:	4313      	orrs	r3, r2
 8001dc2:	4618      	mov	r0, r3
 8001dc4:	3724      	adds	r7, #36	; 0x24
 8001dc6:	46bd      	mov	sp, r7
 8001dc8:	bc80      	pop	{r7}
 8001dca:	4770      	bx	lr

08001dcc <SysTick_Config>:
 8001dcc:	b580      	push	{r7, lr}
 8001dce:	b082      	sub	sp, #8
 8001dd0:	af00      	add	r7, sp, #0
 8001dd2:	6078      	str	r0, [r7, #4]
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	3b01      	subs	r3, #1
 8001dd8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001ddc:	d301      	bcc.n	8001de2 <SysTick_Config+0x16>
 8001dde:	2301      	movs	r3, #1
 8001de0:	e00f      	b.n	8001e02 <SysTick_Config+0x36>
 8001de2:	4a0a      	ldr	r2, [pc, #40]	; (8001e0c <SysTick_Config+0x40>)
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	3b01      	subs	r3, #1
 8001de8:	6053      	str	r3, [r2, #4]
 8001dea:	210f      	movs	r1, #15
 8001dec:	f04f 30ff 	mov.w	r0, #4294967295
 8001df0:	f7ff ff90 	bl	8001d14 <__NVIC_SetPriority>
 8001df4:	4b05      	ldr	r3, [pc, #20]	; (8001e0c <SysTick_Config+0x40>)
 8001df6:	2200      	movs	r2, #0
 8001df8:	609a      	str	r2, [r3, #8]
 8001dfa:	4b04      	ldr	r3, [pc, #16]	; (8001e0c <SysTick_Config+0x40>)
 8001dfc:	2207      	movs	r2, #7
 8001dfe:	601a      	str	r2, [r3, #0]
 8001e00:	2300      	movs	r3, #0
 8001e02:	4618      	mov	r0, r3
 8001e04:	3708      	adds	r7, #8
 8001e06:	46bd      	mov	sp, r7
 8001e08:	bd80      	pop	{r7, pc}
 8001e0a:	bf00      	nop
 8001e0c:	e000e010 	.word	0xe000e010

08001e10 <HAL_NVIC_SetPriorityGrouping>:
 8001e10:	b580      	push	{r7, lr}
 8001e12:	b082      	sub	sp, #8
 8001e14:	af00      	add	r7, sp, #0
 8001e16:	6078      	str	r0, [r7, #4]
 8001e18:	6878      	ldr	r0, [r7, #4]
 8001e1a:	f7ff ff2d 	bl	8001c78 <__NVIC_SetPriorityGrouping>
 8001e1e:	bf00      	nop
 8001e20:	3708      	adds	r7, #8
 8001e22:	46bd      	mov	sp, r7
 8001e24:	bd80      	pop	{r7, pc}

08001e26 <HAL_NVIC_SetPriority>:
 8001e26:	b580      	push	{r7, lr}
 8001e28:	b086      	sub	sp, #24
 8001e2a:	af00      	add	r7, sp, #0
 8001e2c:	4603      	mov	r3, r0
 8001e2e:	60b9      	str	r1, [r7, #8]
 8001e30:	607a      	str	r2, [r7, #4]
 8001e32:	73fb      	strb	r3, [r7, #15]
 8001e34:	2300      	movs	r3, #0
 8001e36:	617b      	str	r3, [r7, #20]
 8001e38:	f7ff ff42 	bl	8001cc0 <__NVIC_GetPriorityGrouping>
 8001e3c:	6178      	str	r0, [r7, #20]
 8001e3e:	687a      	ldr	r2, [r7, #4]
 8001e40:	68b9      	ldr	r1, [r7, #8]
 8001e42:	6978      	ldr	r0, [r7, #20]
 8001e44:	f7ff ff90 	bl	8001d68 <NVIC_EncodePriority>
 8001e48:	4602      	mov	r2, r0
 8001e4a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001e4e:	4611      	mov	r1, r2
 8001e50:	4618      	mov	r0, r3
 8001e52:	f7ff ff5f 	bl	8001d14 <__NVIC_SetPriority>
 8001e56:	bf00      	nop
 8001e58:	3718      	adds	r7, #24
 8001e5a:	46bd      	mov	sp, r7
 8001e5c:	bd80      	pop	{r7, pc}

08001e5e <HAL_NVIC_EnableIRQ>:
 8001e5e:	b580      	push	{r7, lr}
 8001e60:	b082      	sub	sp, #8
 8001e62:	af00      	add	r7, sp, #0
 8001e64:	4603      	mov	r3, r0
 8001e66:	71fb      	strb	r3, [r7, #7]
 8001e68:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e6c:	4618      	mov	r0, r3
 8001e6e:	f7ff ff35 	bl	8001cdc <__NVIC_EnableIRQ>
 8001e72:	bf00      	nop
 8001e74:	3708      	adds	r7, #8
 8001e76:	46bd      	mov	sp, r7
 8001e78:	bd80      	pop	{r7, pc}

08001e7a <HAL_SYSTICK_Config>:
 8001e7a:	b580      	push	{r7, lr}
 8001e7c:	b082      	sub	sp, #8
 8001e7e:	af00      	add	r7, sp, #0
 8001e80:	6078      	str	r0, [r7, #4]
 8001e82:	6878      	ldr	r0, [r7, #4]
 8001e84:	f7ff ffa2 	bl	8001dcc <SysTick_Config>
 8001e88:	4603      	mov	r3, r0
 8001e8a:	4618      	mov	r0, r3
 8001e8c:	3708      	adds	r7, #8
 8001e8e:	46bd      	mov	sp, r7
 8001e90:	bd80      	pop	{r7, pc}
	...

08001e94 <HAL_GPIO_Init>:
 8001e94:	b480      	push	{r7}
 8001e96:	b08b      	sub	sp, #44	; 0x2c
 8001e98:	af00      	add	r7, sp, #0
 8001e9a:	6078      	str	r0, [r7, #4]
 8001e9c:	6039      	str	r1, [r7, #0]
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	627b      	str	r3, [r7, #36]	; 0x24
 8001ea2:	2300      	movs	r3, #0
 8001ea4:	623b      	str	r3, [r7, #32]
 8001ea6:	e148      	b.n	800213a <HAL_GPIO_Init+0x2a6>
 8001ea8:	2201      	movs	r2, #1
 8001eaa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001eac:	fa02 f303 	lsl.w	r3, r2, r3
 8001eb0:	61fb      	str	r3, [r7, #28]
 8001eb2:	683b      	ldr	r3, [r7, #0]
 8001eb4:	681b      	ldr	r3, [r3, #0]
 8001eb6:	69fa      	ldr	r2, [r7, #28]
 8001eb8:	4013      	ands	r3, r2
 8001eba:	61bb      	str	r3, [r7, #24]
 8001ebc:	69ba      	ldr	r2, [r7, #24]
 8001ebe:	69fb      	ldr	r3, [r7, #28]
 8001ec0:	429a      	cmp	r2, r3
 8001ec2:	f040 8137 	bne.w	8002134 <HAL_GPIO_Init+0x2a0>
 8001ec6:	683b      	ldr	r3, [r7, #0]
 8001ec8:	685b      	ldr	r3, [r3, #4]
 8001eca:	4aa3      	ldr	r2, [pc, #652]	; (8002158 <HAL_GPIO_Init+0x2c4>)
 8001ecc:	4293      	cmp	r3, r2
 8001ece:	d05e      	beq.n	8001f8e <HAL_GPIO_Init+0xfa>
 8001ed0:	4aa1      	ldr	r2, [pc, #644]	; (8002158 <HAL_GPIO_Init+0x2c4>)
 8001ed2:	4293      	cmp	r3, r2
 8001ed4:	d875      	bhi.n	8001fc2 <HAL_GPIO_Init+0x12e>
 8001ed6:	4aa1      	ldr	r2, [pc, #644]	; (800215c <HAL_GPIO_Init+0x2c8>)
 8001ed8:	4293      	cmp	r3, r2
 8001eda:	d058      	beq.n	8001f8e <HAL_GPIO_Init+0xfa>
 8001edc:	4a9f      	ldr	r2, [pc, #636]	; (800215c <HAL_GPIO_Init+0x2c8>)
 8001ede:	4293      	cmp	r3, r2
 8001ee0:	d86f      	bhi.n	8001fc2 <HAL_GPIO_Init+0x12e>
 8001ee2:	4a9f      	ldr	r2, [pc, #636]	; (8002160 <HAL_GPIO_Init+0x2cc>)
 8001ee4:	4293      	cmp	r3, r2
 8001ee6:	d052      	beq.n	8001f8e <HAL_GPIO_Init+0xfa>
 8001ee8:	4a9d      	ldr	r2, [pc, #628]	; (8002160 <HAL_GPIO_Init+0x2cc>)
 8001eea:	4293      	cmp	r3, r2
 8001eec:	d869      	bhi.n	8001fc2 <HAL_GPIO_Init+0x12e>
 8001eee:	4a9d      	ldr	r2, [pc, #628]	; (8002164 <HAL_GPIO_Init+0x2d0>)
 8001ef0:	4293      	cmp	r3, r2
 8001ef2:	d04c      	beq.n	8001f8e <HAL_GPIO_Init+0xfa>
 8001ef4:	4a9b      	ldr	r2, [pc, #620]	; (8002164 <HAL_GPIO_Init+0x2d0>)
 8001ef6:	4293      	cmp	r3, r2
 8001ef8:	d863      	bhi.n	8001fc2 <HAL_GPIO_Init+0x12e>
 8001efa:	4a9b      	ldr	r2, [pc, #620]	; (8002168 <HAL_GPIO_Init+0x2d4>)
 8001efc:	4293      	cmp	r3, r2
 8001efe:	d046      	beq.n	8001f8e <HAL_GPIO_Init+0xfa>
 8001f00:	4a99      	ldr	r2, [pc, #612]	; (8002168 <HAL_GPIO_Init+0x2d4>)
 8001f02:	4293      	cmp	r3, r2
 8001f04:	d85d      	bhi.n	8001fc2 <HAL_GPIO_Init+0x12e>
 8001f06:	2b12      	cmp	r3, #18
 8001f08:	d82a      	bhi.n	8001f60 <HAL_GPIO_Init+0xcc>
 8001f0a:	2b12      	cmp	r3, #18
 8001f0c:	d859      	bhi.n	8001fc2 <HAL_GPIO_Init+0x12e>
 8001f0e:	a201      	add	r2, pc, #4	; (adr r2, 8001f14 <HAL_GPIO_Init+0x80>)
 8001f10:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001f14:	08001f8f 	.word	0x08001f8f
 8001f18:	08001f69 	.word	0x08001f69
 8001f1c:	08001f7b 	.word	0x08001f7b
 8001f20:	08001fbd 	.word	0x08001fbd
 8001f24:	08001fc3 	.word	0x08001fc3
 8001f28:	08001fc3 	.word	0x08001fc3
 8001f2c:	08001fc3 	.word	0x08001fc3
 8001f30:	08001fc3 	.word	0x08001fc3
 8001f34:	08001fc3 	.word	0x08001fc3
 8001f38:	08001fc3 	.word	0x08001fc3
 8001f3c:	08001fc3 	.word	0x08001fc3
 8001f40:	08001fc3 	.word	0x08001fc3
 8001f44:	08001fc3 	.word	0x08001fc3
 8001f48:	08001fc3 	.word	0x08001fc3
 8001f4c:	08001fc3 	.word	0x08001fc3
 8001f50:	08001fc3 	.word	0x08001fc3
 8001f54:	08001fc3 	.word	0x08001fc3
 8001f58:	08001f71 	.word	0x08001f71
 8001f5c:	08001f85 	.word	0x08001f85
 8001f60:	4a82      	ldr	r2, [pc, #520]	; (800216c <HAL_GPIO_Init+0x2d8>)
 8001f62:	4293      	cmp	r3, r2
 8001f64:	d013      	beq.n	8001f8e <HAL_GPIO_Init+0xfa>
 8001f66:	e02c      	b.n	8001fc2 <HAL_GPIO_Init+0x12e>
 8001f68:	683b      	ldr	r3, [r7, #0]
 8001f6a:	68db      	ldr	r3, [r3, #12]
 8001f6c:	623b      	str	r3, [r7, #32]
 8001f6e:	e029      	b.n	8001fc4 <HAL_GPIO_Init+0x130>
 8001f70:	683b      	ldr	r3, [r7, #0]
 8001f72:	68db      	ldr	r3, [r3, #12]
 8001f74:	3304      	adds	r3, #4
 8001f76:	623b      	str	r3, [r7, #32]
 8001f78:	e024      	b.n	8001fc4 <HAL_GPIO_Init+0x130>
 8001f7a:	683b      	ldr	r3, [r7, #0]
 8001f7c:	68db      	ldr	r3, [r3, #12]
 8001f7e:	3308      	adds	r3, #8
 8001f80:	623b      	str	r3, [r7, #32]
 8001f82:	e01f      	b.n	8001fc4 <HAL_GPIO_Init+0x130>
 8001f84:	683b      	ldr	r3, [r7, #0]
 8001f86:	68db      	ldr	r3, [r3, #12]
 8001f88:	330c      	adds	r3, #12
 8001f8a:	623b      	str	r3, [r7, #32]
 8001f8c:	e01a      	b.n	8001fc4 <HAL_GPIO_Init+0x130>
 8001f8e:	683b      	ldr	r3, [r7, #0]
 8001f90:	689b      	ldr	r3, [r3, #8]
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d102      	bne.n	8001f9c <HAL_GPIO_Init+0x108>
 8001f96:	2304      	movs	r3, #4
 8001f98:	623b      	str	r3, [r7, #32]
 8001f9a:	e013      	b.n	8001fc4 <HAL_GPIO_Init+0x130>
 8001f9c:	683b      	ldr	r3, [r7, #0]
 8001f9e:	689b      	ldr	r3, [r3, #8]
 8001fa0:	2b01      	cmp	r3, #1
 8001fa2:	d105      	bne.n	8001fb0 <HAL_GPIO_Init+0x11c>
 8001fa4:	2308      	movs	r3, #8
 8001fa6:	623b      	str	r3, [r7, #32]
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	69fa      	ldr	r2, [r7, #28]
 8001fac:	611a      	str	r2, [r3, #16]
 8001fae:	e009      	b.n	8001fc4 <HAL_GPIO_Init+0x130>
 8001fb0:	2308      	movs	r3, #8
 8001fb2:	623b      	str	r3, [r7, #32]
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	69fa      	ldr	r2, [r7, #28]
 8001fb8:	615a      	str	r2, [r3, #20]
 8001fba:	e003      	b.n	8001fc4 <HAL_GPIO_Init+0x130>
 8001fbc:	2300      	movs	r3, #0
 8001fbe:	623b      	str	r3, [r7, #32]
 8001fc0:	e000      	b.n	8001fc4 <HAL_GPIO_Init+0x130>
 8001fc2:	bf00      	nop
 8001fc4:	69bb      	ldr	r3, [r7, #24]
 8001fc6:	2bff      	cmp	r3, #255	; 0xff
 8001fc8:	d801      	bhi.n	8001fce <HAL_GPIO_Init+0x13a>
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	e001      	b.n	8001fd2 <HAL_GPIO_Init+0x13e>
 8001fce:	687b      	ldr	r3, [r7, #4]
 8001fd0:	3304      	adds	r3, #4
 8001fd2:	617b      	str	r3, [r7, #20]
 8001fd4:	69bb      	ldr	r3, [r7, #24]
 8001fd6:	2bff      	cmp	r3, #255	; 0xff
 8001fd8:	d802      	bhi.n	8001fe0 <HAL_GPIO_Init+0x14c>
 8001fda:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fdc:	009b      	lsls	r3, r3, #2
 8001fde:	e002      	b.n	8001fe6 <HAL_GPIO_Init+0x152>
 8001fe0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fe2:	3b08      	subs	r3, #8
 8001fe4:	009b      	lsls	r3, r3, #2
 8001fe6:	613b      	str	r3, [r7, #16]
 8001fe8:	697b      	ldr	r3, [r7, #20]
 8001fea:	681a      	ldr	r2, [r3, #0]
 8001fec:	210f      	movs	r1, #15
 8001fee:	693b      	ldr	r3, [r7, #16]
 8001ff0:	fa01 f303 	lsl.w	r3, r1, r3
 8001ff4:	43db      	mvns	r3, r3
 8001ff6:	401a      	ands	r2, r3
 8001ff8:	6a39      	ldr	r1, [r7, #32]
 8001ffa:	693b      	ldr	r3, [r7, #16]
 8001ffc:	fa01 f303 	lsl.w	r3, r1, r3
 8002000:	431a      	orrs	r2, r3
 8002002:	697b      	ldr	r3, [r7, #20]
 8002004:	601a      	str	r2, [r3, #0]
 8002006:	683b      	ldr	r3, [r7, #0]
 8002008:	685b      	ldr	r3, [r3, #4]
 800200a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800200e:	2b00      	cmp	r3, #0
 8002010:	f000 8090 	beq.w	8002134 <HAL_GPIO_Init+0x2a0>
 8002014:	4b56      	ldr	r3, [pc, #344]	; (8002170 <HAL_GPIO_Init+0x2dc>)
 8002016:	699b      	ldr	r3, [r3, #24]
 8002018:	4a55      	ldr	r2, [pc, #340]	; (8002170 <HAL_GPIO_Init+0x2dc>)
 800201a:	f043 0301 	orr.w	r3, r3, #1
 800201e:	6193      	str	r3, [r2, #24]
 8002020:	4b53      	ldr	r3, [pc, #332]	; (8002170 <HAL_GPIO_Init+0x2dc>)
 8002022:	699b      	ldr	r3, [r3, #24]
 8002024:	f003 0301 	and.w	r3, r3, #1
 8002028:	60bb      	str	r3, [r7, #8]
 800202a:	68bb      	ldr	r3, [r7, #8]
 800202c:	4a51      	ldr	r2, [pc, #324]	; (8002174 <HAL_GPIO_Init+0x2e0>)
 800202e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002030:	089b      	lsrs	r3, r3, #2
 8002032:	3302      	adds	r3, #2
 8002034:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002038:	60fb      	str	r3, [r7, #12]
 800203a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800203c:	f003 0303 	and.w	r3, r3, #3
 8002040:	009b      	lsls	r3, r3, #2
 8002042:	220f      	movs	r2, #15
 8002044:	fa02 f303 	lsl.w	r3, r2, r3
 8002048:	43db      	mvns	r3, r3
 800204a:	68fa      	ldr	r2, [r7, #12]
 800204c:	4013      	ands	r3, r2
 800204e:	60fb      	str	r3, [r7, #12]
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	4a49      	ldr	r2, [pc, #292]	; (8002178 <HAL_GPIO_Init+0x2e4>)
 8002054:	4293      	cmp	r3, r2
 8002056:	d00d      	beq.n	8002074 <HAL_GPIO_Init+0x1e0>
 8002058:	687b      	ldr	r3, [r7, #4]
 800205a:	4a48      	ldr	r2, [pc, #288]	; (800217c <HAL_GPIO_Init+0x2e8>)
 800205c:	4293      	cmp	r3, r2
 800205e:	d007      	beq.n	8002070 <HAL_GPIO_Init+0x1dc>
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	4a47      	ldr	r2, [pc, #284]	; (8002180 <HAL_GPIO_Init+0x2ec>)
 8002064:	4293      	cmp	r3, r2
 8002066:	d101      	bne.n	800206c <HAL_GPIO_Init+0x1d8>
 8002068:	2302      	movs	r3, #2
 800206a:	e004      	b.n	8002076 <HAL_GPIO_Init+0x1e2>
 800206c:	2303      	movs	r3, #3
 800206e:	e002      	b.n	8002076 <HAL_GPIO_Init+0x1e2>
 8002070:	2301      	movs	r3, #1
 8002072:	e000      	b.n	8002076 <HAL_GPIO_Init+0x1e2>
 8002074:	2300      	movs	r3, #0
 8002076:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002078:	f002 0203 	and.w	r2, r2, #3
 800207c:	0092      	lsls	r2, r2, #2
 800207e:	4093      	lsls	r3, r2
 8002080:	68fa      	ldr	r2, [r7, #12]
 8002082:	4313      	orrs	r3, r2
 8002084:	60fb      	str	r3, [r7, #12]
 8002086:	493b      	ldr	r1, [pc, #236]	; (8002174 <HAL_GPIO_Init+0x2e0>)
 8002088:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800208a:	089b      	lsrs	r3, r3, #2
 800208c:	3302      	adds	r3, #2
 800208e:	68fa      	ldr	r2, [r7, #12]
 8002090:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002094:	683b      	ldr	r3, [r7, #0]
 8002096:	685b      	ldr	r3, [r3, #4]
 8002098:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800209c:	2b00      	cmp	r3, #0
 800209e:	d006      	beq.n	80020ae <HAL_GPIO_Init+0x21a>
 80020a0:	4b38      	ldr	r3, [pc, #224]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 80020a2:	681a      	ldr	r2, [r3, #0]
 80020a4:	4937      	ldr	r1, [pc, #220]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 80020a6:	69bb      	ldr	r3, [r7, #24]
 80020a8:	4313      	orrs	r3, r2
 80020aa:	600b      	str	r3, [r1, #0]
 80020ac:	e006      	b.n	80020bc <HAL_GPIO_Init+0x228>
 80020ae:	4b35      	ldr	r3, [pc, #212]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 80020b0:	681a      	ldr	r2, [r3, #0]
 80020b2:	69bb      	ldr	r3, [r7, #24]
 80020b4:	43db      	mvns	r3, r3
 80020b6:	4933      	ldr	r1, [pc, #204]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 80020b8:	4013      	ands	r3, r2
 80020ba:	600b      	str	r3, [r1, #0]
 80020bc:	683b      	ldr	r3, [r7, #0]
 80020be:	685b      	ldr	r3, [r3, #4]
 80020c0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80020c4:	2b00      	cmp	r3, #0
 80020c6:	d006      	beq.n	80020d6 <HAL_GPIO_Init+0x242>
 80020c8:	4b2e      	ldr	r3, [pc, #184]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 80020ca:	685a      	ldr	r2, [r3, #4]
 80020cc:	492d      	ldr	r1, [pc, #180]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 80020ce:	69bb      	ldr	r3, [r7, #24]
 80020d0:	4313      	orrs	r3, r2
 80020d2:	604b      	str	r3, [r1, #4]
 80020d4:	e006      	b.n	80020e4 <HAL_GPIO_Init+0x250>
 80020d6:	4b2b      	ldr	r3, [pc, #172]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 80020d8:	685a      	ldr	r2, [r3, #4]
 80020da:	69bb      	ldr	r3, [r7, #24]
 80020dc:	43db      	mvns	r3, r3
 80020de:	4929      	ldr	r1, [pc, #164]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 80020e0:	4013      	ands	r3, r2
 80020e2:	604b      	str	r3, [r1, #4]
 80020e4:	683b      	ldr	r3, [r7, #0]
 80020e6:	685b      	ldr	r3, [r3, #4]
 80020e8:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d006      	beq.n	80020fe <HAL_GPIO_Init+0x26a>
 80020f0:	4b24      	ldr	r3, [pc, #144]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 80020f2:	689a      	ldr	r2, [r3, #8]
 80020f4:	4923      	ldr	r1, [pc, #140]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 80020f6:	69bb      	ldr	r3, [r7, #24]
 80020f8:	4313      	orrs	r3, r2
 80020fa:	608b      	str	r3, [r1, #8]
 80020fc:	e006      	b.n	800210c <HAL_GPIO_Init+0x278>
 80020fe:	4b21      	ldr	r3, [pc, #132]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 8002100:	689a      	ldr	r2, [r3, #8]
 8002102:	69bb      	ldr	r3, [r7, #24]
 8002104:	43db      	mvns	r3, r3
 8002106:	491f      	ldr	r1, [pc, #124]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 8002108:	4013      	ands	r3, r2
 800210a:	608b      	str	r3, [r1, #8]
 800210c:	683b      	ldr	r3, [r7, #0]
 800210e:	685b      	ldr	r3, [r3, #4]
 8002110:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002114:	2b00      	cmp	r3, #0
 8002116:	d006      	beq.n	8002126 <HAL_GPIO_Init+0x292>
 8002118:	4b1a      	ldr	r3, [pc, #104]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 800211a:	68da      	ldr	r2, [r3, #12]
 800211c:	4919      	ldr	r1, [pc, #100]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 800211e:	69bb      	ldr	r3, [r7, #24]
 8002120:	4313      	orrs	r3, r2
 8002122:	60cb      	str	r3, [r1, #12]
 8002124:	e006      	b.n	8002134 <HAL_GPIO_Init+0x2a0>
 8002126:	4b17      	ldr	r3, [pc, #92]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 8002128:	68da      	ldr	r2, [r3, #12]
 800212a:	69bb      	ldr	r3, [r7, #24]
 800212c:	43db      	mvns	r3, r3
 800212e:	4915      	ldr	r1, [pc, #84]	; (8002184 <HAL_GPIO_Init+0x2f0>)
 8002130:	4013      	ands	r3, r2
 8002132:	60cb      	str	r3, [r1, #12]
 8002134:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002136:	3301      	adds	r3, #1
 8002138:	627b      	str	r3, [r7, #36]	; 0x24
 800213a:	683b      	ldr	r3, [r7, #0]
 800213c:	681a      	ldr	r2, [r3, #0]
 800213e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002140:	fa22 f303 	lsr.w	r3, r2, r3
 8002144:	2b00      	cmp	r3, #0
 8002146:	f47f aeaf 	bne.w	8001ea8 <HAL_GPIO_Init+0x14>
 800214a:	bf00      	nop
 800214c:	bf00      	nop
 800214e:	372c      	adds	r7, #44	; 0x2c
 8002150:	46bd      	mov	sp, r7
 8002152:	bc80      	pop	{r7}
 8002154:	4770      	bx	lr
 8002156:	bf00      	nop
 8002158:	10320000 	.word	0x10320000
 800215c:	10310000 	.word	0x10310000
 8002160:	10220000 	.word	0x10220000
 8002164:	10210000 	.word	0x10210000
 8002168:	10120000 	.word	0x10120000
 800216c:	10110000 	.word	0x10110000
 8002170:	40021000 	.word	0x40021000
 8002174:	40010000 	.word	0x40010000
 8002178:	40010800 	.word	0x40010800
 800217c:	40010c00 	.word	0x40010c00
 8002180:	40011000 	.word	0x40011000
 8002184:	40010400 	.word	0x40010400

08002188 <HAL_GPIO_ReadPin>:
 8002188:	b480      	push	{r7}
 800218a:	b085      	sub	sp, #20
 800218c:	af00      	add	r7, sp, #0
 800218e:	6078      	str	r0, [r7, #4]
 8002190:	460b      	mov	r3, r1
 8002192:	807b      	strh	r3, [r7, #2]
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	689a      	ldr	r2, [r3, #8]
 8002198:	887b      	ldrh	r3, [r7, #2]
 800219a:	4013      	ands	r3, r2
 800219c:	2b00      	cmp	r3, #0
 800219e:	d002      	beq.n	80021a6 <HAL_GPIO_ReadPin+0x1e>
 80021a0:	2301      	movs	r3, #1
 80021a2:	73fb      	strb	r3, [r7, #15]
 80021a4:	e001      	b.n	80021aa <HAL_GPIO_ReadPin+0x22>
 80021a6:	2300      	movs	r3, #0
 80021a8:	73fb      	strb	r3, [r7, #15]
 80021aa:	7bfb      	ldrb	r3, [r7, #15]
 80021ac:	4618      	mov	r0, r3
 80021ae:	3714      	adds	r7, #20
 80021b0:	46bd      	mov	sp, r7
 80021b2:	bc80      	pop	{r7}
 80021b4:	4770      	bx	lr

080021b6 <HAL_GPIO_WritePin>:
 80021b6:	b480      	push	{r7}
 80021b8:	b083      	sub	sp, #12
 80021ba:	af00      	add	r7, sp, #0
 80021bc:	6078      	str	r0, [r7, #4]
 80021be:	460b      	mov	r3, r1
 80021c0:	807b      	strh	r3, [r7, #2]
 80021c2:	4613      	mov	r3, r2
 80021c4:	707b      	strb	r3, [r7, #1]
 80021c6:	787b      	ldrb	r3, [r7, #1]
 80021c8:	2b00      	cmp	r3, #0
 80021ca:	d003      	beq.n	80021d4 <HAL_GPIO_WritePin+0x1e>
 80021cc:	887a      	ldrh	r2, [r7, #2]
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	611a      	str	r2, [r3, #16]
 80021d2:	e003      	b.n	80021dc <HAL_GPIO_WritePin+0x26>
 80021d4:	887b      	ldrh	r3, [r7, #2]
 80021d6:	041a      	lsls	r2, r3, #16
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	611a      	str	r2, [r3, #16]
 80021dc:	bf00      	nop
 80021de:	370c      	adds	r7, #12
 80021e0:	46bd      	mov	sp, r7
 80021e2:	bc80      	pop	{r7}
 80021e4:	4770      	bx	lr
	...

080021e8 <HAL_RCC_OscConfig>:
 80021e8:	b580      	push	{r7, lr}
 80021ea:	b086      	sub	sp, #24
 80021ec:	af00      	add	r7, sp, #0
 80021ee:	6078      	str	r0, [r7, #4]
 80021f0:	687b      	ldr	r3, [r7, #4]
 80021f2:	2b00      	cmp	r3, #0
 80021f4:	d101      	bne.n	80021fa <HAL_RCC_OscConfig+0x12>
 80021f6:	2301      	movs	r3, #1
 80021f8:	e26c      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	681b      	ldr	r3, [r3, #0]
 80021fe:	f003 0301 	and.w	r3, r3, #1
 8002202:	2b00      	cmp	r3, #0
 8002204:	f000 8087 	beq.w	8002316 <HAL_RCC_OscConfig+0x12e>
 8002208:	4b92      	ldr	r3, [pc, #584]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 800220a:	685b      	ldr	r3, [r3, #4]
 800220c:	f003 030c 	and.w	r3, r3, #12
 8002210:	2b04      	cmp	r3, #4
 8002212:	d00c      	beq.n	800222e <HAL_RCC_OscConfig+0x46>
 8002214:	4b8f      	ldr	r3, [pc, #572]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002216:	685b      	ldr	r3, [r3, #4]
 8002218:	f003 030c 	and.w	r3, r3, #12
 800221c:	2b08      	cmp	r3, #8
 800221e:	d112      	bne.n	8002246 <HAL_RCC_OscConfig+0x5e>
 8002220:	4b8c      	ldr	r3, [pc, #560]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002222:	685b      	ldr	r3, [r3, #4]
 8002224:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002228:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800222c:	d10b      	bne.n	8002246 <HAL_RCC_OscConfig+0x5e>
 800222e:	4b89      	ldr	r3, [pc, #548]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002236:	2b00      	cmp	r3, #0
 8002238:	d06c      	beq.n	8002314 <HAL_RCC_OscConfig+0x12c>
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	685b      	ldr	r3, [r3, #4]
 800223e:	2b00      	cmp	r3, #0
 8002240:	d168      	bne.n	8002314 <HAL_RCC_OscConfig+0x12c>
 8002242:	2301      	movs	r3, #1
 8002244:	e246      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	685b      	ldr	r3, [r3, #4]
 800224a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800224e:	d106      	bne.n	800225e <HAL_RCC_OscConfig+0x76>
 8002250:	4b80      	ldr	r3, [pc, #512]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002252:	681b      	ldr	r3, [r3, #0]
 8002254:	4a7f      	ldr	r2, [pc, #508]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002256:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800225a:	6013      	str	r3, [r2, #0]
 800225c:	e02e      	b.n	80022bc <HAL_RCC_OscConfig+0xd4>
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	685b      	ldr	r3, [r3, #4]
 8002262:	2b00      	cmp	r3, #0
 8002264:	d10c      	bne.n	8002280 <HAL_RCC_OscConfig+0x98>
 8002266:	4b7b      	ldr	r3, [pc, #492]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002268:	681b      	ldr	r3, [r3, #0]
 800226a:	4a7a      	ldr	r2, [pc, #488]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 800226c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002270:	6013      	str	r3, [r2, #0]
 8002272:	4b78      	ldr	r3, [pc, #480]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002274:	681b      	ldr	r3, [r3, #0]
 8002276:	4a77      	ldr	r2, [pc, #476]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002278:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800227c:	6013      	str	r3, [r2, #0]
 800227e:	e01d      	b.n	80022bc <HAL_RCC_OscConfig+0xd4>
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	685b      	ldr	r3, [r3, #4]
 8002284:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002288:	d10c      	bne.n	80022a4 <HAL_RCC_OscConfig+0xbc>
 800228a:	4b72      	ldr	r3, [pc, #456]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	4a71      	ldr	r2, [pc, #452]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002290:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002294:	6013      	str	r3, [r2, #0]
 8002296:	4b6f      	ldr	r3, [pc, #444]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002298:	681b      	ldr	r3, [r3, #0]
 800229a:	4a6e      	ldr	r2, [pc, #440]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 800229c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80022a0:	6013      	str	r3, [r2, #0]
 80022a2:	e00b      	b.n	80022bc <HAL_RCC_OscConfig+0xd4>
 80022a4:	4b6b      	ldr	r3, [pc, #428]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	4a6a      	ldr	r2, [pc, #424]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 80022aa:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80022ae:	6013      	str	r3, [r2, #0]
 80022b0:	4b68      	ldr	r3, [pc, #416]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 80022b2:	681b      	ldr	r3, [r3, #0]
 80022b4:	4a67      	ldr	r2, [pc, #412]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 80022b6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80022ba:	6013      	str	r3, [r2, #0]
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	685b      	ldr	r3, [r3, #4]
 80022c0:	2b00      	cmp	r3, #0
 80022c2:	d013      	beq.n	80022ec <HAL_RCC_OscConfig+0x104>
 80022c4:	f7ff fcaa 	bl	8001c1c <HAL_GetTick>
 80022c8:	6138      	str	r0, [r7, #16]
 80022ca:	e008      	b.n	80022de <HAL_RCC_OscConfig+0xf6>
 80022cc:	f7ff fca6 	bl	8001c1c <HAL_GetTick>
 80022d0:	4602      	mov	r2, r0
 80022d2:	693b      	ldr	r3, [r7, #16]
 80022d4:	1ad3      	subs	r3, r2, r3
 80022d6:	2b64      	cmp	r3, #100	; 0x64
 80022d8:	d901      	bls.n	80022de <HAL_RCC_OscConfig+0xf6>
 80022da:	2303      	movs	r3, #3
 80022dc:	e1fa      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 80022de:	4b5d      	ldr	r3, [pc, #372]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 80022e0:	681b      	ldr	r3, [r3, #0]
 80022e2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80022e6:	2b00      	cmp	r3, #0
 80022e8:	d0f0      	beq.n	80022cc <HAL_RCC_OscConfig+0xe4>
 80022ea:	e014      	b.n	8002316 <HAL_RCC_OscConfig+0x12e>
 80022ec:	f7ff fc96 	bl	8001c1c <HAL_GetTick>
 80022f0:	6138      	str	r0, [r7, #16]
 80022f2:	e008      	b.n	8002306 <HAL_RCC_OscConfig+0x11e>
 80022f4:	f7ff fc92 	bl	8001c1c <HAL_GetTick>
 80022f8:	4602      	mov	r2, r0
 80022fa:	693b      	ldr	r3, [r7, #16]
 80022fc:	1ad3      	subs	r3, r2, r3
 80022fe:	2b64      	cmp	r3, #100	; 0x64
 8002300:	d901      	bls.n	8002306 <HAL_RCC_OscConfig+0x11e>
 8002302:	2303      	movs	r3, #3
 8002304:	e1e6      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 8002306:	4b53      	ldr	r3, [pc, #332]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800230e:	2b00      	cmp	r3, #0
 8002310:	d1f0      	bne.n	80022f4 <HAL_RCC_OscConfig+0x10c>
 8002312:	e000      	b.n	8002316 <HAL_RCC_OscConfig+0x12e>
 8002314:	bf00      	nop
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	f003 0302 	and.w	r3, r3, #2
 800231e:	2b00      	cmp	r3, #0
 8002320:	d063      	beq.n	80023ea <HAL_RCC_OscConfig+0x202>
 8002322:	4b4c      	ldr	r3, [pc, #304]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002324:	685b      	ldr	r3, [r3, #4]
 8002326:	f003 030c 	and.w	r3, r3, #12
 800232a:	2b00      	cmp	r3, #0
 800232c:	d00b      	beq.n	8002346 <HAL_RCC_OscConfig+0x15e>
 800232e:	4b49      	ldr	r3, [pc, #292]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002330:	685b      	ldr	r3, [r3, #4]
 8002332:	f003 030c 	and.w	r3, r3, #12
 8002336:	2b08      	cmp	r3, #8
 8002338:	d11c      	bne.n	8002374 <HAL_RCC_OscConfig+0x18c>
 800233a:	4b46      	ldr	r3, [pc, #280]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 800233c:	685b      	ldr	r3, [r3, #4]
 800233e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002342:	2b00      	cmp	r3, #0
 8002344:	d116      	bne.n	8002374 <HAL_RCC_OscConfig+0x18c>
 8002346:	4b43      	ldr	r3, [pc, #268]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	f003 0302 	and.w	r3, r3, #2
 800234e:	2b00      	cmp	r3, #0
 8002350:	d005      	beq.n	800235e <HAL_RCC_OscConfig+0x176>
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	691b      	ldr	r3, [r3, #16]
 8002356:	2b01      	cmp	r3, #1
 8002358:	d001      	beq.n	800235e <HAL_RCC_OscConfig+0x176>
 800235a:	2301      	movs	r3, #1
 800235c:	e1ba      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 800235e:	4b3d      	ldr	r3, [pc, #244]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002360:	681b      	ldr	r3, [r3, #0]
 8002362:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	695b      	ldr	r3, [r3, #20]
 800236a:	00db      	lsls	r3, r3, #3
 800236c:	4939      	ldr	r1, [pc, #228]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 800236e:	4313      	orrs	r3, r2
 8002370:	600b      	str	r3, [r1, #0]
 8002372:	e03a      	b.n	80023ea <HAL_RCC_OscConfig+0x202>
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	691b      	ldr	r3, [r3, #16]
 8002378:	2b00      	cmp	r3, #0
 800237a:	d020      	beq.n	80023be <HAL_RCC_OscConfig+0x1d6>
 800237c:	4b36      	ldr	r3, [pc, #216]	; (8002458 <HAL_RCC_OscConfig+0x270>)
 800237e:	2201      	movs	r2, #1
 8002380:	601a      	str	r2, [r3, #0]
 8002382:	f7ff fc4b 	bl	8001c1c <HAL_GetTick>
 8002386:	6138      	str	r0, [r7, #16]
 8002388:	e008      	b.n	800239c <HAL_RCC_OscConfig+0x1b4>
 800238a:	f7ff fc47 	bl	8001c1c <HAL_GetTick>
 800238e:	4602      	mov	r2, r0
 8002390:	693b      	ldr	r3, [r7, #16]
 8002392:	1ad3      	subs	r3, r2, r3
 8002394:	2b02      	cmp	r3, #2
 8002396:	d901      	bls.n	800239c <HAL_RCC_OscConfig+0x1b4>
 8002398:	2303      	movs	r3, #3
 800239a:	e19b      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 800239c:	4b2d      	ldr	r3, [pc, #180]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	f003 0302 	and.w	r3, r3, #2
 80023a4:	2b00      	cmp	r3, #0
 80023a6:	d0f0      	beq.n	800238a <HAL_RCC_OscConfig+0x1a2>
 80023a8:	4b2a      	ldr	r3, [pc, #168]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 80023aa:	681b      	ldr	r3, [r3, #0]
 80023ac:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	695b      	ldr	r3, [r3, #20]
 80023b4:	00db      	lsls	r3, r3, #3
 80023b6:	4927      	ldr	r1, [pc, #156]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 80023b8:	4313      	orrs	r3, r2
 80023ba:	600b      	str	r3, [r1, #0]
 80023bc:	e015      	b.n	80023ea <HAL_RCC_OscConfig+0x202>
 80023be:	4b26      	ldr	r3, [pc, #152]	; (8002458 <HAL_RCC_OscConfig+0x270>)
 80023c0:	2200      	movs	r2, #0
 80023c2:	601a      	str	r2, [r3, #0]
 80023c4:	f7ff fc2a 	bl	8001c1c <HAL_GetTick>
 80023c8:	6138      	str	r0, [r7, #16]
 80023ca:	e008      	b.n	80023de <HAL_RCC_OscConfig+0x1f6>
 80023cc:	f7ff fc26 	bl	8001c1c <HAL_GetTick>
 80023d0:	4602      	mov	r2, r0
 80023d2:	693b      	ldr	r3, [r7, #16]
 80023d4:	1ad3      	subs	r3, r2, r3
 80023d6:	2b02      	cmp	r3, #2
 80023d8:	d901      	bls.n	80023de <HAL_RCC_OscConfig+0x1f6>
 80023da:	2303      	movs	r3, #3
 80023dc:	e17a      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 80023de:	4b1d      	ldr	r3, [pc, #116]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	f003 0302 	and.w	r3, r3, #2
 80023e6:	2b00      	cmp	r3, #0
 80023e8:	d1f0      	bne.n	80023cc <HAL_RCC_OscConfig+0x1e4>
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	f003 0308 	and.w	r3, r3, #8
 80023f2:	2b00      	cmp	r3, #0
 80023f4:	d03a      	beq.n	800246c <HAL_RCC_OscConfig+0x284>
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	699b      	ldr	r3, [r3, #24]
 80023fa:	2b00      	cmp	r3, #0
 80023fc:	d019      	beq.n	8002432 <HAL_RCC_OscConfig+0x24a>
 80023fe:	4b17      	ldr	r3, [pc, #92]	; (800245c <HAL_RCC_OscConfig+0x274>)
 8002400:	2201      	movs	r2, #1
 8002402:	601a      	str	r2, [r3, #0]
 8002404:	f7ff fc0a 	bl	8001c1c <HAL_GetTick>
 8002408:	6138      	str	r0, [r7, #16]
 800240a:	e008      	b.n	800241e <HAL_RCC_OscConfig+0x236>
 800240c:	f7ff fc06 	bl	8001c1c <HAL_GetTick>
 8002410:	4602      	mov	r2, r0
 8002412:	693b      	ldr	r3, [r7, #16]
 8002414:	1ad3      	subs	r3, r2, r3
 8002416:	2b02      	cmp	r3, #2
 8002418:	d901      	bls.n	800241e <HAL_RCC_OscConfig+0x236>
 800241a:	2303      	movs	r3, #3
 800241c:	e15a      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 800241e:	4b0d      	ldr	r3, [pc, #52]	; (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002420:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002422:	f003 0302 	and.w	r3, r3, #2
 8002426:	2b00      	cmp	r3, #0
 8002428:	d0f0      	beq.n	800240c <HAL_RCC_OscConfig+0x224>
 800242a:	2001      	movs	r0, #1
 800242c:	f000 faa6 	bl	800297c <RCC_Delay>
 8002430:	e01c      	b.n	800246c <HAL_RCC_OscConfig+0x284>
 8002432:	4b0a      	ldr	r3, [pc, #40]	; (800245c <HAL_RCC_OscConfig+0x274>)
 8002434:	2200      	movs	r2, #0
 8002436:	601a      	str	r2, [r3, #0]
 8002438:	f7ff fbf0 	bl	8001c1c <HAL_GetTick>
 800243c:	6138      	str	r0, [r7, #16]
 800243e:	e00f      	b.n	8002460 <HAL_RCC_OscConfig+0x278>
 8002440:	f7ff fbec 	bl	8001c1c <HAL_GetTick>
 8002444:	4602      	mov	r2, r0
 8002446:	693b      	ldr	r3, [r7, #16]
 8002448:	1ad3      	subs	r3, r2, r3
 800244a:	2b02      	cmp	r3, #2
 800244c:	d908      	bls.n	8002460 <HAL_RCC_OscConfig+0x278>
 800244e:	2303      	movs	r3, #3
 8002450:	e140      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 8002452:	bf00      	nop
 8002454:	40021000 	.word	0x40021000
 8002458:	42420000 	.word	0x42420000
 800245c:	42420480 	.word	0x42420480
 8002460:	4b9e      	ldr	r3, [pc, #632]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002462:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002464:	f003 0302 	and.w	r3, r3, #2
 8002468:	2b00      	cmp	r3, #0
 800246a:	d1e9      	bne.n	8002440 <HAL_RCC_OscConfig+0x258>
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	f003 0304 	and.w	r3, r3, #4
 8002474:	2b00      	cmp	r3, #0
 8002476:	f000 80a6 	beq.w	80025c6 <HAL_RCC_OscConfig+0x3de>
 800247a:	2300      	movs	r3, #0
 800247c:	75fb      	strb	r3, [r7, #23]
 800247e:	4b97      	ldr	r3, [pc, #604]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002480:	69db      	ldr	r3, [r3, #28]
 8002482:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002486:	2b00      	cmp	r3, #0
 8002488:	d10d      	bne.n	80024a6 <HAL_RCC_OscConfig+0x2be>
 800248a:	4b94      	ldr	r3, [pc, #592]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 800248c:	69db      	ldr	r3, [r3, #28]
 800248e:	4a93      	ldr	r2, [pc, #588]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002490:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002494:	61d3      	str	r3, [r2, #28]
 8002496:	4b91      	ldr	r3, [pc, #580]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002498:	69db      	ldr	r3, [r3, #28]
 800249a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800249e:	60bb      	str	r3, [r7, #8]
 80024a0:	68bb      	ldr	r3, [r7, #8]
 80024a2:	2301      	movs	r3, #1
 80024a4:	75fb      	strb	r3, [r7, #23]
 80024a6:	4b8e      	ldr	r3, [pc, #568]	; (80026e0 <HAL_RCC_OscConfig+0x4f8>)
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	d118      	bne.n	80024e4 <HAL_RCC_OscConfig+0x2fc>
 80024b2:	4b8b      	ldr	r3, [pc, #556]	; (80026e0 <HAL_RCC_OscConfig+0x4f8>)
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	4a8a      	ldr	r2, [pc, #552]	; (80026e0 <HAL_RCC_OscConfig+0x4f8>)
 80024b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80024bc:	6013      	str	r3, [r2, #0]
 80024be:	f7ff fbad 	bl	8001c1c <HAL_GetTick>
 80024c2:	6138      	str	r0, [r7, #16]
 80024c4:	e008      	b.n	80024d8 <HAL_RCC_OscConfig+0x2f0>
 80024c6:	f7ff fba9 	bl	8001c1c <HAL_GetTick>
 80024ca:	4602      	mov	r2, r0
 80024cc:	693b      	ldr	r3, [r7, #16]
 80024ce:	1ad3      	subs	r3, r2, r3
 80024d0:	2b64      	cmp	r3, #100	; 0x64
 80024d2:	d901      	bls.n	80024d8 <HAL_RCC_OscConfig+0x2f0>
 80024d4:	2303      	movs	r3, #3
 80024d6:	e0fd      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 80024d8:	4b81      	ldr	r3, [pc, #516]	; (80026e0 <HAL_RCC_OscConfig+0x4f8>)
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80024e0:	2b00      	cmp	r3, #0
 80024e2:	d0f0      	beq.n	80024c6 <HAL_RCC_OscConfig+0x2de>
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	68db      	ldr	r3, [r3, #12]
 80024e8:	2b01      	cmp	r3, #1
 80024ea:	d106      	bne.n	80024fa <HAL_RCC_OscConfig+0x312>
 80024ec:	4b7b      	ldr	r3, [pc, #492]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 80024ee:	6a1b      	ldr	r3, [r3, #32]
 80024f0:	4a7a      	ldr	r2, [pc, #488]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 80024f2:	f043 0301 	orr.w	r3, r3, #1
 80024f6:	6213      	str	r3, [r2, #32]
 80024f8:	e02d      	b.n	8002556 <HAL_RCC_OscConfig+0x36e>
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	68db      	ldr	r3, [r3, #12]
 80024fe:	2b00      	cmp	r3, #0
 8002500:	d10c      	bne.n	800251c <HAL_RCC_OscConfig+0x334>
 8002502:	4b76      	ldr	r3, [pc, #472]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002504:	6a1b      	ldr	r3, [r3, #32]
 8002506:	4a75      	ldr	r2, [pc, #468]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002508:	f023 0301 	bic.w	r3, r3, #1
 800250c:	6213      	str	r3, [r2, #32]
 800250e:	4b73      	ldr	r3, [pc, #460]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002510:	6a1b      	ldr	r3, [r3, #32]
 8002512:	4a72      	ldr	r2, [pc, #456]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002514:	f023 0304 	bic.w	r3, r3, #4
 8002518:	6213      	str	r3, [r2, #32]
 800251a:	e01c      	b.n	8002556 <HAL_RCC_OscConfig+0x36e>
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	68db      	ldr	r3, [r3, #12]
 8002520:	2b05      	cmp	r3, #5
 8002522:	d10c      	bne.n	800253e <HAL_RCC_OscConfig+0x356>
 8002524:	4b6d      	ldr	r3, [pc, #436]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002526:	6a1b      	ldr	r3, [r3, #32]
 8002528:	4a6c      	ldr	r2, [pc, #432]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 800252a:	f043 0304 	orr.w	r3, r3, #4
 800252e:	6213      	str	r3, [r2, #32]
 8002530:	4b6a      	ldr	r3, [pc, #424]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002532:	6a1b      	ldr	r3, [r3, #32]
 8002534:	4a69      	ldr	r2, [pc, #420]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002536:	f043 0301 	orr.w	r3, r3, #1
 800253a:	6213      	str	r3, [r2, #32]
 800253c:	e00b      	b.n	8002556 <HAL_RCC_OscConfig+0x36e>
 800253e:	4b67      	ldr	r3, [pc, #412]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002540:	6a1b      	ldr	r3, [r3, #32]
 8002542:	4a66      	ldr	r2, [pc, #408]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002544:	f023 0301 	bic.w	r3, r3, #1
 8002548:	6213      	str	r3, [r2, #32]
 800254a:	4b64      	ldr	r3, [pc, #400]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 800254c:	6a1b      	ldr	r3, [r3, #32]
 800254e:	4a63      	ldr	r2, [pc, #396]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002550:	f023 0304 	bic.w	r3, r3, #4
 8002554:	6213      	str	r3, [r2, #32]
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	68db      	ldr	r3, [r3, #12]
 800255a:	2b00      	cmp	r3, #0
 800255c:	d015      	beq.n	800258a <HAL_RCC_OscConfig+0x3a2>
 800255e:	f7ff fb5d 	bl	8001c1c <HAL_GetTick>
 8002562:	6138      	str	r0, [r7, #16]
 8002564:	e00a      	b.n	800257c <HAL_RCC_OscConfig+0x394>
 8002566:	f7ff fb59 	bl	8001c1c <HAL_GetTick>
 800256a:	4602      	mov	r2, r0
 800256c:	693b      	ldr	r3, [r7, #16]
 800256e:	1ad3      	subs	r3, r2, r3
 8002570:	f241 3288 	movw	r2, #5000	; 0x1388
 8002574:	4293      	cmp	r3, r2
 8002576:	d901      	bls.n	800257c <HAL_RCC_OscConfig+0x394>
 8002578:	2303      	movs	r3, #3
 800257a:	e0ab      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 800257c:	4b57      	ldr	r3, [pc, #348]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 800257e:	6a1b      	ldr	r3, [r3, #32]
 8002580:	f003 0302 	and.w	r3, r3, #2
 8002584:	2b00      	cmp	r3, #0
 8002586:	d0ee      	beq.n	8002566 <HAL_RCC_OscConfig+0x37e>
 8002588:	e014      	b.n	80025b4 <HAL_RCC_OscConfig+0x3cc>
 800258a:	f7ff fb47 	bl	8001c1c <HAL_GetTick>
 800258e:	6138      	str	r0, [r7, #16]
 8002590:	e00a      	b.n	80025a8 <HAL_RCC_OscConfig+0x3c0>
 8002592:	f7ff fb43 	bl	8001c1c <HAL_GetTick>
 8002596:	4602      	mov	r2, r0
 8002598:	693b      	ldr	r3, [r7, #16]
 800259a:	1ad3      	subs	r3, r2, r3
 800259c:	f241 3288 	movw	r2, #5000	; 0x1388
 80025a0:	4293      	cmp	r3, r2
 80025a2:	d901      	bls.n	80025a8 <HAL_RCC_OscConfig+0x3c0>
 80025a4:	2303      	movs	r3, #3
 80025a6:	e095      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 80025a8:	4b4c      	ldr	r3, [pc, #304]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 80025aa:	6a1b      	ldr	r3, [r3, #32]
 80025ac:	f003 0302 	and.w	r3, r3, #2
 80025b0:	2b00      	cmp	r3, #0
 80025b2:	d1ee      	bne.n	8002592 <HAL_RCC_OscConfig+0x3aa>
 80025b4:	7dfb      	ldrb	r3, [r7, #23]
 80025b6:	2b01      	cmp	r3, #1
 80025b8:	d105      	bne.n	80025c6 <HAL_RCC_OscConfig+0x3de>
 80025ba:	4b48      	ldr	r3, [pc, #288]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 80025bc:	69db      	ldr	r3, [r3, #28]
 80025be:	4a47      	ldr	r2, [pc, #284]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 80025c0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80025c4:	61d3      	str	r3, [r2, #28]
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	69db      	ldr	r3, [r3, #28]
 80025ca:	2b00      	cmp	r3, #0
 80025cc:	f000 8081 	beq.w	80026d2 <HAL_RCC_OscConfig+0x4ea>
 80025d0:	4b42      	ldr	r3, [pc, #264]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 80025d2:	685b      	ldr	r3, [r3, #4]
 80025d4:	f003 030c 	and.w	r3, r3, #12
 80025d8:	2b08      	cmp	r3, #8
 80025da:	d061      	beq.n	80026a0 <HAL_RCC_OscConfig+0x4b8>
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	69db      	ldr	r3, [r3, #28]
 80025e0:	2b02      	cmp	r3, #2
 80025e2:	d146      	bne.n	8002672 <HAL_RCC_OscConfig+0x48a>
 80025e4:	4b3f      	ldr	r3, [pc, #252]	; (80026e4 <HAL_RCC_OscConfig+0x4fc>)
 80025e6:	2200      	movs	r2, #0
 80025e8:	601a      	str	r2, [r3, #0]
 80025ea:	f7ff fb17 	bl	8001c1c <HAL_GetTick>
 80025ee:	6138      	str	r0, [r7, #16]
 80025f0:	e008      	b.n	8002604 <HAL_RCC_OscConfig+0x41c>
 80025f2:	f7ff fb13 	bl	8001c1c <HAL_GetTick>
 80025f6:	4602      	mov	r2, r0
 80025f8:	693b      	ldr	r3, [r7, #16]
 80025fa:	1ad3      	subs	r3, r2, r3
 80025fc:	2b02      	cmp	r3, #2
 80025fe:	d901      	bls.n	8002604 <HAL_RCC_OscConfig+0x41c>
 8002600:	2303      	movs	r3, #3
 8002602:	e067      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 8002604:	4b35      	ldr	r3, [pc, #212]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800260c:	2b00      	cmp	r3, #0
 800260e:	d1f0      	bne.n	80025f2 <HAL_RCC_OscConfig+0x40a>
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	6a1b      	ldr	r3, [r3, #32]
 8002614:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002618:	d108      	bne.n	800262c <HAL_RCC_OscConfig+0x444>
 800261a:	4b30      	ldr	r3, [pc, #192]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 800261c:	685b      	ldr	r3, [r3, #4]
 800261e:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	689b      	ldr	r3, [r3, #8]
 8002626:	492d      	ldr	r1, [pc, #180]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002628:	4313      	orrs	r3, r2
 800262a:	604b      	str	r3, [r1, #4]
 800262c:	4b2b      	ldr	r3, [pc, #172]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 800262e:	685b      	ldr	r3, [r3, #4]
 8002630:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	6a19      	ldr	r1, [r3, #32]
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800263c:	430b      	orrs	r3, r1
 800263e:	4927      	ldr	r1, [pc, #156]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002640:	4313      	orrs	r3, r2
 8002642:	604b      	str	r3, [r1, #4]
 8002644:	4b27      	ldr	r3, [pc, #156]	; (80026e4 <HAL_RCC_OscConfig+0x4fc>)
 8002646:	2201      	movs	r2, #1
 8002648:	601a      	str	r2, [r3, #0]
 800264a:	f7ff fae7 	bl	8001c1c <HAL_GetTick>
 800264e:	6138      	str	r0, [r7, #16]
 8002650:	e008      	b.n	8002664 <HAL_RCC_OscConfig+0x47c>
 8002652:	f7ff fae3 	bl	8001c1c <HAL_GetTick>
 8002656:	4602      	mov	r2, r0
 8002658:	693b      	ldr	r3, [r7, #16]
 800265a:	1ad3      	subs	r3, r2, r3
 800265c:	2b02      	cmp	r3, #2
 800265e:	d901      	bls.n	8002664 <HAL_RCC_OscConfig+0x47c>
 8002660:	2303      	movs	r3, #3
 8002662:	e037      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 8002664:	4b1d      	ldr	r3, [pc, #116]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002666:	681b      	ldr	r3, [r3, #0]
 8002668:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800266c:	2b00      	cmp	r3, #0
 800266e:	d0f0      	beq.n	8002652 <HAL_RCC_OscConfig+0x46a>
 8002670:	e02f      	b.n	80026d2 <HAL_RCC_OscConfig+0x4ea>
 8002672:	4b1c      	ldr	r3, [pc, #112]	; (80026e4 <HAL_RCC_OscConfig+0x4fc>)
 8002674:	2200      	movs	r2, #0
 8002676:	601a      	str	r2, [r3, #0]
 8002678:	f7ff fad0 	bl	8001c1c <HAL_GetTick>
 800267c:	6138      	str	r0, [r7, #16]
 800267e:	e008      	b.n	8002692 <HAL_RCC_OscConfig+0x4aa>
 8002680:	f7ff facc 	bl	8001c1c <HAL_GetTick>
 8002684:	4602      	mov	r2, r0
 8002686:	693b      	ldr	r3, [r7, #16]
 8002688:	1ad3      	subs	r3, r2, r3
 800268a:	2b02      	cmp	r3, #2
 800268c:	d901      	bls.n	8002692 <HAL_RCC_OscConfig+0x4aa>
 800268e:	2303      	movs	r3, #3
 8002690:	e020      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 8002692:	4b12      	ldr	r3, [pc, #72]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800269a:	2b00      	cmp	r3, #0
 800269c:	d1f0      	bne.n	8002680 <HAL_RCC_OscConfig+0x498>
 800269e:	e018      	b.n	80026d2 <HAL_RCC_OscConfig+0x4ea>
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	69db      	ldr	r3, [r3, #28]
 80026a4:	2b01      	cmp	r3, #1
 80026a6:	d101      	bne.n	80026ac <HAL_RCC_OscConfig+0x4c4>
 80026a8:	2301      	movs	r3, #1
 80026aa:	e013      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 80026ac:	4b0b      	ldr	r3, [pc, #44]	; (80026dc <HAL_RCC_OscConfig+0x4f4>)
 80026ae:	685b      	ldr	r3, [r3, #4]
 80026b0:	60fb      	str	r3, [r7, #12]
 80026b2:	68fb      	ldr	r3, [r7, #12]
 80026b4:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	6a1b      	ldr	r3, [r3, #32]
 80026bc:	429a      	cmp	r2, r3
 80026be:	d106      	bne.n	80026ce <HAL_RCC_OscConfig+0x4e6>
 80026c0:	68fb      	ldr	r3, [r7, #12]
 80026c2:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026ca:	429a      	cmp	r2, r3
 80026cc:	d001      	beq.n	80026d2 <HAL_RCC_OscConfig+0x4ea>
 80026ce:	2301      	movs	r3, #1
 80026d0:	e000      	b.n	80026d4 <HAL_RCC_OscConfig+0x4ec>
 80026d2:	2300      	movs	r3, #0
 80026d4:	4618      	mov	r0, r3
 80026d6:	3718      	adds	r7, #24
 80026d8:	46bd      	mov	sp, r7
 80026da:	bd80      	pop	{r7, pc}
 80026dc:	40021000 	.word	0x40021000
 80026e0:	40007000 	.word	0x40007000
 80026e4:	42420060 	.word	0x42420060

080026e8 <HAL_RCC_ClockConfig>:
 80026e8:	b580      	push	{r7, lr}
 80026ea:	b084      	sub	sp, #16
 80026ec:	af00      	add	r7, sp, #0
 80026ee:	6078      	str	r0, [r7, #4]
 80026f0:	6039      	str	r1, [r7, #0]
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	2b00      	cmp	r3, #0
 80026f6:	d101      	bne.n	80026fc <HAL_RCC_ClockConfig+0x14>
 80026f8:	2301      	movs	r3, #1
 80026fa:	e0d0      	b.n	800289e <HAL_RCC_ClockConfig+0x1b6>
 80026fc:	4b6a      	ldr	r3, [pc, #424]	; (80028a8 <HAL_RCC_ClockConfig+0x1c0>)
 80026fe:	681b      	ldr	r3, [r3, #0]
 8002700:	f003 0307 	and.w	r3, r3, #7
 8002704:	683a      	ldr	r2, [r7, #0]
 8002706:	429a      	cmp	r2, r3
 8002708:	d910      	bls.n	800272c <HAL_RCC_ClockConfig+0x44>
 800270a:	4b67      	ldr	r3, [pc, #412]	; (80028a8 <HAL_RCC_ClockConfig+0x1c0>)
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	f023 0207 	bic.w	r2, r3, #7
 8002712:	4965      	ldr	r1, [pc, #404]	; (80028a8 <HAL_RCC_ClockConfig+0x1c0>)
 8002714:	683b      	ldr	r3, [r7, #0]
 8002716:	4313      	orrs	r3, r2
 8002718:	600b      	str	r3, [r1, #0]
 800271a:	4b63      	ldr	r3, [pc, #396]	; (80028a8 <HAL_RCC_ClockConfig+0x1c0>)
 800271c:	681b      	ldr	r3, [r3, #0]
 800271e:	f003 0307 	and.w	r3, r3, #7
 8002722:	683a      	ldr	r2, [r7, #0]
 8002724:	429a      	cmp	r2, r3
 8002726:	d001      	beq.n	800272c <HAL_RCC_ClockConfig+0x44>
 8002728:	2301      	movs	r3, #1
 800272a:	e0b8      	b.n	800289e <HAL_RCC_ClockConfig+0x1b6>
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	f003 0302 	and.w	r3, r3, #2
 8002734:	2b00      	cmp	r3, #0
 8002736:	d020      	beq.n	800277a <HAL_RCC_ClockConfig+0x92>
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	681b      	ldr	r3, [r3, #0]
 800273c:	f003 0304 	and.w	r3, r3, #4
 8002740:	2b00      	cmp	r3, #0
 8002742:	d005      	beq.n	8002750 <HAL_RCC_ClockConfig+0x68>
 8002744:	4b59      	ldr	r3, [pc, #356]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 8002746:	685b      	ldr	r3, [r3, #4]
 8002748:	4a58      	ldr	r2, [pc, #352]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 800274a:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 800274e:	6053      	str	r3, [r2, #4]
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	f003 0308 	and.w	r3, r3, #8
 8002758:	2b00      	cmp	r3, #0
 800275a:	d005      	beq.n	8002768 <HAL_RCC_ClockConfig+0x80>
 800275c:	4b53      	ldr	r3, [pc, #332]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 800275e:	685b      	ldr	r3, [r3, #4]
 8002760:	4a52      	ldr	r2, [pc, #328]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 8002762:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8002766:	6053      	str	r3, [r2, #4]
 8002768:	4b50      	ldr	r3, [pc, #320]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 800276a:	685b      	ldr	r3, [r3, #4]
 800276c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	689b      	ldr	r3, [r3, #8]
 8002774:	494d      	ldr	r1, [pc, #308]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 8002776:	4313      	orrs	r3, r2
 8002778:	604b      	str	r3, [r1, #4]
 800277a:	687b      	ldr	r3, [r7, #4]
 800277c:	681b      	ldr	r3, [r3, #0]
 800277e:	f003 0301 	and.w	r3, r3, #1
 8002782:	2b00      	cmp	r3, #0
 8002784:	d040      	beq.n	8002808 <HAL_RCC_ClockConfig+0x120>
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	685b      	ldr	r3, [r3, #4]
 800278a:	2b01      	cmp	r3, #1
 800278c:	d107      	bne.n	800279e <HAL_RCC_ClockConfig+0xb6>
 800278e:	4b47      	ldr	r3, [pc, #284]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 8002790:	681b      	ldr	r3, [r3, #0]
 8002792:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002796:	2b00      	cmp	r3, #0
 8002798:	d115      	bne.n	80027c6 <HAL_RCC_ClockConfig+0xde>
 800279a:	2301      	movs	r3, #1
 800279c:	e07f      	b.n	800289e <HAL_RCC_ClockConfig+0x1b6>
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	685b      	ldr	r3, [r3, #4]
 80027a2:	2b02      	cmp	r3, #2
 80027a4:	d107      	bne.n	80027b6 <HAL_RCC_ClockConfig+0xce>
 80027a6:	4b41      	ldr	r3, [pc, #260]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 80027a8:	681b      	ldr	r3, [r3, #0]
 80027aa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80027ae:	2b00      	cmp	r3, #0
 80027b0:	d109      	bne.n	80027c6 <HAL_RCC_ClockConfig+0xde>
 80027b2:	2301      	movs	r3, #1
 80027b4:	e073      	b.n	800289e <HAL_RCC_ClockConfig+0x1b6>
 80027b6:	4b3d      	ldr	r3, [pc, #244]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	f003 0302 	and.w	r3, r3, #2
 80027be:	2b00      	cmp	r3, #0
 80027c0:	d101      	bne.n	80027c6 <HAL_RCC_ClockConfig+0xde>
 80027c2:	2301      	movs	r3, #1
 80027c4:	e06b      	b.n	800289e <HAL_RCC_ClockConfig+0x1b6>
 80027c6:	4b39      	ldr	r3, [pc, #228]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 80027c8:	685b      	ldr	r3, [r3, #4]
 80027ca:	f023 0203 	bic.w	r2, r3, #3
 80027ce:	687b      	ldr	r3, [r7, #4]
 80027d0:	685b      	ldr	r3, [r3, #4]
 80027d2:	4936      	ldr	r1, [pc, #216]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 80027d4:	4313      	orrs	r3, r2
 80027d6:	604b      	str	r3, [r1, #4]
 80027d8:	f7ff fa20 	bl	8001c1c <HAL_GetTick>
 80027dc:	60f8      	str	r0, [r7, #12]
 80027de:	e00a      	b.n	80027f6 <HAL_RCC_ClockConfig+0x10e>
 80027e0:	f7ff fa1c 	bl	8001c1c <HAL_GetTick>
 80027e4:	4602      	mov	r2, r0
 80027e6:	68fb      	ldr	r3, [r7, #12]
 80027e8:	1ad3      	subs	r3, r2, r3
 80027ea:	f241 3288 	movw	r2, #5000	; 0x1388
 80027ee:	4293      	cmp	r3, r2
 80027f0:	d901      	bls.n	80027f6 <HAL_RCC_ClockConfig+0x10e>
 80027f2:	2303      	movs	r3, #3
 80027f4:	e053      	b.n	800289e <HAL_RCC_ClockConfig+0x1b6>
 80027f6:	4b2d      	ldr	r3, [pc, #180]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 80027f8:	685b      	ldr	r3, [r3, #4]
 80027fa:	f003 020c 	and.w	r2, r3, #12
 80027fe:	687b      	ldr	r3, [r7, #4]
 8002800:	685b      	ldr	r3, [r3, #4]
 8002802:	009b      	lsls	r3, r3, #2
 8002804:	429a      	cmp	r2, r3
 8002806:	d1eb      	bne.n	80027e0 <HAL_RCC_ClockConfig+0xf8>
 8002808:	4b27      	ldr	r3, [pc, #156]	; (80028a8 <HAL_RCC_ClockConfig+0x1c0>)
 800280a:	681b      	ldr	r3, [r3, #0]
 800280c:	f003 0307 	and.w	r3, r3, #7
 8002810:	683a      	ldr	r2, [r7, #0]
 8002812:	429a      	cmp	r2, r3
 8002814:	d210      	bcs.n	8002838 <HAL_RCC_ClockConfig+0x150>
 8002816:	4b24      	ldr	r3, [pc, #144]	; (80028a8 <HAL_RCC_ClockConfig+0x1c0>)
 8002818:	681b      	ldr	r3, [r3, #0]
 800281a:	f023 0207 	bic.w	r2, r3, #7
 800281e:	4922      	ldr	r1, [pc, #136]	; (80028a8 <HAL_RCC_ClockConfig+0x1c0>)
 8002820:	683b      	ldr	r3, [r7, #0]
 8002822:	4313      	orrs	r3, r2
 8002824:	600b      	str	r3, [r1, #0]
 8002826:	4b20      	ldr	r3, [pc, #128]	; (80028a8 <HAL_RCC_ClockConfig+0x1c0>)
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	f003 0307 	and.w	r3, r3, #7
 800282e:	683a      	ldr	r2, [r7, #0]
 8002830:	429a      	cmp	r2, r3
 8002832:	d001      	beq.n	8002838 <HAL_RCC_ClockConfig+0x150>
 8002834:	2301      	movs	r3, #1
 8002836:	e032      	b.n	800289e <HAL_RCC_ClockConfig+0x1b6>
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	f003 0304 	and.w	r3, r3, #4
 8002840:	2b00      	cmp	r3, #0
 8002842:	d008      	beq.n	8002856 <HAL_RCC_ClockConfig+0x16e>
 8002844:	4b19      	ldr	r3, [pc, #100]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 8002846:	685b      	ldr	r3, [r3, #4]
 8002848:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	68db      	ldr	r3, [r3, #12]
 8002850:	4916      	ldr	r1, [pc, #88]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 8002852:	4313      	orrs	r3, r2
 8002854:	604b      	str	r3, [r1, #4]
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	681b      	ldr	r3, [r3, #0]
 800285a:	f003 0308 	and.w	r3, r3, #8
 800285e:	2b00      	cmp	r3, #0
 8002860:	d009      	beq.n	8002876 <HAL_RCC_ClockConfig+0x18e>
 8002862:	4b12      	ldr	r3, [pc, #72]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 8002864:	685b      	ldr	r3, [r3, #4]
 8002866:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	691b      	ldr	r3, [r3, #16]
 800286e:	00db      	lsls	r3, r3, #3
 8002870:	490e      	ldr	r1, [pc, #56]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 8002872:	4313      	orrs	r3, r2
 8002874:	604b      	str	r3, [r1, #4]
 8002876:	f000 f821 	bl	80028bc <HAL_RCC_GetSysClockFreq>
 800287a:	4602      	mov	r2, r0
 800287c:	4b0b      	ldr	r3, [pc, #44]	; (80028ac <HAL_RCC_ClockConfig+0x1c4>)
 800287e:	685b      	ldr	r3, [r3, #4]
 8002880:	091b      	lsrs	r3, r3, #4
 8002882:	f003 030f 	and.w	r3, r3, #15
 8002886:	490a      	ldr	r1, [pc, #40]	; (80028b0 <HAL_RCC_ClockConfig+0x1c8>)
 8002888:	5ccb      	ldrb	r3, [r1, r3]
 800288a:	fa22 f303 	lsr.w	r3, r2, r3
 800288e:	4a09      	ldr	r2, [pc, #36]	; (80028b4 <HAL_RCC_ClockConfig+0x1cc>)
 8002890:	6013      	str	r3, [r2, #0]
 8002892:	4b09      	ldr	r3, [pc, #36]	; (80028b8 <HAL_RCC_ClockConfig+0x1d0>)
 8002894:	681b      	ldr	r3, [r3, #0]
 8002896:	4618      	mov	r0, r3
 8002898:	f7ff f97e 	bl	8001b98 <HAL_InitTick>
 800289c:	2300      	movs	r3, #0
 800289e:	4618      	mov	r0, r3
 80028a0:	3710      	adds	r7, #16
 80028a2:	46bd      	mov	sp, r7
 80028a4:	bd80      	pop	{r7, pc}
 80028a6:	bf00      	nop
 80028a8:	40022000 	.word	0x40022000
 80028ac:	40021000 	.word	0x40021000
 80028b0:	08005f78 	.word	0x08005f78
 80028b4:	20000000 	.word	0x20000000
 80028b8:	20000004 	.word	0x20000004

080028bc <HAL_RCC_GetSysClockFreq>:
 80028bc:	b490      	push	{r4, r7}
 80028be:	b08a      	sub	sp, #40	; 0x28
 80028c0:	af00      	add	r7, sp, #0
 80028c2:	4b2a      	ldr	r3, [pc, #168]	; (800296c <HAL_RCC_GetSysClockFreq+0xb0>)
 80028c4:	1d3c      	adds	r4, r7, #4
 80028c6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80028c8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80028cc:	f240 2301 	movw	r3, #513	; 0x201
 80028d0:	803b      	strh	r3, [r7, #0]
 80028d2:	2300      	movs	r3, #0
 80028d4:	61fb      	str	r3, [r7, #28]
 80028d6:	2300      	movs	r3, #0
 80028d8:	61bb      	str	r3, [r7, #24]
 80028da:	2300      	movs	r3, #0
 80028dc:	627b      	str	r3, [r7, #36]	; 0x24
 80028de:	2300      	movs	r3, #0
 80028e0:	617b      	str	r3, [r7, #20]
 80028e2:	2300      	movs	r3, #0
 80028e4:	623b      	str	r3, [r7, #32]
 80028e6:	4b22      	ldr	r3, [pc, #136]	; (8002970 <HAL_RCC_GetSysClockFreq+0xb4>)
 80028e8:	685b      	ldr	r3, [r3, #4]
 80028ea:	61fb      	str	r3, [r7, #28]
 80028ec:	69fb      	ldr	r3, [r7, #28]
 80028ee:	f003 030c 	and.w	r3, r3, #12
 80028f2:	2b04      	cmp	r3, #4
 80028f4:	d002      	beq.n	80028fc <HAL_RCC_GetSysClockFreq+0x40>
 80028f6:	2b08      	cmp	r3, #8
 80028f8:	d003      	beq.n	8002902 <HAL_RCC_GetSysClockFreq+0x46>
 80028fa:	e02d      	b.n	8002958 <HAL_RCC_GetSysClockFreq+0x9c>
 80028fc:	4b1d      	ldr	r3, [pc, #116]	; (8002974 <HAL_RCC_GetSysClockFreq+0xb8>)
 80028fe:	623b      	str	r3, [r7, #32]
 8002900:	e02d      	b.n	800295e <HAL_RCC_GetSysClockFreq+0xa2>
 8002902:	69fb      	ldr	r3, [r7, #28]
 8002904:	0c9b      	lsrs	r3, r3, #18
 8002906:	f003 030f 	and.w	r3, r3, #15
 800290a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800290e:	4413      	add	r3, r2
 8002910:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8002914:	617b      	str	r3, [r7, #20]
 8002916:	69fb      	ldr	r3, [r7, #28]
 8002918:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800291c:	2b00      	cmp	r3, #0
 800291e:	d013      	beq.n	8002948 <HAL_RCC_GetSysClockFreq+0x8c>
 8002920:	4b13      	ldr	r3, [pc, #76]	; (8002970 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002922:	685b      	ldr	r3, [r3, #4]
 8002924:	0c5b      	lsrs	r3, r3, #17
 8002926:	f003 0301 	and.w	r3, r3, #1
 800292a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800292e:	4413      	add	r3, r2
 8002930:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8002934:	61bb      	str	r3, [r7, #24]
 8002936:	697b      	ldr	r3, [r7, #20]
 8002938:	4a0e      	ldr	r2, [pc, #56]	; (8002974 <HAL_RCC_GetSysClockFreq+0xb8>)
 800293a:	fb02 f203 	mul.w	r2, r2, r3
 800293e:	69bb      	ldr	r3, [r7, #24]
 8002940:	fbb2 f3f3 	udiv	r3, r2, r3
 8002944:	627b      	str	r3, [r7, #36]	; 0x24
 8002946:	e004      	b.n	8002952 <HAL_RCC_GetSysClockFreq+0x96>
 8002948:	697b      	ldr	r3, [r7, #20]
 800294a:	4a0b      	ldr	r2, [pc, #44]	; (8002978 <HAL_RCC_GetSysClockFreq+0xbc>)
 800294c:	fb02 f303 	mul.w	r3, r2, r3
 8002950:	627b      	str	r3, [r7, #36]	; 0x24
 8002952:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002954:	623b      	str	r3, [r7, #32]
 8002956:	e002      	b.n	800295e <HAL_RCC_GetSysClockFreq+0xa2>
 8002958:	4b06      	ldr	r3, [pc, #24]	; (8002974 <HAL_RCC_GetSysClockFreq+0xb8>)
 800295a:	623b      	str	r3, [r7, #32]
 800295c:	bf00      	nop
 800295e:	6a3b      	ldr	r3, [r7, #32]
 8002960:	4618      	mov	r0, r3
 8002962:	3728      	adds	r7, #40	; 0x28
 8002964:	46bd      	mov	sp, r7
 8002966:	bc90      	pop	{r4, r7}
 8002968:	4770      	bx	lr
 800296a:	bf00      	nop
 800296c:	08005f58 	.word	0x08005f58
 8002970:	40021000 	.word	0x40021000
 8002974:	007a1200 	.word	0x007a1200
 8002978:	003d0900 	.word	0x003d0900

0800297c <RCC_Delay>:
 800297c:	b480      	push	{r7}
 800297e:	b085      	sub	sp, #20
 8002980:	af00      	add	r7, sp, #0
 8002982:	6078      	str	r0, [r7, #4]
 8002984:	4b0a      	ldr	r3, [pc, #40]	; (80029b0 <RCC_Delay+0x34>)
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	4a0a      	ldr	r2, [pc, #40]	; (80029b4 <RCC_Delay+0x38>)
 800298a:	fba2 2303 	umull	r2, r3, r2, r3
 800298e:	0a5b      	lsrs	r3, r3, #9
 8002990:	687a      	ldr	r2, [r7, #4]
 8002992:	fb02 f303 	mul.w	r3, r2, r3
 8002996:	60fb      	str	r3, [r7, #12]
 8002998:	bf00      	nop
 800299a:	68fb      	ldr	r3, [r7, #12]
 800299c:	1e5a      	subs	r2, r3, #1
 800299e:	60fa      	str	r2, [r7, #12]
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d1f9      	bne.n	8002998 <RCC_Delay+0x1c>
 80029a4:	bf00      	nop
 80029a6:	bf00      	nop
 80029a8:	3714      	adds	r7, #20
 80029aa:	46bd      	mov	sp, r7
 80029ac:	bc80      	pop	{r7}
 80029ae:	4770      	bx	lr
 80029b0:	20000000 	.word	0x20000000
 80029b4:	10624dd3 	.word	0x10624dd3

080029b8 <HAL_TIM_Base_Init>:
 80029b8:	b580      	push	{r7, lr}
 80029ba:	b082      	sub	sp, #8
 80029bc:	af00      	add	r7, sp, #0
 80029be:	6078      	str	r0, [r7, #4]
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	2b00      	cmp	r3, #0
 80029c4:	d101      	bne.n	80029ca <HAL_TIM_Base_Init+0x12>
 80029c6:	2301      	movs	r3, #1
 80029c8:	e041      	b.n	8002a4e <HAL_TIM_Base_Init+0x96>
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80029d0:	b2db      	uxtb	r3, r3
 80029d2:	2b00      	cmp	r3, #0
 80029d4:	d106      	bne.n	80029e4 <HAL_TIM_Base_Init+0x2c>
 80029d6:	687b      	ldr	r3, [r7, #4]
 80029d8:	2200      	movs	r2, #0
 80029da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80029de:	6878      	ldr	r0, [r7, #4]
 80029e0:	f7fe ff82 	bl	80018e8 <HAL_TIM_Base_MspInit>
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	2202      	movs	r2, #2
 80029e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80029ec:	687b      	ldr	r3, [r7, #4]
 80029ee:	681a      	ldr	r2, [r3, #0]
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	3304      	adds	r3, #4
 80029f4:	4619      	mov	r1, r3
 80029f6:	4610      	mov	r0, r2
 80029f8:	f000 fa6a 	bl	8002ed0 <TIM_Base_SetConfig>
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	2201      	movs	r2, #1
 8002a00:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	2201      	movs	r2, #1
 8002a08:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	2201      	movs	r2, #1
 8002a10:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	2201      	movs	r2, #1
 8002a18:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	2201      	movs	r2, #1
 8002a20:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	2201      	movs	r2, #1
 8002a28:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	2201      	movs	r2, #1
 8002a30:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	2201      	movs	r2, #1
 8002a38:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	2201      	movs	r2, #1
 8002a40:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	2201      	movs	r2, #1
 8002a48:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a4c:	2300      	movs	r3, #0
 8002a4e:	4618      	mov	r0, r3
 8002a50:	3708      	adds	r7, #8
 8002a52:	46bd      	mov	sp, r7
 8002a54:	bd80      	pop	{r7, pc}
	...

08002a58 <HAL_TIM_Base_Start_IT>:
 8002a58:	b480      	push	{r7}
 8002a5a:	b085      	sub	sp, #20
 8002a5c:	af00      	add	r7, sp, #0
 8002a5e:	6078      	str	r0, [r7, #4]
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002a66:	b2db      	uxtb	r3, r3
 8002a68:	2b01      	cmp	r3, #1
 8002a6a:	d001      	beq.n	8002a70 <HAL_TIM_Base_Start_IT+0x18>
 8002a6c:	2301      	movs	r3, #1
 8002a6e:	e035      	b.n	8002adc <HAL_TIM_Base_Start_IT+0x84>
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	2202      	movs	r2, #2
 8002a74:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	68da      	ldr	r2, [r3, #12]
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	681b      	ldr	r3, [r3, #0]
 8002a82:	f042 0201 	orr.w	r2, r2, #1
 8002a86:	60da      	str	r2, [r3, #12]
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	681b      	ldr	r3, [r3, #0]
 8002a8c:	4a16      	ldr	r2, [pc, #88]	; (8002ae8 <HAL_TIM_Base_Start_IT+0x90>)
 8002a8e:	4293      	cmp	r3, r2
 8002a90:	d009      	beq.n	8002aa6 <HAL_TIM_Base_Start_IT+0x4e>
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	681b      	ldr	r3, [r3, #0]
 8002a96:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002a9a:	d004      	beq.n	8002aa6 <HAL_TIM_Base_Start_IT+0x4e>
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	681b      	ldr	r3, [r3, #0]
 8002aa0:	4a12      	ldr	r2, [pc, #72]	; (8002aec <HAL_TIM_Base_Start_IT+0x94>)
 8002aa2:	4293      	cmp	r3, r2
 8002aa4:	d111      	bne.n	8002aca <HAL_TIM_Base_Start_IT+0x72>
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	681b      	ldr	r3, [r3, #0]
 8002aaa:	689b      	ldr	r3, [r3, #8]
 8002aac:	f003 0307 	and.w	r3, r3, #7
 8002ab0:	60fb      	str	r3, [r7, #12]
 8002ab2:	68fb      	ldr	r3, [r7, #12]
 8002ab4:	2b06      	cmp	r3, #6
 8002ab6:	d010      	beq.n	8002ada <HAL_TIM_Base_Start_IT+0x82>
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	681a      	ldr	r2, [r3, #0]
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	681b      	ldr	r3, [r3, #0]
 8002ac2:	f042 0201 	orr.w	r2, r2, #1
 8002ac6:	601a      	str	r2, [r3, #0]
 8002ac8:	e007      	b.n	8002ada <HAL_TIM_Base_Start_IT+0x82>
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	681a      	ldr	r2, [r3, #0]
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	681b      	ldr	r3, [r3, #0]
 8002ad4:	f042 0201 	orr.w	r2, r2, #1
 8002ad8:	601a      	str	r2, [r3, #0]
 8002ada:	2300      	movs	r3, #0
 8002adc:	4618      	mov	r0, r3
 8002ade:	3714      	adds	r7, #20
 8002ae0:	46bd      	mov	sp, r7
 8002ae2:	bc80      	pop	{r7}
 8002ae4:	4770      	bx	lr
 8002ae6:	bf00      	nop
 8002ae8:	40012c00 	.word	0x40012c00
 8002aec:	40000400 	.word	0x40000400

08002af0 <HAL_TIM_IRQHandler>:
 8002af0:	b580      	push	{r7, lr}
 8002af2:	b082      	sub	sp, #8
 8002af4:	af00      	add	r7, sp, #0
 8002af6:	6078      	str	r0, [r7, #4]
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	691b      	ldr	r3, [r3, #16]
 8002afe:	f003 0302 	and.w	r3, r3, #2
 8002b02:	2b02      	cmp	r3, #2
 8002b04:	d122      	bne.n	8002b4c <HAL_TIM_IRQHandler+0x5c>
 8002b06:	687b      	ldr	r3, [r7, #4]
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	68db      	ldr	r3, [r3, #12]
 8002b0c:	f003 0302 	and.w	r3, r3, #2
 8002b10:	2b02      	cmp	r3, #2
 8002b12:	d11b      	bne.n	8002b4c <HAL_TIM_IRQHandler+0x5c>
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	f06f 0202 	mvn.w	r2, #2
 8002b1c:	611a      	str	r2, [r3, #16]
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	2201      	movs	r2, #1
 8002b22:	771a      	strb	r2, [r3, #28]
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	699b      	ldr	r3, [r3, #24]
 8002b2a:	f003 0303 	and.w	r3, r3, #3
 8002b2e:	2b00      	cmp	r3, #0
 8002b30:	d003      	beq.n	8002b3a <HAL_TIM_IRQHandler+0x4a>
 8002b32:	6878      	ldr	r0, [r7, #4]
 8002b34:	f000 f9b1 	bl	8002e9a <HAL_TIM_IC_CaptureCallback>
 8002b38:	e005      	b.n	8002b46 <HAL_TIM_IRQHandler+0x56>
 8002b3a:	6878      	ldr	r0, [r7, #4]
 8002b3c:	f000 f9a4 	bl	8002e88 <HAL_TIM_OC_DelayElapsedCallback>
 8002b40:	6878      	ldr	r0, [r7, #4]
 8002b42:	f000 f9b3 	bl	8002eac <HAL_TIM_PWM_PulseFinishedCallback>
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	2200      	movs	r2, #0
 8002b4a:	771a      	strb	r2, [r3, #28]
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	681b      	ldr	r3, [r3, #0]
 8002b50:	691b      	ldr	r3, [r3, #16]
 8002b52:	f003 0304 	and.w	r3, r3, #4
 8002b56:	2b04      	cmp	r3, #4
 8002b58:	d122      	bne.n	8002ba0 <HAL_TIM_IRQHandler+0xb0>
 8002b5a:	687b      	ldr	r3, [r7, #4]
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	68db      	ldr	r3, [r3, #12]
 8002b60:	f003 0304 	and.w	r3, r3, #4
 8002b64:	2b04      	cmp	r3, #4
 8002b66:	d11b      	bne.n	8002ba0 <HAL_TIM_IRQHandler+0xb0>
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	681b      	ldr	r3, [r3, #0]
 8002b6c:	f06f 0204 	mvn.w	r2, #4
 8002b70:	611a      	str	r2, [r3, #16]
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	2202      	movs	r2, #2
 8002b76:	771a      	strb	r2, [r3, #28]
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	681b      	ldr	r3, [r3, #0]
 8002b7c:	699b      	ldr	r3, [r3, #24]
 8002b7e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002b82:	2b00      	cmp	r3, #0
 8002b84:	d003      	beq.n	8002b8e <HAL_TIM_IRQHandler+0x9e>
 8002b86:	6878      	ldr	r0, [r7, #4]
 8002b88:	f000 f987 	bl	8002e9a <HAL_TIM_IC_CaptureCallback>
 8002b8c:	e005      	b.n	8002b9a <HAL_TIM_IRQHandler+0xaa>
 8002b8e:	6878      	ldr	r0, [r7, #4]
 8002b90:	f000 f97a 	bl	8002e88 <HAL_TIM_OC_DelayElapsedCallback>
 8002b94:	6878      	ldr	r0, [r7, #4]
 8002b96:	f000 f989 	bl	8002eac <HAL_TIM_PWM_PulseFinishedCallback>
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	2200      	movs	r2, #0
 8002b9e:	771a      	strb	r2, [r3, #28]
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	681b      	ldr	r3, [r3, #0]
 8002ba4:	691b      	ldr	r3, [r3, #16]
 8002ba6:	f003 0308 	and.w	r3, r3, #8
 8002baa:	2b08      	cmp	r3, #8
 8002bac:	d122      	bne.n	8002bf4 <HAL_TIM_IRQHandler+0x104>
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	681b      	ldr	r3, [r3, #0]
 8002bb2:	68db      	ldr	r3, [r3, #12]
 8002bb4:	f003 0308 	and.w	r3, r3, #8
 8002bb8:	2b08      	cmp	r3, #8
 8002bba:	d11b      	bne.n	8002bf4 <HAL_TIM_IRQHandler+0x104>
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	681b      	ldr	r3, [r3, #0]
 8002bc0:	f06f 0208 	mvn.w	r2, #8
 8002bc4:	611a      	str	r2, [r3, #16]
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	2204      	movs	r2, #4
 8002bca:	771a      	strb	r2, [r3, #28]
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	681b      	ldr	r3, [r3, #0]
 8002bd0:	69db      	ldr	r3, [r3, #28]
 8002bd2:	f003 0303 	and.w	r3, r3, #3
 8002bd6:	2b00      	cmp	r3, #0
 8002bd8:	d003      	beq.n	8002be2 <HAL_TIM_IRQHandler+0xf2>
 8002bda:	6878      	ldr	r0, [r7, #4]
 8002bdc:	f000 f95d 	bl	8002e9a <HAL_TIM_IC_CaptureCallback>
 8002be0:	e005      	b.n	8002bee <HAL_TIM_IRQHandler+0xfe>
 8002be2:	6878      	ldr	r0, [r7, #4]
 8002be4:	f000 f950 	bl	8002e88 <HAL_TIM_OC_DelayElapsedCallback>
 8002be8:	6878      	ldr	r0, [r7, #4]
 8002bea:	f000 f95f 	bl	8002eac <HAL_TIM_PWM_PulseFinishedCallback>
 8002bee:	687b      	ldr	r3, [r7, #4]
 8002bf0:	2200      	movs	r2, #0
 8002bf2:	771a      	strb	r2, [r3, #28]
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	691b      	ldr	r3, [r3, #16]
 8002bfa:	f003 0310 	and.w	r3, r3, #16
 8002bfe:	2b10      	cmp	r3, #16
 8002c00:	d122      	bne.n	8002c48 <HAL_TIM_IRQHandler+0x158>
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	68db      	ldr	r3, [r3, #12]
 8002c08:	f003 0310 	and.w	r3, r3, #16
 8002c0c:	2b10      	cmp	r3, #16
 8002c0e:	d11b      	bne.n	8002c48 <HAL_TIM_IRQHandler+0x158>
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	f06f 0210 	mvn.w	r2, #16
 8002c18:	611a      	str	r2, [r3, #16]
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	2208      	movs	r2, #8
 8002c1e:	771a      	strb	r2, [r3, #28]
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	69db      	ldr	r3, [r3, #28]
 8002c26:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002c2a:	2b00      	cmp	r3, #0
 8002c2c:	d003      	beq.n	8002c36 <HAL_TIM_IRQHandler+0x146>
 8002c2e:	6878      	ldr	r0, [r7, #4]
 8002c30:	f000 f933 	bl	8002e9a <HAL_TIM_IC_CaptureCallback>
 8002c34:	e005      	b.n	8002c42 <HAL_TIM_IRQHandler+0x152>
 8002c36:	6878      	ldr	r0, [r7, #4]
 8002c38:	f000 f926 	bl	8002e88 <HAL_TIM_OC_DelayElapsedCallback>
 8002c3c:	6878      	ldr	r0, [r7, #4]
 8002c3e:	f000 f935 	bl	8002eac <HAL_TIM_PWM_PulseFinishedCallback>
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	2200      	movs	r2, #0
 8002c46:	771a      	strb	r2, [r3, #28]
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	691b      	ldr	r3, [r3, #16]
 8002c4e:	f003 0301 	and.w	r3, r3, #1
 8002c52:	2b01      	cmp	r3, #1
 8002c54:	d10e      	bne.n	8002c74 <HAL_TIM_IRQHandler+0x184>
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	68db      	ldr	r3, [r3, #12]
 8002c5c:	f003 0301 	and.w	r3, r3, #1
 8002c60:	2b01      	cmp	r3, #1
 8002c62:	d107      	bne.n	8002c74 <HAL_TIM_IRQHandler+0x184>
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	f06f 0201 	mvn.w	r2, #1
 8002c6c:	611a      	str	r2, [r3, #16]
 8002c6e:	6878      	ldr	r0, [r7, #4]
 8002c70:	f7fe fdde 	bl	8001830 <HAL_TIM_PeriodElapsedCallback>
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	691b      	ldr	r3, [r3, #16]
 8002c7a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002c7e:	2b80      	cmp	r3, #128	; 0x80
 8002c80:	d10e      	bne.n	8002ca0 <HAL_TIM_IRQHandler+0x1b0>
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	681b      	ldr	r3, [r3, #0]
 8002c86:	68db      	ldr	r3, [r3, #12]
 8002c88:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002c8c:	2b80      	cmp	r3, #128	; 0x80
 8002c8e:	d107      	bne.n	8002ca0 <HAL_TIM_IRQHandler+0x1b0>
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002c98:	611a      	str	r2, [r3, #16]
 8002c9a:	6878      	ldr	r0, [r7, #4]
 8002c9c:	f000 fa67 	bl	800316e <HAL_TIMEx_BreakCallback>
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	691b      	ldr	r3, [r3, #16]
 8002ca6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002caa:	2b40      	cmp	r3, #64	; 0x40
 8002cac:	d10e      	bne.n	8002ccc <HAL_TIM_IRQHandler+0x1dc>
 8002cae:	687b      	ldr	r3, [r7, #4]
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	68db      	ldr	r3, [r3, #12]
 8002cb4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002cb8:	2b40      	cmp	r3, #64	; 0x40
 8002cba:	d107      	bne.n	8002ccc <HAL_TIM_IRQHandler+0x1dc>
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002cc4:	611a      	str	r2, [r3, #16]
 8002cc6:	6878      	ldr	r0, [r7, #4]
 8002cc8:	f000 f8f9 	bl	8002ebe <HAL_TIM_TriggerCallback>
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	681b      	ldr	r3, [r3, #0]
 8002cd0:	691b      	ldr	r3, [r3, #16]
 8002cd2:	f003 0320 	and.w	r3, r3, #32
 8002cd6:	2b20      	cmp	r3, #32
 8002cd8:	d10e      	bne.n	8002cf8 <HAL_TIM_IRQHandler+0x208>
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	681b      	ldr	r3, [r3, #0]
 8002cde:	68db      	ldr	r3, [r3, #12]
 8002ce0:	f003 0320 	and.w	r3, r3, #32
 8002ce4:	2b20      	cmp	r3, #32
 8002ce6:	d107      	bne.n	8002cf8 <HAL_TIM_IRQHandler+0x208>
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	f06f 0220 	mvn.w	r2, #32
 8002cf0:	611a      	str	r2, [r3, #16]
 8002cf2:	6878      	ldr	r0, [r7, #4]
 8002cf4:	f000 fa32 	bl	800315c <HAL_TIMEx_CommutCallback>
 8002cf8:	bf00      	nop
 8002cfa:	3708      	adds	r7, #8
 8002cfc:	46bd      	mov	sp, r7
 8002cfe:	bd80      	pop	{r7, pc}

08002d00 <HAL_TIM_ConfigClockSource>:
 8002d00:	b580      	push	{r7, lr}
 8002d02:	b084      	sub	sp, #16
 8002d04:	af00      	add	r7, sp, #0
 8002d06:	6078      	str	r0, [r7, #4]
 8002d08:	6039      	str	r1, [r7, #0]
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002d10:	2b01      	cmp	r3, #1
 8002d12:	d101      	bne.n	8002d18 <HAL_TIM_ConfigClockSource+0x18>
 8002d14:	2302      	movs	r3, #2
 8002d16:	e0b3      	b.n	8002e80 <HAL_TIM_ConfigClockSource+0x180>
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	2201      	movs	r2, #1
 8002d1c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	2202      	movs	r2, #2
 8002d24:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	689b      	ldr	r3, [r3, #8]
 8002d2e:	60fb      	str	r3, [r7, #12]
 8002d30:	68fb      	ldr	r3, [r7, #12]
 8002d32:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002d36:	60fb      	str	r3, [r7, #12]
 8002d38:	68fb      	ldr	r3, [r7, #12]
 8002d3a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002d3e:	60fb      	str	r3, [r7, #12]
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	68fa      	ldr	r2, [r7, #12]
 8002d46:	609a      	str	r2, [r3, #8]
 8002d48:	683b      	ldr	r3, [r7, #0]
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002d50:	d03e      	beq.n	8002dd0 <HAL_TIM_ConfigClockSource+0xd0>
 8002d52:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002d56:	f200 8087 	bhi.w	8002e68 <HAL_TIM_ConfigClockSource+0x168>
 8002d5a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002d5e:	f000 8085 	beq.w	8002e6c <HAL_TIM_ConfigClockSource+0x16c>
 8002d62:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002d66:	d87f      	bhi.n	8002e68 <HAL_TIM_ConfigClockSource+0x168>
 8002d68:	2b70      	cmp	r3, #112	; 0x70
 8002d6a:	d01a      	beq.n	8002da2 <HAL_TIM_ConfigClockSource+0xa2>
 8002d6c:	2b70      	cmp	r3, #112	; 0x70
 8002d6e:	d87b      	bhi.n	8002e68 <HAL_TIM_ConfigClockSource+0x168>
 8002d70:	2b60      	cmp	r3, #96	; 0x60
 8002d72:	d050      	beq.n	8002e16 <HAL_TIM_ConfigClockSource+0x116>
 8002d74:	2b60      	cmp	r3, #96	; 0x60
 8002d76:	d877      	bhi.n	8002e68 <HAL_TIM_ConfigClockSource+0x168>
 8002d78:	2b50      	cmp	r3, #80	; 0x50
 8002d7a:	d03c      	beq.n	8002df6 <HAL_TIM_ConfigClockSource+0xf6>
 8002d7c:	2b50      	cmp	r3, #80	; 0x50
 8002d7e:	d873      	bhi.n	8002e68 <HAL_TIM_ConfigClockSource+0x168>
 8002d80:	2b40      	cmp	r3, #64	; 0x40
 8002d82:	d058      	beq.n	8002e36 <HAL_TIM_ConfigClockSource+0x136>
 8002d84:	2b40      	cmp	r3, #64	; 0x40
 8002d86:	d86f      	bhi.n	8002e68 <HAL_TIM_ConfigClockSource+0x168>
 8002d88:	2b30      	cmp	r3, #48	; 0x30
 8002d8a:	d064      	beq.n	8002e56 <HAL_TIM_ConfigClockSource+0x156>
 8002d8c:	2b30      	cmp	r3, #48	; 0x30
 8002d8e:	d86b      	bhi.n	8002e68 <HAL_TIM_ConfigClockSource+0x168>
 8002d90:	2b20      	cmp	r3, #32
 8002d92:	d060      	beq.n	8002e56 <HAL_TIM_ConfigClockSource+0x156>
 8002d94:	2b20      	cmp	r3, #32
 8002d96:	d867      	bhi.n	8002e68 <HAL_TIM_ConfigClockSource+0x168>
 8002d98:	2b00      	cmp	r3, #0
 8002d9a:	d05c      	beq.n	8002e56 <HAL_TIM_ConfigClockSource+0x156>
 8002d9c:	2b10      	cmp	r3, #16
 8002d9e:	d05a      	beq.n	8002e56 <HAL_TIM_ConfigClockSource+0x156>
 8002da0:	e062      	b.n	8002e68 <HAL_TIM_ConfigClockSource+0x168>
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	6818      	ldr	r0, [r3, #0]
 8002da6:	683b      	ldr	r3, [r7, #0]
 8002da8:	6899      	ldr	r1, [r3, #8]
 8002daa:	683b      	ldr	r3, [r7, #0]
 8002dac:	685a      	ldr	r2, [r3, #4]
 8002dae:	683b      	ldr	r3, [r7, #0]
 8002db0:	68db      	ldr	r3, [r3, #12]
 8002db2:	f000 f95c 	bl	800306e <TIM_ETR_SetConfig>
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	689b      	ldr	r3, [r3, #8]
 8002dbc:	60fb      	str	r3, [r7, #12]
 8002dbe:	68fb      	ldr	r3, [r7, #12]
 8002dc0:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002dc4:	60fb      	str	r3, [r7, #12]
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	68fa      	ldr	r2, [r7, #12]
 8002dcc:	609a      	str	r2, [r3, #8]
 8002dce:	e04e      	b.n	8002e6e <HAL_TIM_ConfigClockSource+0x16e>
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	6818      	ldr	r0, [r3, #0]
 8002dd4:	683b      	ldr	r3, [r7, #0]
 8002dd6:	6899      	ldr	r1, [r3, #8]
 8002dd8:	683b      	ldr	r3, [r7, #0]
 8002dda:	685a      	ldr	r2, [r3, #4]
 8002ddc:	683b      	ldr	r3, [r7, #0]
 8002dde:	68db      	ldr	r3, [r3, #12]
 8002de0:	f000 f945 	bl	800306e <TIM_ETR_SetConfig>
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	689a      	ldr	r2, [r3, #8]
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	681b      	ldr	r3, [r3, #0]
 8002dee:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002df2:	609a      	str	r2, [r3, #8]
 8002df4:	e03b      	b.n	8002e6e <HAL_TIM_ConfigClockSource+0x16e>
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	6818      	ldr	r0, [r3, #0]
 8002dfa:	683b      	ldr	r3, [r7, #0]
 8002dfc:	6859      	ldr	r1, [r3, #4]
 8002dfe:	683b      	ldr	r3, [r7, #0]
 8002e00:	68db      	ldr	r3, [r3, #12]
 8002e02:	461a      	mov	r2, r3
 8002e04:	f000 f8bc 	bl	8002f80 <TIM_TI1_ConfigInputStage>
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	2150      	movs	r1, #80	; 0x50
 8002e0e:	4618      	mov	r0, r3
 8002e10:	f000 f913 	bl	800303a <TIM_ITRx_SetConfig>
 8002e14:	e02b      	b.n	8002e6e <HAL_TIM_ConfigClockSource+0x16e>
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	6818      	ldr	r0, [r3, #0]
 8002e1a:	683b      	ldr	r3, [r7, #0]
 8002e1c:	6859      	ldr	r1, [r3, #4]
 8002e1e:	683b      	ldr	r3, [r7, #0]
 8002e20:	68db      	ldr	r3, [r3, #12]
 8002e22:	461a      	mov	r2, r3
 8002e24:	f000 f8da 	bl	8002fdc <TIM_TI2_ConfigInputStage>
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	2160      	movs	r1, #96	; 0x60
 8002e2e:	4618      	mov	r0, r3
 8002e30:	f000 f903 	bl	800303a <TIM_ITRx_SetConfig>
 8002e34:	e01b      	b.n	8002e6e <HAL_TIM_ConfigClockSource+0x16e>
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	6818      	ldr	r0, [r3, #0]
 8002e3a:	683b      	ldr	r3, [r7, #0]
 8002e3c:	6859      	ldr	r1, [r3, #4]
 8002e3e:	683b      	ldr	r3, [r7, #0]
 8002e40:	68db      	ldr	r3, [r3, #12]
 8002e42:	461a      	mov	r2, r3
 8002e44:	f000 f89c 	bl	8002f80 <TIM_TI1_ConfigInputStage>
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	2140      	movs	r1, #64	; 0x40
 8002e4e:	4618      	mov	r0, r3
 8002e50:	f000 f8f3 	bl	800303a <TIM_ITRx_SetConfig>
 8002e54:	e00b      	b.n	8002e6e <HAL_TIM_ConfigClockSource+0x16e>
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	681a      	ldr	r2, [r3, #0]
 8002e5a:	683b      	ldr	r3, [r7, #0]
 8002e5c:	681b      	ldr	r3, [r3, #0]
 8002e5e:	4619      	mov	r1, r3
 8002e60:	4610      	mov	r0, r2
 8002e62:	f000 f8ea 	bl	800303a <TIM_ITRx_SetConfig>
 8002e66:	e002      	b.n	8002e6e <HAL_TIM_ConfigClockSource+0x16e>
 8002e68:	bf00      	nop
 8002e6a:	e000      	b.n	8002e6e <HAL_TIM_ConfigClockSource+0x16e>
 8002e6c:	bf00      	nop
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	2201      	movs	r2, #1
 8002e72:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	2200      	movs	r2, #0
 8002e7a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e7e:	2300      	movs	r3, #0
 8002e80:	4618      	mov	r0, r3
 8002e82:	3710      	adds	r7, #16
 8002e84:	46bd      	mov	sp, r7
 8002e86:	bd80      	pop	{r7, pc}

08002e88 <HAL_TIM_OC_DelayElapsedCallback>:
 8002e88:	b480      	push	{r7}
 8002e8a:	b083      	sub	sp, #12
 8002e8c:	af00      	add	r7, sp, #0
 8002e8e:	6078      	str	r0, [r7, #4]
 8002e90:	bf00      	nop
 8002e92:	370c      	adds	r7, #12
 8002e94:	46bd      	mov	sp, r7
 8002e96:	bc80      	pop	{r7}
 8002e98:	4770      	bx	lr

08002e9a <HAL_TIM_IC_CaptureCallback>:
 8002e9a:	b480      	push	{r7}
 8002e9c:	b083      	sub	sp, #12
 8002e9e:	af00      	add	r7, sp, #0
 8002ea0:	6078      	str	r0, [r7, #4]
 8002ea2:	bf00      	nop
 8002ea4:	370c      	adds	r7, #12
 8002ea6:	46bd      	mov	sp, r7
 8002ea8:	bc80      	pop	{r7}
 8002eaa:	4770      	bx	lr

08002eac <HAL_TIM_PWM_PulseFinishedCallback>:
 8002eac:	b480      	push	{r7}
 8002eae:	b083      	sub	sp, #12
 8002eb0:	af00      	add	r7, sp, #0
 8002eb2:	6078      	str	r0, [r7, #4]
 8002eb4:	bf00      	nop
 8002eb6:	370c      	adds	r7, #12
 8002eb8:	46bd      	mov	sp, r7
 8002eba:	bc80      	pop	{r7}
 8002ebc:	4770      	bx	lr

08002ebe <HAL_TIM_TriggerCallback>:
 8002ebe:	b480      	push	{r7}
 8002ec0:	b083      	sub	sp, #12
 8002ec2:	af00      	add	r7, sp, #0
 8002ec4:	6078      	str	r0, [r7, #4]
 8002ec6:	bf00      	nop
 8002ec8:	370c      	adds	r7, #12
 8002eca:	46bd      	mov	sp, r7
 8002ecc:	bc80      	pop	{r7}
 8002ece:	4770      	bx	lr

08002ed0 <TIM_Base_SetConfig>:
 8002ed0:	b480      	push	{r7}
 8002ed2:	b085      	sub	sp, #20
 8002ed4:	af00      	add	r7, sp, #0
 8002ed6:	6078      	str	r0, [r7, #4]
 8002ed8:	6039      	str	r1, [r7, #0]
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	60fb      	str	r3, [r7, #12]
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	4a25      	ldr	r2, [pc, #148]	; (8002f78 <TIM_Base_SetConfig+0xa8>)
 8002ee4:	4293      	cmp	r3, r2
 8002ee6:	d007      	beq.n	8002ef8 <TIM_Base_SetConfig+0x28>
 8002ee8:	687b      	ldr	r3, [r7, #4]
 8002eea:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002eee:	d003      	beq.n	8002ef8 <TIM_Base_SetConfig+0x28>
 8002ef0:	687b      	ldr	r3, [r7, #4]
 8002ef2:	4a22      	ldr	r2, [pc, #136]	; (8002f7c <TIM_Base_SetConfig+0xac>)
 8002ef4:	4293      	cmp	r3, r2
 8002ef6:	d108      	bne.n	8002f0a <TIM_Base_SetConfig+0x3a>
 8002ef8:	68fb      	ldr	r3, [r7, #12]
 8002efa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002efe:	60fb      	str	r3, [r7, #12]
 8002f00:	683b      	ldr	r3, [r7, #0]
 8002f02:	685b      	ldr	r3, [r3, #4]
 8002f04:	68fa      	ldr	r2, [r7, #12]
 8002f06:	4313      	orrs	r3, r2
 8002f08:	60fb      	str	r3, [r7, #12]
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	4a1a      	ldr	r2, [pc, #104]	; (8002f78 <TIM_Base_SetConfig+0xa8>)
 8002f0e:	4293      	cmp	r3, r2
 8002f10:	d007      	beq.n	8002f22 <TIM_Base_SetConfig+0x52>
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002f18:	d003      	beq.n	8002f22 <TIM_Base_SetConfig+0x52>
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	4a17      	ldr	r2, [pc, #92]	; (8002f7c <TIM_Base_SetConfig+0xac>)
 8002f1e:	4293      	cmp	r3, r2
 8002f20:	d108      	bne.n	8002f34 <TIM_Base_SetConfig+0x64>
 8002f22:	68fb      	ldr	r3, [r7, #12]
 8002f24:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002f28:	60fb      	str	r3, [r7, #12]
 8002f2a:	683b      	ldr	r3, [r7, #0]
 8002f2c:	68db      	ldr	r3, [r3, #12]
 8002f2e:	68fa      	ldr	r2, [r7, #12]
 8002f30:	4313      	orrs	r3, r2
 8002f32:	60fb      	str	r3, [r7, #12]
 8002f34:	68fb      	ldr	r3, [r7, #12]
 8002f36:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002f3a:	683b      	ldr	r3, [r7, #0]
 8002f3c:	695b      	ldr	r3, [r3, #20]
 8002f3e:	4313      	orrs	r3, r2
 8002f40:	60fb      	str	r3, [r7, #12]
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	68fa      	ldr	r2, [r7, #12]
 8002f46:	601a      	str	r2, [r3, #0]
 8002f48:	683b      	ldr	r3, [r7, #0]
 8002f4a:	689a      	ldr	r2, [r3, #8]
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	62da      	str	r2, [r3, #44]	; 0x2c
 8002f50:	683b      	ldr	r3, [r7, #0]
 8002f52:	681a      	ldr	r2, [r3, #0]
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	629a      	str	r2, [r3, #40]	; 0x28
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	4a07      	ldr	r2, [pc, #28]	; (8002f78 <TIM_Base_SetConfig+0xa8>)
 8002f5c:	4293      	cmp	r3, r2
 8002f5e:	d103      	bne.n	8002f68 <TIM_Base_SetConfig+0x98>
 8002f60:	683b      	ldr	r3, [r7, #0]
 8002f62:	691a      	ldr	r2, [r3, #16]
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	631a      	str	r2, [r3, #48]	; 0x30
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	2201      	movs	r2, #1
 8002f6c:	615a      	str	r2, [r3, #20]
 8002f6e:	bf00      	nop
 8002f70:	3714      	adds	r7, #20
 8002f72:	46bd      	mov	sp, r7
 8002f74:	bc80      	pop	{r7}
 8002f76:	4770      	bx	lr
 8002f78:	40012c00 	.word	0x40012c00
 8002f7c:	40000400 	.word	0x40000400

08002f80 <TIM_TI1_ConfigInputStage>:
 8002f80:	b480      	push	{r7}
 8002f82:	b087      	sub	sp, #28
 8002f84:	af00      	add	r7, sp, #0
 8002f86:	60f8      	str	r0, [r7, #12]
 8002f88:	60b9      	str	r1, [r7, #8]
 8002f8a:	607a      	str	r2, [r7, #4]
 8002f8c:	68fb      	ldr	r3, [r7, #12]
 8002f8e:	6a1b      	ldr	r3, [r3, #32]
 8002f90:	617b      	str	r3, [r7, #20]
 8002f92:	68fb      	ldr	r3, [r7, #12]
 8002f94:	6a1b      	ldr	r3, [r3, #32]
 8002f96:	f023 0201 	bic.w	r2, r3, #1
 8002f9a:	68fb      	ldr	r3, [r7, #12]
 8002f9c:	621a      	str	r2, [r3, #32]
 8002f9e:	68fb      	ldr	r3, [r7, #12]
 8002fa0:	699b      	ldr	r3, [r3, #24]
 8002fa2:	613b      	str	r3, [r7, #16]
 8002fa4:	693b      	ldr	r3, [r7, #16]
 8002fa6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002faa:	613b      	str	r3, [r7, #16]
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	011b      	lsls	r3, r3, #4
 8002fb0:	693a      	ldr	r2, [r7, #16]
 8002fb2:	4313      	orrs	r3, r2
 8002fb4:	613b      	str	r3, [r7, #16]
 8002fb6:	697b      	ldr	r3, [r7, #20]
 8002fb8:	f023 030a 	bic.w	r3, r3, #10
 8002fbc:	617b      	str	r3, [r7, #20]
 8002fbe:	697a      	ldr	r2, [r7, #20]
 8002fc0:	68bb      	ldr	r3, [r7, #8]
 8002fc2:	4313      	orrs	r3, r2
 8002fc4:	617b      	str	r3, [r7, #20]
 8002fc6:	68fb      	ldr	r3, [r7, #12]
 8002fc8:	693a      	ldr	r2, [r7, #16]
 8002fca:	619a      	str	r2, [r3, #24]
 8002fcc:	68fb      	ldr	r3, [r7, #12]
 8002fce:	697a      	ldr	r2, [r7, #20]
 8002fd0:	621a      	str	r2, [r3, #32]
 8002fd2:	bf00      	nop
 8002fd4:	371c      	adds	r7, #28
 8002fd6:	46bd      	mov	sp, r7
 8002fd8:	bc80      	pop	{r7}
 8002fda:	4770      	bx	lr

08002fdc <TIM_TI2_ConfigInputStage>:
 8002fdc:	b480      	push	{r7}
 8002fde:	b087      	sub	sp, #28
 8002fe0:	af00      	add	r7, sp, #0
 8002fe2:	60f8      	str	r0, [r7, #12]
 8002fe4:	60b9      	str	r1, [r7, #8]
 8002fe6:	607a      	str	r2, [r7, #4]
 8002fe8:	68fb      	ldr	r3, [r7, #12]
 8002fea:	6a1b      	ldr	r3, [r3, #32]
 8002fec:	f023 0210 	bic.w	r2, r3, #16
 8002ff0:	68fb      	ldr	r3, [r7, #12]
 8002ff2:	621a      	str	r2, [r3, #32]
 8002ff4:	68fb      	ldr	r3, [r7, #12]
 8002ff6:	699b      	ldr	r3, [r3, #24]
 8002ff8:	617b      	str	r3, [r7, #20]
 8002ffa:	68fb      	ldr	r3, [r7, #12]
 8002ffc:	6a1b      	ldr	r3, [r3, #32]
 8002ffe:	613b      	str	r3, [r7, #16]
 8003000:	697b      	ldr	r3, [r7, #20]
 8003002:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003006:	617b      	str	r3, [r7, #20]
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	031b      	lsls	r3, r3, #12
 800300c:	697a      	ldr	r2, [r7, #20]
 800300e:	4313      	orrs	r3, r2
 8003010:	617b      	str	r3, [r7, #20]
 8003012:	693b      	ldr	r3, [r7, #16]
 8003014:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003018:	613b      	str	r3, [r7, #16]
 800301a:	68bb      	ldr	r3, [r7, #8]
 800301c:	011b      	lsls	r3, r3, #4
 800301e:	693a      	ldr	r2, [r7, #16]
 8003020:	4313      	orrs	r3, r2
 8003022:	613b      	str	r3, [r7, #16]
 8003024:	68fb      	ldr	r3, [r7, #12]
 8003026:	697a      	ldr	r2, [r7, #20]
 8003028:	619a      	str	r2, [r3, #24]
 800302a:	68fb      	ldr	r3, [r7, #12]
 800302c:	693a      	ldr	r2, [r7, #16]
 800302e:	621a      	str	r2, [r3, #32]
 8003030:	bf00      	nop
 8003032:	371c      	adds	r7, #28
 8003034:	46bd      	mov	sp, r7
 8003036:	bc80      	pop	{r7}
 8003038:	4770      	bx	lr

0800303a <TIM_ITRx_SetConfig>:
 800303a:	b480      	push	{r7}
 800303c:	b085      	sub	sp, #20
 800303e:	af00      	add	r7, sp, #0
 8003040:	6078      	str	r0, [r7, #4]
 8003042:	6039      	str	r1, [r7, #0]
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	689b      	ldr	r3, [r3, #8]
 8003048:	60fb      	str	r3, [r7, #12]
 800304a:	68fb      	ldr	r3, [r7, #12]
 800304c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003050:	60fb      	str	r3, [r7, #12]
 8003052:	683a      	ldr	r2, [r7, #0]
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	4313      	orrs	r3, r2
 8003058:	f043 0307 	orr.w	r3, r3, #7
 800305c:	60fb      	str	r3, [r7, #12]
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	68fa      	ldr	r2, [r7, #12]
 8003062:	609a      	str	r2, [r3, #8]
 8003064:	bf00      	nop
 8003066:	3714      	adds	r7, #20
 8003068:	46bd      	mov	sp, r7
 800306a:	bc80      	pop	{r7}
 800306c:	4770      	bx	lr

0800306e <TIM_ETR_SetConfig>:
 800306e:	b480      	push	{r7}
 8003070:	b087      	sub	sp, #28
 8003072:	af00      	add	r7, sp, #0
 8003074:	60f8      	str	r0, [r7, #12]
 8003076:	60b9      	str	r1, [r7, #8]
 8003078:	607a      	str	r2, [r7, #4]
 800307a:	603b      	str	r3, [r7, #0]
 800307c:	68fb      	ldr	r3, [r7, #12]
 800307e:	689b      	ldr	r3, [r3, #8]
 8003080:	617b      	str	r3, [r7, #20]
 8003082:	697b      	ldr	r3, [r7, #20]
 8003084:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003088:	617b      	str	r3, [r7, #20]
 800308a:	683b      	ldr	r3, [r7, #0]
 800308c:	021a      	lsls	r2, r3, #8
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	431a      	orrs	r2, r3
 8003092:	68bb      	ldr	r3, [r7, #8]
 8003094:	4313      	orrs	r3, r2
 8003096:	697a      	ldr	r2, [r7, #20]
 8003098:	4313      	orrs	r3, r2
 800309a:	617b      	str	r3, [r7, #20]
 800309c:	68fb      	ldr	r3, [r7, #12]
 800309e:	697a      	ldr	r2, [r7, #20]
 80030a0:	609a      	str	r2, [r3, #8]
 80030a2:	bf00      	nop
 80030a4:	371c      	adds	r7, #28
 80030a6:	46bd      	mov	sp, r7
 80030a8:	bc80      	pop	{r7}
 80030aa:	4770      	bx	lr

080030ac <HAL_TIMEx_MasterConfigSynchronization>:
 80030ac:	b480      	push	{r7}
 80030ae:	b085      	sub	sp, #20
 80030b0:	af00      	add	r7, sp, #0
 80030b2:	6078      	str	r0, [r7, #4]
 80030b4:	6039      	str	r1, [r7, #0]
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80030bc:	2b01      	cmp	r3, #1
 80030be:	d101      	bne.n	80030c4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80030c0:	2302      	movs	r3, #2
 80030c2:	e041      	b.n	8003148 <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	2201      	movs	r2, #1
 80030c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80030cc:	687b      	ldr	r3, [r7, #4]
 80030ce:	2202      	movs	r2, #2
 80030d0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	685b      	ldr	r3, [r3, #4]
 80030da:	60fb      	str	r3, [r7, #12]
 80030dc:	687b      	ldr	r3, [r7, #4]
 80030de:	681b      	ldr	r3, [r3, #0]
 80030e0:	689b      	ldr	r3, [r3, #8]
 80030e2:	60bb      	str	r3, [r7, #8]
 80030e4:	68fb      	ldr	r3, [r7, #12]
 80030e6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80030ea:	60fb      	str	r3, [r7, #12]
 80030ec:	683b      	ldr	r3, [r7, #0]
 80030ee:	681b      	ldr	r3, [r3, #0]
 80030f0:	68fa      	ldr	r2, [r7, #12]
 80030f2:	4313      	orrs	r3, r2
 80030f4:	60fb      	str	r3, [r7, #12]
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	68fa      	ldr	r2, [r7, #12]
 80030fc:	605a      	str	r2, [r3, #4]
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	4a14      	ldr	r2, [pc, #80]	; (8003154 <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 8003104:	4293      	cmp	r3, r2
 8003106:	d009      	beq.n	800311c <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003110:	d004      	beq.n	800311c <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	4a10      	ldr	r2, [pc, #64]	; (8003158 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 8003118:	4293      	cmp	r3, r2
 800311a:	d10c      	bne.n	8003136 <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 800311c:	68bb      	ldr	r3, [r7, #8]
 800311e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003122:	60bb      	str	r3, [r7, #8]
 8003124:	683b      	ldr	r3, [r7, #0]
 8003126:	685b      	ldr	r3, [r3, #4]
 8003128:	68ba      	ldr	r2, [r7, #8]
 800312a:	4313      	orrs	r3, r2
 800312c:	60bb      	str	r3, [r7, #8]
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	68ba      	ldr	r2, [r7, #8]
 8003134:	609a      	str	r2, [r3, #8]
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	2201      	movs	r2, #1
 800313a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	2200      	movs	r2, #0
 8003142:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003146:	2300      	movs	r3, #0
 8003148:	4618      	mov	r0, r3
 800314a:	3714      	adds	r7, #20
 800314c:	46bd      	mov	sp, r7
 800314e:	bc80      	pop	{r7}
 8003150:	4770      	bx	lr
 8003152:	bf00      	nop
 8003154:	40012c00 	.word	0x40012c00
 8003158:	40000400 	.word	0x40000400

0800315c <HAL_TIMEx_CommutCallback>:
 800315c:	b480      	push	{r7}
 800315e:	b083      	sub	sp, #12
 8003160:	af00      	add	r7, sp, #0
 8003162:	6078      	str	r0, [r7, #4]
 8003164:	bf00      	nop
 8003166:	370c      	adds	r7, #12
 8003168:	46bd      	mov	sp, r7
 800316a:	bc80      	pop	{r7}
 800316c:	4770      	bx	lr

0800316e <HAL_TIMEx_BreakCallback>:
 800316e:	b480      	push	{r7}
 8003170:	b083      	sub	sp, #12
 8003172:	af00      	add	r7, sp, #0
 8003174:	6078      	str	r0, [r7, #4]
 8003176:	bf00      	nop
 8003178:	370c      	adds	r7, #12
 800317a:	46bd      	mov	sp, r7
 800317c:	bc80      	pop	{r7}
 800317e:	4770      	bx	lr

08003180 <__errno>:
 8003180:	4b01      	ldr	r3, [pc, #4]	; (8003188 <__errno+0x8>)
 8003182:	6818      	ldr	r0, [r3, #0]
 8003184:	4770      	bx	lr
 8003186:	bf00      	nop
 8003188:	2000000c 	.word	0x2000000c

0800318c <__libc_init_array>:
 800318c:	b570      	push	{r4, r5, r6, lr}
 800318e:	2600      	movs	r6, #0
 8003190:	4d0c      	ldr	r5, [pc, #48]	; (80031c4 <__libc_init_array+0x38>)
 8003192:	4c0d      	ldr	r4, [pc, #52]	; (80031c8 <__libc_init_array+0x3c>)
 8003194:	1b64      	subs	r4, r4, r5
 8003196:	10a4      	asrs	r4, r4, #2
 8003198:	42a6      	cmp	r6, r4
 800319a:	d109      	bne.n	80031b0 <__libc_init_array+0x24>
 800319c:	f002 feba 	bl	8005f14 <_init>
 80031a0:	2600      	movs	r6, #0
 80031a2:	4d0a      	ldr	r5, [pc, #40]	; (80031cc <__libc_init_array+0x40>)
 80031a4:	4c0a      	ldr	r4, [pc, #40]	; (80031d0 <__libc_init_array+0x44>)
 80031a6:	1b64      	subs	r4, r4, r5
 80031a8:	10a4      	asrs	r4, r4, #2
 80031aa:	42a6      	cmp	r6, r4
 80031ac:	d105      	bne.n	80031ba <__libc_init_array+0x2e>
 80031ae:	bd70      	pop	{r4, r5, r6, pc}
 80031b0:	f855 3b04 	ldr.w	r3, [r5], #4
 80031b4:	4798      	blx	r3
 80031b6:	3601      	adds	r6, #1
 80031b8:	e7ee      	b.n	8003198 <__libc_init_array+0xc>
 80031ba:	f855 3b04 	ldr.w	r3, [r5], #4
 80031be:	4798      	blx	r3
 80031c0:	3601      	adds	r6, #1
 80031c2:	e7f2      	b.n	80031aa <__libc_init_array+0x1e>
 80031c4:	0800636c 	.word	0x0800636c
 80031c8:	0800636c 	.word	0x0800636c
 80031cc:	0800636c 	.word	0x0800636c
 80031d0:	08006370 	.word	0x08006370

080031d4 <memset>:
 80031d4:	4603      	mov	r3, r0
 80031d6:	4402      	add	r2, r0
 80031d8:	4293      	cmp	r3, r2
 80031da:	d100      	bne.n	80031de <memset+0xa>
 80031dc:	4770      	bx	lr
 80031de:	f803 1b01 	strb.w	r1, [r3], #1
 80031e2:	e7f9      	b.n	80031d8 <memset+0x4>

080031e4 <__cvt>:
 80031e4:	2b00      	cmp	r3, #0
 80031e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80031ea:	461f      	mov	r7, r3
 80031ec:	bfbb      	ittet	lt
 80031ee:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 80031f2:	461f      	movlt	r7, r3
 80031f4:	2300      	movge	r3, #0
 80031f6:	232d      	movlt	r3, #45	; 0x2d
 80031f8:	b088      	sub	sp, #32
 80031fa:	4614      	mov	r4, r2
 80031fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80031fe:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8003200:	7013      	strb	r3, [r2, #0]
 8003202:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003204:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8003208:	f023 0820 	bic.w	r8, r3, #32
 800320c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8003210:	d005      	beq.n	800321e <__cvt+0x3a>
 8003212:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8003216:	d100      	bne.n	800321a <__cvt+0x36>
 8003218:	3501      	adds	r5, #1
 800321a:	2302      	movs	r3, #2
 800321c:	e000      	b.n	8003220 <__cvt+0x3c>
 800321e:	2303      	movs	r3, #3
 8003220:	aa07      	add	r2, sp, #28
 8003222:	9204      	str	r2, [sp, #16]
 8003224:	aa06      	add	r2, sp, #24
 8003226:	e9cd a202 	strd	sl, r2, [sp, #8]
 800322a:	e9cd 3500 	strd	r3, r5, [sp]
 800322e:	4622      	mov	r2, r4
 8003230:	463b      	mov	r3, r7
 8003232:	f000 fce5 	bl	8003c00 <_dtoa_r>
 8003236:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800323a:	4606      	mov	r6, r0
 800323c:	d102      	bne.n	8003244 <__cvt+0x60>
 800323e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003240:	07db      	lsls	r3, r3, #31
 8003242:	d522      	bpl.n	800328a <__cvt+0xa6>
 8003244:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8003248:	eb06 0905 	add.w	r9, r6, r5
 800324c:	d110      	bne.n	8003270 <__cvt+0x8c>
 800324e:	7833      	ldrb	r3, [r6, #0]
 8003250:	2b30      	cmp	r3, #48	; 0x30
 8003252:	d10a      	bne.n	800326a <__cvt+0x86>
 8003254:	2200      	movs	r2, #0
 8003256:	2300      	movs	r3, #0
 8003258:	4620      	mov	r0, r4
 800325a:	4639      	mov	r1, r7
 800325c:	f7fd fba4 	bl	80009a8 <__aeabi_dcmpeq>
 8003260:	b918      	cbnz	r0, 800326a <__cvt+0x86>
 8003262:	f1c5 0501 	rsb	r5, r5, #1
 8003266:	f8ca 5000 	str.w	r5, [sl]
 800326a:	f8da 3000 	ldr.w	r3, [sl]
 800326e:	4499      	add	r9, r3
 8003270:	2200      	movs	r2, #0
 8003272:	2300      	movs	r3, #0
 8003274:	4620      	mov	r0, r4
 8003276:	4639      	mov	r1, r7
 8003278:	f7fd fb96 	bl	80009a8 <__aeabi_dcmpeq>
 800327c:	b108      	cbz	r0, 8003282 <__cvt+0x9e>
 800327e:	f8cd 901c 	str.w	r9, [sp, #28]
 8003282:	2230      	movs	r2, #48	; 0x30
 8003284:	9b07      	ldr	r3, [sp, #28]
 8003286:	454b      	cmp	r3, r9
 8003288:	d307      	bcc.n	800329a <__cvt+0xb6>
 800328a:	4630      	mov	r0, r6
 800328c:	9b07      	ldr	r3, [sp, #28]
 800328e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8003290:	1b9b      	subs	r3, r3, r6
 8003292:	6013      	str	r3, [r2, #0]
 8003294:	b008      	add	sp, #32
 8003296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800329a:	1c59      	adds	r1, r3, #1
 800329c:	9107      	str	r1, [sp, #28]
 800329e:	701a      	strb	r2, [r3, #0]
 80032a0:	e7f0      	b.n	8003284 <__cvt+0xa0>

080032a2 <__exponent>:
 80032a2:	4603      	mov	r3, r0
 80032a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80032a6:	2900      	cmp	r1, #0
 80032a8:	f803 2b02 	strb.w	r2, [r3], #2
 80032ac:	bfb6      	itet	lt
 80032ae:	222d      	movlt	r2, #45	; 0x2d
 80032b0:	222b      	movge	r2, #43	; 0x2b
 80032b2:	4249      	neglt	r1, r1
 80032b4:	2909      	cmp	r1, #9
 80032b6:	7042      	strb	r2, [r0, #1]
 80032b8:	dd2b      	ble.n	8003312 <__exponent+0x70>
 80032ba:	f10d 0407 	add.w	r4, sp, #7
 80032be:	46a4      	mov	ip, r4
 80032c0:	270a      	movs	r7, #10
 80032c2:	fb91 f6f7 	sdiv	r6, r1, r7
 80032c6:	460a      	mov	r2, r1
 80032c8:	46a6      	mov	lr, r4
 80032ca:	fb07 1516 	mls	r5, r7, r6, r1
 80032ce:	2a63      	cmp	r2, #99	; 0x63
 80032d0:	f105 0530 	add.w	r5, r5, #48	; 0x30
 80032d4:	4631      	mov	r1, r6
 80032d6:	f104 34ff 	add.w	r4, r4, #4294967295
 80032da:	f80e 5c01 	strb.w	r5, [lr, #-1]
 80032de:	dcf0      	bgt.n	80032c2 <__exponent+0x20>
 80032e0:	3130      	adds	r1, #48	; 0x30
 80032e2:	f1ae 0502 	sub.w	r5, lr, #2
 80032e6:	f804 1c01 	strb.w	r1, [r4, #-1]
 80032ea:	4629      	mov	r1, r5
 80032ec:	1c44      	adds	r4, r0, #1
 80032ee:	4561      	cmp	r1, ip
 80032f0:	d30a      	bcc.n	8003308 <__exponent+0x66>
 80032f2:	f10d 0209 	add.w	r2, sp, #9
 80032f6:	eba2 020e 	sub.w	r2, r2, lr
 80032fa:	4565      	cmp	r5, ip
 80032fc:	bf88      	it	hi
 80032fe:	2200      	movhi	r2, #0
 8003300:	4413      	add	r3, r2
 8003302:	1a18      	subs	r0, r3, r0
 8003304:	b003      	add	sp, #12
 8003306:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003308:	f811 2b01 	ldrb.w	r2, [r1], #1
 800330c:	f804 2f01 	strb.w	r2, [r4, #1]!
 8003310:	e7ed      	b.n	80032ee <__exponent+0x4c>
 8003312:	2330      	movs	r3, #48	; 0x30
 8003314:	3130      	adds	r1, #48	; 0x30
 8003316:	7083      	strb	r3, [r0, #2]
 8003318:	70c1      	strb	r1, [r0, #3]
 800331a:	1d03      	adds	r3, r0, #4
 800331c:	e7f1      	b.n	8003302 <__exponent+0x60>
	...

08003320 <_printf_float>:
 8003320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003324:	b091      	sub	sp, #68	; 0x44
 8003326:	460c      	mov	r4, r1
 8003328:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800332c:	4616      	mov	r6, r2
 800332e:	461f      	mov	r7, r3
 8003330:	4605      	mov	r5, r0
 8003332:	f001 fa53 	bl	80047dc <_localeconv_r>
 8003336:	6803      	ldr	r3, [r0, #0]
 8003338:	4618      	mov	r0, r3
 800333a:	9309      	str	r3, [sp, #36]	; 0x24
 800333c:	f7fc ff08 	bl	8000150 <strlen>
 8003340:	2300      	movs	r3, #0
 8003342:	930e      	str	r3, [sp, #56]	; 0x38
 8003344:	f8d8 3000 	ldr.w	r3, [r8]
 8003348:	900a      	str	r0, [sp, #40]	; 0x28
 800334a:	3307      	adds	r3, #7
 800334c:	f023 0307 	bic.w	r3, r3, #7
 8003350:	f103 0208 	add.w	r2, r3, #8
 8003354:	f894 9018 	ldrb.w	r9, [r4, #24]
 8003358:	f8d4 b000 	ldr.w	fp, [r4]
 800335c:	f8c8 2000 	str.w	r2, [r8]
 8003360:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003364:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8003368:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 800336c:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 8003370:	930b      	str	r3, [sp, #44]	; 0x2c
 8003372:	f04f 32ff 	mov.w	r2, #4294967295
 8003376:	4640      	mov	r0, r8
 8003378:	4b9c      	ldr	r3, [pc, #624]	; (80035ec <_printf_float+0x2cc>)
 800337a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800337c:	f7fd fb46 	bl	8000a0c <__aeabi_dcmpun>
 8003380:	bb70      	cbnz	r0, 80033e0 <_printf_float+0xc0>
 8003382:	f04f 32ff 	mov.w	r2, #4294967295
 8003386:	4640      	mov	r0, r8
 8003388:	4b98      	ldr	r3, [pc, #608]	; (80035ec <_printf_float+0x2cc>)
 800338a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800338c:	f7fd fb20 	bl	80009d0 <__aeabi_dcmple>
 8003390:	bb30      	cbnz	r0, 80033e0 <_printf_float+0xc0>
 8003392:	2200      	movs	r2, #0
 8003394:	2300      	movs	r3, #0
 8003396:	4640      	mov	r0, r8
 8003398:	4651      	mov	r1, sl
 800339a:	f7fd fb0f 	bl	80009bc <__aeabi_dcmplt>
 800339e:	b110      	cbz	r0, 80033a6 <_printf_float+0x86>
 80033a0:	232d      	movs	r3, #45	; 0x2d
 80033a2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80033a6:	4b92      	ldr	r3, [pc, #584]	; (80035f0 <_printf_float+0x2d0>)
 80033a8:	4892      	ldr	r0, [pc, #584]	; (80035f4 <_printf_float+0x2d4>)
 80033aa:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 80033ae:	bf94      	ite	ls
 80033b0:	4698      	movls	r8, r3
 80033b2:	4680      	movhi	r8, r0
 80033b4:	2303      	movs	r3, #3
 80033b6:	f04f 0a00 	mov.w	sl, #0
 80033ba:	6123      	str	r3, [r4, #16]
 80033bc:	f02b 0304 	bic.w	r3, fp, #4
 80033c0:	6023      	str	r3, [r4, #0]
 80033c2:	4633      	mov	r3, r6
 80033c4:	4621      	mov	r1, r4
 80033c6:	4628      	mov	r0, r5
 80033c8:	9700      	str	r7, [sp, #0]
 80033ca:	aa0f      	add	r2, sp, #60	; 0x3c
 80033cc:	f000 f9d4 	bl	8003778 <_printf_common>
 80033d0:	3001      	adds	r0, #1
 80033d2:	f040 8090 	bne.w	80034f6 <_printf_float+0x1d6>
 80033d6:	f04f 30ff 	mov.w	r0, #4294967295
 80033da:	b011      	add	sp, #68	; 0x44
 80033dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033e0:	4642      	mov	r2, r8
 80033e2:	4653      	mov	r3, sl
 80033e4:	4640      	mov	r0, r8
 80033e6:	4651      	mov	r1, sl
 80033e8:	f7fd fb10 	bl	8000a0c <__aeabi_dcmpun>
 80033ec:	b148      	cbz	r0, 8003402 <_printf_float+0xe2>
 80033ee:	f1ba 0f00 	cmp.w	sl, #0
 80033f2:	bfb8      	it	lt
 80033f4:	232d      	movlt	r3, #45	; 0x2d
 80033f6:	4880      	ldr	r0, [pc, #512]	; (80035f8 <_printf_float+0x2d8>)
 80033f8:	bfb8      	it	lt
 80033fa:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80033fe:	4b7f      	ldr	r3, [pc, #508]	; (80035fc <_printf_float+0x2dc>)
 8003400:	e7d3      	b.n	80033aa <_printf_float+0x8a>
 8003402:	6863      	ldr	r3, [r4, #4]
 8003404:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8003408:	1c5a      	adds	r2, r3, #1
 800340a:	d142      	bne.n	8003492 <_printf_float+0x172>
 800340c:	2306      	movs	r3, #6
 800340e:	6063      	str	r3, [r4, #4]
 8003410:	2200      	movs	r2, #0
 8003412:	9206      	str	r2, [sp, #24]
 8003414:	aa0e      	add	r2, sp, #56	; 0x38
 8003416:	e9cd 9204 	strd	r9, r2, [sp, #16]
 800341a:	aa0d      	add	r2, sp, #52	; 0x34
 800341c:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 8003420:	9203      	str	r2, [sp, #12]
 8003422:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8003426:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800342a:	6023      	str	r3, [r4, #0]
 800342c:	6863      	ldr	r3, [r4, #4]
 800342e:	4642      	mov	r2, r8
 8003430:	9300      	str	r3, [sp, #0]
 8003432:	4628      	mov	r0, r5
 8003434:	4653      	mov	r3, sl
 8003436:	910b      	str	r1, [sp, #44]	; 0x2c
 8003438:	f7ff fed4 	bl	80031e4 <__cvt>
 800343c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800343e:	4680      	mov	r8, r0
 8003440:	2947      	cmp	r1, #71	; 0x47
 8003442:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003444:	d108      	bne.n	8003458 <_printf_float+0x138>
 8003446:	1cc8      	adds	r0, r1, #3
 8003448:	db02      	blt.n	8003450 <_printf_float+0x130>
 800344a:	6863      	ldr	r3, [r4, #4]
 800344c:	4299      	cmp	r1, r3
 800344e:	dd40      	ble.n	80034d2 <_printf_float+0x1b2>
 8003450:	f1a9 0902 	sub.w	r9, r9, #2
 8003454:	fa5f f989 	uxtb.w	r9, r9
 8003458:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800345c:	d81f      	bhi.n	800349e <_printf_float+0x17e>
 800345e:	464a      	mov	r2, r9
 8003460:	3901      	subs	r1, #1
 8003462:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8003466:	910d      	str	r1, [sp, #52]	; 0x34
 8003468:	f7ff ff1b 	bl	80032a2 <__exponent>
 800346c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800346e:	4682      	mov	sl, r0
 8003470:	1813      	adds	r3, r2, r0
 8003472:	2a01      	cmp	r2, #1
 8003474:	6123      	str	r3, [r4, #16]
 8003476:	dc02      	bgt.n	800347e <_printf_float+0x15e>
 8003478:	6822      	ldr	r2, [r4, #0]
 800347a:	07d2      	lsls	r2, r2, #31
 800347c:	d501      	bpl.n	8003482 <_printf_float+0x162>
 800347e:	3301      	adds	r3, #1
 8003480:	6123      	str	r3, [r4, #16]
 8003482:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8003486:	2b00      	cmp	r3, #0
 8003488:	d09b      	beq.n	80033c2 <_printf_float+0xa2>
 800348a:	232d      	movs	r3, #45	; 0x2d
 800348c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003490:	e797      	b.n	80033c2 <_printf_float+0xa2>
 8003492:	2947      	cmp	r1, #71	; 0x47
 8003494:	d1bc      	bne.n	8003410 <_printf_float+0xf0>
 8003496:	2b00      	cmp	r3, #0
 8003498:	d1ba      	bne.n	8003410 <_printf_float+0xf0>
 800349a:	2301      	movs	r3, #1
 800349c:	e7b7      	b.n	800340e <_printf_float+0xee>
 800349e:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 80034a2:	d118      	bne.n	80034d6 <_printf_float+0x1b6>
 80034a4:	2900      	cmp	r1, #0
 80034a6:	6863      	ldr	r3, [r4, #4]
 80034a8:	dd0b      	ble.n	80034c2 <_printf_float+0x1a2>
 80034aa:	6121      	str	r1, [r4, #16]
 80034ac:	b913      	cbnz	r3, 80034b4 <_printf_float+0x194>
 80034ae:	6822      	ldr	r2, [r4, #0]
 80034b0:	07d0      	lsls	r0, r2, #31
 80034b2:	d502      	bpl.n	80034ba <_printf_float+0x19a>
 80034b4:	3301      	adds	r3, #1
 80034b6:	440b      	add	r3, r1
 80034b8:	6123      	str	r3, [r4, #16]
 80034ba:	f04f 0a00 	mov.w	sl, #0
 80034be:	65a1      	str	r1, [r4, #88]	; 0x58
 80034c0:	e7df      	b.n	8003482 <_printf_float+0x162>
 80034c2:	b913      	cbnz	r3, 80034ca <_printf_float+0x1aa>
 80034c4:	6822      	ldr	r2, [r4, #0]
 80034c6:	07d2      	lsls	r2, r2, #31
 80034c8:	d501      	bpl.n	80034ce <_printf_float+0x1ae>
 80034ca:	3302      	adds	r3, #2
 80034cc:	e7f4      	b.n	80034b8 <_printf_float+0x198>
 80034ce:	2301      	movs	r3, #1
 80034d0:	e7f2      	b.n	80034b8 <_printf_float+0x198>
 80034d2:	f04f 0967 	mov.w	r9, #103	; 0x67
 80034d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80034d8:	4299      	cmp	r1, r3
 80034da:	db05      	blt.n	80034e8 <_printf_float+0x1c8>
 80034dc:	6823      	ldr	r3, [r4, #0]
 80034de:	6121      	str	r1, [r4, #16]
 80034e0:	07d8      	lsls	r0, r3, #31
 80034e2:	d5ea      	bpl.n	80034ba <_printf_float+0x19a>
 80034e4:	1c4b      	adds	r3, r1, #1
 80034e6:	e7e7      	b.n	80034b8 <_printf_float+0x198>
 80034e8:	2900      	cmp	r1, #0
 80034ea:	bfcc      	ite	gt
 80034ec:	2201      	movgt	r2, #1
 80034ee:	f1c1 0202 	rsble	r2, r1, #2
 80034f2:	4413      	add	r3, r2
 80034f4:	e7e0      	b.n	80034b8 <_printf_float+0x198>
 80034f6:	6823      	ldr	r3, [r4, #0]
 80034f8:	055a      	lsls	r2, r3, #21
 80034fa:	d407      	bmi.n	800350c <_printf_float+0x1ec>
 80034fc:	6923      	ldr	r3, [r4, #16]
 80034fe:	4642      	mov	r2, r8
 8003500:	4631      	mov	r1, r6
 8003502:	4628      	mov	r0, r5
 8003504:	47b8      	blx	r7
 8003506:	3001      	adds	r0, #1
 8003508:	d12b      	bne.n	8003562 <_printf_float+0x242>
 800350a:	e764      	b.n	80033d6 <_printf_float+0xb6>
 800350c:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8003510:	f240 80dd 	bls.w	80036ce <_printf_float+0x3ae>
 8003514:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8003518:	2200      	movs	r2, #0
 800351a:	2300      	movs	r3, #0
 800351c:	f7fd fa44 	bl	80009a8 <__aeabi_dcmpeq>
 8003520:	2800      	cmp	r0, #0
 8003522:	d033      	beq.n	800358c <_printf_float+0x26c>
 8003524:	2301      	movs	r3, #1
 8003526:	4631      	mov	r1, r6
 8003528:	4628      	mov	r0, r5
 800352a:	4a35      	ldr	r2, [pc, #212]	; (8003600 <_printf_float+0x2e0>)
 800352c:	47b8      	blx	r7
 800352e:	3001      	adds	r0, #1
 8003530:	f43f af51 	beq.w	80033d6 <_printf_float+0xb6>
 8003534:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003538:	429a      	cmp	r2, r3
 800353a:	db02      	blt.n	8003542 <_printf_float+0x222>
 800353c:	6823      	ldr	r3, [r4, #0]
 800353e:	07d8      	lsls	r0, r3, #31
 8003540:	d50f      	bpl.n	8003562 <_printf_float+0x242>
 8003542:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003546:	4631      	mov	r1, r6
 8003548:	4628      	mov	r0, r5
 800354a:	47b8      	blx	r7
 800354c:	3001      	adds	r0, #1
 800354e:	f43f af42 	beq.w	80033d6 <_printf_float+0xb6>
 8003552:	f04f 0800 	mov.w	r8, #0
 8003556:	f104 091a 	add.w	r9, r4, #26
 800355a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800355c:	3b01      	subs	r3, #1
 800355e:	4543      	cmp	r3, r8
 8003560:	dc09      	bgt.n	8003576 <_printf_float+0x256>
 8003562:	6823      	ldr	r3, [r4, #0]
 8003564:	079b      	lsls	r3, r3, #30
 8003566:	f100 8102 	bmi.w	800376e <_printf_float+0x44e>
 800356a:	68e0      	ldr	r0, [r4, #12]
 800356c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800356e:	4298      	cmp	r0, r3
 8003570:	bfb8      	it	lt
 8003572:	4618      	movlt	r0, r3
 8003574:	e731      	b.n	80033da <_printf_float+0xba>
 8003576:	2301      	movs	r3, #1
 8003578:	464a      	mov	r2, r9
 800357a:	4631      	mov	r1, r6
 800357c:	4628      	mov	r0, r5
 800357e:	47b8      	blx	r7
 8003580:	3001      	adds	r0, #1
 8003582:	f43f af28 	beq.w	80033d6 <_printf_float+0xb6>
 8003586:	f108 0801 	add.w	r8, r8, #1
 800358a:	e7e6      	b.n	800355a <_printf_float+0x23a>
 800358c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800358e:	2b00      	cmp	r3, #0
 8003590:	dc38      	bgt.n	8003604 <_printf_float+0x2e4>
 8003592:	2301      	movs	r3, #1
 8003594:	4631      	mov	r1, r6
 8003596:	4628      	mov	r0, r5
 8003598:	4a19      	ldr	r2, [pc, #100]	; (8003600 <_printf_float+0x2e0>)
 800359a:	47b8      	blx	r7
 800359c:	3001      	adds	r0, #1
 800359e:	f43f af1a 	beq.w	80033d6 <_printf_float+0xb6>
 80035a2:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80035a6:	4313      	orrs	r3, r2
 80035a8:	d102      	bne.n	80035b0 <_printf_float+0x290>
 80035aa:	6823      	ldr	r3, [r4, #0]
 80035ac:	07d9      	lsls	r1, r3, #31
 80035ae:	d5d8      	bpl.n	8003562 <_printf_float+0x242>
 80035b0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80035b4:	4631      	mov	r1, r6
 80035b6:	4628      	mov	r0, r5
 80035b8:	47b8      	blx	r7
 80035ba:	3001      	adds	r0, #1
 80035bc:	f43f af0b 	beq.w	80033d6 <_printf_float+0xb6>
 80035c0:	f04f 0900 	mov.w	r9, #0
 80035c4:	f104 0a1a 	add.w	sl, r4, #26
 80035c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80035ca:	425b      	negs	r3, r3
 80035cc:	454b      	cmp	r3, r9
 80035ce:	dc01      	bgt.n	80035d4 <_printf_float+0x2b4>
 80035d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80035d2:	e794      	b.n	80034fe <_printf_float+0x1de>
 80035d4:	2301      	movs	r3, #1
 80035d6:	4652      	mov	r2, sl
 80035d8:	4631      	mov	r1, r6
 80035da:	4628      	mov	r0, r5
 80035dc:	47b8      	blx	r7
 80035de:	3001      	adds	r0, #1
 80035e0:	f43f aef9 	beq.w	80033d6 <_printf_float+0xb6>
 80035e4:	f109 0901 	add.w	r9, r9, #1
 80035e8:	e7ee      	b.n	80035c8 <_printf_float+0x2a8>
 80035ea:	bf00      	nop
 80035ec:	7fefffff 	.word	0x7fefffff
 80035f0:	08005f8c 	.word	0x08005f8c
 80035f4:	08005f90 	.word	0x08005f90
 80035f8:	08005f98 	.word	0x08005f98
 80035fc:	08005f94 	.word	0x08005f94
 8003600:	08005f9c 	.word	0x08005f9c
 8003604:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003606:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8003608:	429a      	cmp	r2, r3
 800360a:	bfa8      	it	ge
 800360c:	461a      	movge	r2, r3
 800360e:	2a00      	cmp	r2, #0
 8003610:	4691      	mov	r9, r2
 8003612:	dc37      	bgt.n	8003684 <_printf_float+0x364>
 8003614:	f04f 0b00 	mov.w	fp, #0
 8003618:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800361c:	f104 021a 	add.w	r2, r4, #26
 8003620:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8003624:	ebaa 0309 	sub.w	r3, sl, r9
 8003628:	455b      	cmp	r3, fp
 800362a:	dc33      	bgt.n	8003694 <_printf_float+0x374>
 800362c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003630:	429a      	cmp	r2, r3
 8003632:	db3b      	blt.n	80036ac <_printf_float+0x38c>
 8003634:	6823      	ldr	r3, [r4, #0]
 8003636:	07da      	lsls	r2, r3, #31
 8003638:	d438      	bmi.n	80036ac <_printf_float+0x38c>
 800363a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800363c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800363e:	eba2 030a 	sub.w	r3, r2, sl
 8003642:	eba2 0901 	sub.w	r9, r2, r1
 8003646:	4599      	cmp	r9, r3
 8003648:	bfa8      	it	ge
 800364a:	4699      	movge	r9, r3
 800364c:	f1b9 0f00 	cmp.w	r9, #0
 8003650:	dc34      	bgt.n	80036bc <_printf_float+0x39c>
 8003652:	f04f 0800 	mov.w	r8, #0
 8003656:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800365a:	f104 0a1a 	add.w	sl, r4, #26
 800365e:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003662:	1a9b      	subs	r3, r3, r2
 8003664:	eba3 0309 	sub.w	r3, r3, r9
 8003668:	4543      	cmp	r3, r8
 800366a:	f77f af7a 	ble.w	8003562 <_printf_float+0x242>
 800366e:	2301      	movs	r3, #1
 8003670:	4652      	mov	r2, sl
 8003672:	4631      	mov	r1, r6
 8003674:	4628      	mov	r0, r5
 8003676:	47b8      	blx	r7
 8003678:	3001      	adds	r0, #1
 800367a:	f43f aeac 	beq.w	80033d6 <_printf_float+0xb6>
 800367e:	f108 0801 	add.w	r8, r8, #1
 8003682:	e7ec      	b.n	800365e <_printf_float+0x33e>
 8003684:	4613      	mov	r3, r2
 8003686:	4631      	mov	r1, r6
 8003688:	4642      	mov	r2, r8
 800368a:	4628      	mov	r0, r5
 800368c:	47b8      	blx	r7
 800368e:	3001      	adds	r0, #1
 8003690:	d1c0      	bne.n	8003614 <_printf_float+0x2f4>
 8003692:	e6a0      	b.n	80033d6 <_printf_float+0xb6>
 8003694:	2301      	movs	r3, #1
 8003696:	4631      	mov	r1, r6
 8003698:	4628      	mov	r0, r5
 800369a:	920b      	str	r2, [sp, #44]	; 0x2c
 800369c:	47b8      	blx	r7
 800369e:	3001      	adds	r0, #1
 80036a0:	f43f ae99 	beq.w	80033d6 <_printf_float+0xb6>
 80036a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80036a6:	f10b 0b01 	add.w	fp, fp, #1
 80036aa:	e7b9      	b.n	8003620 <_printf_float+0x300>
 80036ac:	4631      	mov	r1, r6
 80036ae:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80036b2:	4628      	mov	r0, r5
 80036b4:	47b8      	blx	r7
 80036b6:	3001      	adds	r0, #1
 80036b8:	d1bf      	bne.n	800363a <_printf_float+0x31a>
 80036ba:	e68c      	b.n	80033d6 <_printf_float+0xb6>
 80036bc:	464b      	mov	r3, r9
 80036be:	4631      	mov	r1, r6
 80036c0:	4628      	mov	r0, r5
 80036c2:	eb08 020a 	add.w	r2, r8, sl
 80036c6:	47b8      	blx	r7
 80036c8:	3001      	adds	r0, #1
 80036ca:	d1c2      	bne.n	8003652 <_printf_float+0x332>
 80036cc:	e683      	b.n	80033d6 <_printf_float+0xb6>
 80036ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80036d0:	2a01      	cmp	r2, #1
 80036d2:	dc01      	bgt.n	80036d8 <_printf_float+0x3b8>
 80036d4:	07db      	lsls	r3, r3, #31
 80036d6:	d537      	bpl.n	8003748 <_printf_float+0x428>
 80036d8:	2301      	movs	r3, #1
 80036da:	4642      	mov	r2, r8
 80036dc:	4631      	mov	r1, r6
 80036de:	4628      	mov	r0, r5
 80036e0:	47b8      	blx	r7
 80036e2:	3001      	adds	r0, #1
 80036e4:	f43f ae77 	beq.w	80033d6 <_printf_float+0xb6>
 80036e8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80036ec:	4631      	mov	r1, r6
 80036ee:	4628      	mov	r0, r5
 80036f0:	47b8      	blx	r7
 80036f2:	3001      	adds	r0, #1
 80036f4:	f43f ae6f 	beq.w	80033d6 <_printf_float+0xb6>
 80036f8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80036fc:	2200      	movs	r2, #0
 80036fe:	2300      	movs	r3, #0
 8003700:	f7fd f952 	bl	80009a8 <__aeabi_dcmpeq>
 8003704:	b9d8      	cbnz	r0, 800373e <_printf_float+0x41e>
 8003706:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003708:	f108 0201 	add.w	r2, r8, #1
 800370c:	3b01      	subs	r3, #1
 800370e:	4631      	mov	r1, r6
 8003710:	4628      	mov	r0, r5
 8003712:	47b8      	blx	r7
 8003714:	3001      	adds	r0, #1
 8003716:	d10e      	bne.n	8003736 <_printf_float+0x416>
 8003718:	e65d      	b.n	80033d6 <_printf_float+0xb6>
 800371a:	2301      	movs	r3, #1
 800371c:	464a      	mov	r2, r9
 800371e:	4631      	mov	r1, r6
 8003720:	4628      	mov	r0, r5
 8003722:	47b8      	blx	r7
 8003724:	3001      	adds	r0, #1
 8003726:	f43f ae56 	beq.w	80033d6 <_printf_float+0xb6>
 800372a:	f108 0801 	add.w	r8, r8, #1
 800372e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003730:	3b01      	subs	r3, #1
 8003732:	4543      	cmp	r3, r8
 8003734:	dcf1      	bgt.n	800371a <_printf_float+0x3fa>
 8003736:	4653      	mov	r3, sl
 8003738:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800373c:	e6e0      	b.n	8003500 <_printf_float+0x1e0>
 800373e:	f04f 0800 	mov.w	r8, #0
 8003742:	f104 091a 	add.w	r9, r4, #26
 8003746:	e7f2      	b.n	800372e <_printf_float+0x40e>
 8003748:	2301      	movs	r3, #1
 800374a:	4642      	mov	r2, r8
 800374c:	e7df      	b.n	800370e <_printf_float+0x3ee>
 800374e:	2301      	movs	r3, #1
 8003750:	464a      	mov	r2, r9
 8003752:	4631      	mov	r1, r6
 8003754:	4628      	mov	r0, r5
 8003756:	47b8      	blx	r7
 8003758:	3001      	adds	r0, #1
 800375a:	f43f ae3c 	beq.w	80033d6 <_printf_float+0xb6>
 800375e:	f108 0801 	add.w	r8, r8, #1
 8003762:	68e3      	ldr	r3, [r4, #12]
 8003764:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003766:	1a5b      	subs	r3, r3, r1
 8003768:	4543      	cmp	r3, r8
 800376a:	dcf0      	bgt.n	800374e <_printf_float+0x42e>
 800376c:	e6fd      	b.n	800356a <_printf_float+0x24a>
 800376e:	f04f 0800 	mov.w	r8, #0
 8003772:	f104 0919 	add.w	r9, r4, #25
 8003776:	e7f4      	b.n	8003762 <_printf_float+0x442>

08003778 <_printf_common>:
 8003778:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800377c:	4616      	mov	r6, r2
 800377e:	4699      	mov	r9, r3
 8003780:	688a      	ldr	r2, [r1, #8]
 8003782:	690b      	ldr	r3, [r1, #16]
 8003784:	4607      	mov	r7, r0
 8003786:	4293      	cmp	r3, r2
 8003788:	bfb8      	it	lt
 800378a:	4613      	movlt	r3, r2
 800378c:	6033      	str	r3, [r6, #0]
 800378e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003792:	460c      	mov	r4, r1
 8003794:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003798:	b10a      	cbz	r2, 800379e <_printf_common+0x26>
 800379a:	3301      	adds	r3, #1
 800379c:	6033      	str	r3, [r6, #0]
 800379e:	6823      	ldr	r3, [r4, #0]
 80037a0:	0699      	lsls	r1, r3, #26
 80037a2:	bf42      	ittt	mi
 80037a4:	6833      	ldrmi	r3, [r6, #0]
 80037a6:	3302      	addmi	r3, #2
 80037a8:	6033      	strmi	r3, [r6, #0]
 80037aa:	6825      	ldr	r5, [r4, #0]
 80037ac:	f015 0506 	ands.w	r5, r5, #6
 80037b0:	d106      	bne.n	80037c0 <_printf_common+0x48>
 80037b2:	f104 0a19 	add.w	sl, r4, #25
 80037b6:	68e3      	ldr	r3, [r4, #12]
 80037b8:	6832      	ldr	r2, [r6, #0]
 80037ba:	1a9b      	subs	r3, r3, r2
 80037bc:	42ab      	cmp	r3, r5
 80037be:	dc28      	bgt.n	8003812 <_printf_common+0x9a>
 80037c0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80037c4:	1e13      	subs	r3, r2, #0
 80037c6:	6822      	ldr	r2, [r4, #0]
 80037c8:	bf18      	it	ne
 80037ca:	2301      	movne	r3, #1
 80037cc:	0692      	lsls	r2, r2, #26
 80037ce:	d42d      	bmi.n	800382c <_printf_common+0xb4>
 80037d0:	4649      	mov	r1, r9
 80037d2:	4638      	mov	r0, r7
 80037d4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80037d8:	47c0      	blx	r8
 80037da:	3001      	adds	r0, #1
 80037dc:	d020      	beq.n	8003820 <_printf_common+0xa8>
 80037de:	6823      	ldr	r3, [r4, #0]
 80037e0:	68e5      	ldr	r5, [r4, #12]
 80037e2:	f003 0306 	and.w	r3, r3, #6
 80037e6:	2b04      	cmp	r3, #4
 80037e8:	bf18      	it	ne
 80037ea:	2500      	movne	r5, #0
 80037ec:	6832      	ldr	r2, [r6, #0]
 80037ee:	f04f 0600 	mov.w	r6, #0
 80037f2:	68a3      	ldr	r3, [r4, #8]
 80037f4:	bf08      	it	eq
 80037f6:	1aad      	subeq	r5, r5, r2
 80037f8:	6922      	ldr	r2, [r4, #16]
 80037fa:	bf08      	it	eq
 80037fc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003800:	4293      	cmp	r3, r2
 8003802:	bfc4      	itt	gt
 8003804:	1a9b      	subgt	r3, r3, r2
 8003806:	18ed      	addgt	r5, r5, r3
 8003808:	341a      	adds	r4, #26
 800380a:	42b5      	cmp	r5, r6
 800380c:	d11a      	bne.n	8003844 <_printf_common+0xcc>
 800380e:	2000      	movs	r0, #0
 8003810:	e008      	b.n	8003824 <_printf_common+0xac>
 8003812:	2301      	movs	r3, #1
 8003814:	4652      	mov	r2, sl
 8003816:	4649      	mov	r1, r9
 8003818:	4638      	mov	r0, r7
 800381a:	47c0      	blx	r8
 800381c:	3001      	adds	r0, #1
 800381e:	d103      	bne.n	8003828 <_printf_common+0xb0>
 8003820:	f04f 30ff 	mov.w	r0, #4294967295
 8003824:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003828:	3501      	adds	r5, #1
 800382a:	e7c4      	b.n	80037b6 <_printf_common+0x3e>
 800382c:	2030      	movs	r0, #48	; 0x30
 800382e:	18e1      	adds	r1, r4, r3
 8003830:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003834:	1c5a      	adds	r2, r3, #1
 8003836:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800383a:	4422      	add	r2, r4
 800383c:	3302      	adds	r3, #2
 800383e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003842:	e7c5      	b.n	80037d0 <_printf_common+0x58>
 8003844:	2301      	movs	r3, #1
 8003846:	4622      	mov	r2, r4
 8003848:	4649      	mov	r1, r9
 800384a:	4638      	mov	r0, r7
 800384c:	47c0      	blx	r8
 800384e:	3001      	adds	r0, #1
 8003850:	d0e6      	beq.n	8003820 <_printf_common+0xa8>
 8003852:	3601      	adds	r6, #1
 8003854:	e7d9      	b.n	800380a <_printf_common+0x92>
	...

08003858 <_printf_i>:
 8003858:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800385c:	460c      	mov	r4, r1
 800385e:	7e27      	ldrb	r7, [r4, #24]
 8003860:	4691      	mov	r9, r2
 8003862:	2f78      	cmp	r7, #120	; 0x78
 8003864:	4680      	mov	r8, r0
 8003866:	469a      	mov	sl, r3
 8003868:	990c      	ldr	r1, [sp, #48]	; 0x30
 800386a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800386e:	d807      	bhi.n	8003880 <_printf_i+0x28>
 8003870:	2f62      	cmp	r7, #98	; 0x62
 8003872:	d80a      	bhi.n	800388a <_printf_i+0x32>
 8003874:	2f00      	cmp	r7, #0
 8003876:	f000 80d9 	beq.w	8003a2c <_printf_i+0x1d4>
 800387a:	2f58      	cmp	r7, #88	; 0x58
 800387c:	f000 80a4 	beq.w	80039c8 <_printf_i+0x170>
 8003880:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8003884:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003888:	e03a      	b.n	8003900 <_printf_i+0xa8>
 800388a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800388e:	2b15      	cmp	r3, #21
 8003890:	d8f6      	bhi.n	8003880 <_printf_i+0x28>
 8003892:	a001      	add	r0, pc, #4	; (adr r0, 8003898 <_printf_i+0x40>)
 8003894:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8003898:	080038f1 	.word	0x080038f1
 800389c:	08003905 	.word	0x08003905
 80038a0:	08003881 	.word	0x08003881
 80038a4:	08003881 	.word	0x08003881
 80038a8:	08003881 	.word	0x08003881
 80038ac:	08003881 	.word	0x08003881
 80038b0:	08003905 	.word	0x08003905
 80038b4:	08003881 	.word	0x08003881
 80038b8:	08003881 	.word	0x08003881
 80038bc:	08003881 	.word	0x08003881
 80038c0:	08003881 	.word	0x08003881
 80038c4:	08003a13 	.word	0x08003a13
 80038c8:	08003935 	.word	0x08003935
 80038cc:	080039f5 	.word	0x080039f5
 80038d0:	08003881 	.word	0x08003881
 80038d4:	08003881 	.word	0x08003881
 80038d8:	08003a35 	.word	0x08003a35
 80038dc:	08003881 	.word	0x08003881
 80038e0:	08003935 	.word	0x08003935
 80038e4:	08003881 	.word	0x08003881
 80038e8:	08003881 	.word	0x08003881
 80038ec:	080039fd 	.word	0x080039fd
 80038f0:	680b      	ldr	r3, [r1, #0]
 80038f2:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80038f6:	1d1a      	adds	r2, r3, #4
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	600a      	str	r2, [r1, #0]
 80038fc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003900:	2301      	movs	r3, #1
 8003902:	e0a4      	b.n	8003a4e <_printf_i+0x1f6>
 8003904:	6825      	ldr	r5, [r4, #0]
 8003906:	6808      	ldr	r0, [r1, #0]
 8003908:	062e      	lsls	r6, r5, #24
 800390a:	f100 0304 	add.w	r3, r0, #4
 800390e:	d50a      	bpl.n	8003926 <_printf_i+0xce>
 8003910:	6805      	ldr	r5, [r0, #0]
 8003912:	600b      	str	r3, [r1, #0]
 8003914:	2d00      	cmp	r5, #0
 8003916:	da03      	bge.n	8003920 <_printf_i+0xc8>
 8003918:	232d      	movs	r3, #45	; 0x2d
 800391a:	426d      	negs	r5, r5
 800391c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003920:	230a      	movs	r3, #10
 8003922:	485e      	ldr	r0, [pc, #376]	; (8003a9c <_printf_i+0x244>)
 8003924:	e019      	b.n	800395a <_printf_i+0x102>
 8003926:	f015 0f40 	tst.w	r5, #64	; 0x40
 800392a:	6805      	ldr	r5, [r0, #0]
 800392c:	600b      	str	r3, [r1, #0]
 800392e:	bf18      	it	ne
 8003930:	b22d      	sxthne	r5, r5
 8003932:	e7ef      	b.n	8003914 <_printf_i+0xbc>
 8003934:	680b      	ldr	r3, [r1, #0]
 8003936:	6825      	ldr	r5, [r4, #0]
 8003938:	1d18      	adds	r0, r3, #4
 800393a:	6008      	str	r0, [r1, #0]
 800393c:	0628      	lsls	r0, r5, #24
 800393e:	d501      	bpl.n	8003944 <_printf_i+0xec>
 8003940:	681d      	ldr	r5, [r3, #0]
 8003942:	e002      	b.n	800394a <_printf_i+0xf2>
 8003944:	0669      	lsls	r1, r5, #25
 8003946:	d5fb      	bpl.n	8003940 <_printf_i+0xe8>
 8003948:	881d      	ldrh	r5, [r3, #0]
 800394a:	2f6f      	cmp	r7, #111	; 0x6f
 800394c:	bf0c      	ite	eq
 800394e:	2308      	moveq	r3, #8
 8003950:	230a      	movne	r3, #10
 8003952:	4852      	ldr	r0, [pc, #328]	; (8003a9c <_printf_i+0x244>)
 8003954:	2100      	movs	r1, #0
 8003956:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800395a:	6866      	ldr	r6, [r4, #4]
 800395c:	2e00      	cmp	r6, #0
 800395e:	bfa8      	it	ge
 8003960:	6821      	ldrge	r1, [r4, #0]
 8003962:	60a6      	str	r6, [r4, #8]
 8003964:	bfa4      	itt	ge
 8003966:	f021 0104 	bicge.w	r1, r1, #4
 800396a:	6021      	strge	r1, [r4, #0]
 800396c:	b90d      	cbnz	r5, 8003972 <_printf_i+0x11a>
 800396e:	2e00      	cmp	r6, #0
 8003970:	d04d      	beq.n	8003a0e <_printf_i+0x1b6>
 8003972:	4616      	mov	r6, r2
 8003974:	fbb5 f1f3 	udiv	r1, r5, r3
 8003978:	fb03 5711 	mls	r7, r3, r1, r5
 800397c:	5dc7      	ldrb	r7, [r0, r7]
 800397e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8003982:	462f      	mov	r7, r5
 8003984:	42bb      	cmp	r3, r7
 8003986:	460d      	mov	r5, r1
 8003988:	d9f4      	bls.n	8003974 <_printf_i+0x11c>
 800398a:	2b08      	cmp	r3, #8
 800398c:	d10b      	bne.n	80039a6 <_printf_i+0x14e>
 800398e:	6823      	ldr	r3, [r4, #0]
 8003990:	07df      	lsls	r7, r3, #31
 8003992:	d508      	bpl.n	80039a6 <_printf_i+0x14e>
 8003994:	6923      	ldr	r3, [r4, #16]
 8003996:	6861      	ldr	r1, [r4, #4]
 8003998:	4299      	cmp	r1, r3
 800399a:	bfde      	ittt	le
 800399c:	2330      	movle	r3, #48	; 0x30
 800399e:	f806 3c01 	strble.w	r3, [r6, #-1]
 80039a2:	f106 36ff 	addle.w	r6, r6, #4294967295
 80039a6:	1b92      	subs	r2, r2, r6
 80039a8:	6122      	str	r2, [r4, #16]
 80039aa:	464b      	mov	r3, r9
 80039ac:	4621      	mov	r1, r4
 80039ae:	4640      	mov	r0, r8
 80039b0:	f8cd a000 	str.w	sl, [sp]
 80039b4:	aa03      	add	r2, sp, #12
 80039b6:	f7ff fedf 	bl	8003778 <_printf_common>
 80039ba:	3001      	adds	r0, #1
 80039bc:	d14c      	bne.n	8003a58 <_printf_i+0x200>
 80039be:	f04f 30ff 	mov.w	r0, #4294967295
 80039c2:	b004      	add	sp, #16
 80039c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80039c8:	4834      	ldr	r0, [pc, #208]	; (8003a9c <_printf_i+0x244>)
 80039ca:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80039ce:	680e      	ldr	r6, [r1, #0]
 80039d0:	6823      	ldr	r3, [r4, #0]
 80039d2:	f856 5b04 	ldr.w	r5, [r6], #4
 80039d6:	061f      	lsls	r7, r3, #24
 80039d8:	600e      	str	r6, [r1, #0]
 80039da:	d514      	bpl.n	8003a06 <_printf_i+0x1ae>
 80039dc:	07d9      	lsls	r1, r3, #31
 80039de:	bf44      	itt	mi
 80039e0:	f043 0320 	orrmi.w	r3, r3, #32
 80039e4:	6023      	strmi	r3, [r4, #0]
 80039e6:	b91d      	cbnz	r5, 80039f0 <_printf_i+0x198>
 80039e8:	6823      	ldr	r3, [r4, #0]
 80039ea:	f023 0320 	bic.w	r3, r3, #32
 80039ee:	6023      	str	r3, [r4, #0]
 80039f0:	2310      	movs	r3, #16
 80039f2:	e7af      	b.n	8003954 <_printf_i+0xfc>
 80039f4:	6823      	ldr	r3, [r4, #0]
 80039f6:	f043 0320 	orr.w	r3, r3, #32
 80039fa:	6023      	str	r3, [r4, #0]
 80039fc:	2378      	movs	r3, #120	; 0x78
 80039fe:	4828      	ldr	r0, [pc, #160]	; (8003aa0 <_printf_i+0x248>)
 8003a00:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003a04:	e7e3      	b.n	80039ce <_printf_i+0x176>
 8003a06:	065e      	lsls	r6, r3, #25
 8003a08:	bf48      	it	mi
 8003a0a:	b2ad      	uxthmi	r5, r5
 8003a0c:	e7e6      	b.n	80039dc <_printf_i+0x184>
 8003a0e:	4616      	mov	r6, r2
 8003a10:	e7bb      	b.n	800398a <_printf_i+0x132>
 8003a12:	680b      	ldr	r3, [r1, #0]
 8003a14:	6826      	ldr	r6, [r4, #0]
 8003a16:	1d1d      	adds	r5, r3, #4
 8003a18:	6960      	ldr	r0, [r4, #20]
 8003a1a:	600d      	str	r5, [r1, #0]
 8003a1c:	0635      	lsls	r5, r6, #24
 8003a1e:	681b      	ldr	r3, [r3, #0]
 8003a20:	d501      	bpl.n	8003a26 <_printf_i+0x1ce>
 8003a22:	6018      	str	r0, [r3, #0]
 8003a24:	e002      	b.n	8003a2c <_printf_i+0x1d4>
 8003a26:	0671      	lsls	r1, r6, #25
 8003a28:	d5fb      	bpl.n	8003a22 <_printf_i+0x1ca>
 8003a2a:	8018      	strh	r0, [r3, #0]
 8003a2c:	2300      	movs	r3, #0
 8003a2e:	4616      	mov	r6, r2
 8003a30:	6123      	str	r3, [r4, #16]
 8003a32:	e7ba      	b.n	80039aa <_printf_i+0x152>
 8003a34:	680b      	ldr	r3, [r1, #0]
 8003a36:	1d1a      	adds	r2, r3, #4
 8003a38:	600a      	str	r2, [r1, #0]
 8003a3a:	681e      	ldr	r6, [r3, #0]
 8003a3c:	2100      	movs	r1, #0
 8003a3e:	4630      	mov	r0, r6
 8003a40:	6862      	ldr	r2, [r4, #4]
 8003a42:	f000 fed7 	bl	80047f4 <memchr>
 8003a46:	b108      	cbz	r0, 8003a4c <_printf_i+0x1f4>
 8003a48:	1b80      	subs	r0, r0, r6
 8003a4a:	6060      	str	r0, [r4, #4]
 8003a4c:	6863      	ldr	r3, [r4, #4]
 8003a4e:	6123      	str	r3, [r4, #16]
 8003a50:	2300      	movs	r3, #0
 8003a52:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003a56:	e7a8      	b.n	80039aa <_printf_i+0x152>
 8003a58:	4632      	mov	r2, r6
 8003a5a:	4649      	mov	r1, r9
 8003a5c:	4640      	mov	r0, r8
 8003a5e:	6923      	ldr	r3, [r4, #16]
 8003a60:	47d0      	blx	sl
 8003a62:	3001      	adds	r0, #1
 8003a64:	d0ab      	beq.n	80039be <_printf_i+0x166>
 8003a66:	6823      	ldr	r3, [r4, #0]
 8003a68:	079b      	lsls	r3, r3, #30
 8003a6a:	d413      	bmi.n	8003a94 <_printf_i+0x23c>
 8003a6c:	68e0      	ldr	r0, [r4, #12]
 8003a6e:	9b03      	ldr	r3, [sp, #12]
 8003a70:	4298      	cmp	r0, r3
 8003a72:	bfb8      	it	lt
 8003a74:	4618      	movlt	r0, r3
 8003a76:	e7a4      	b.n	80039c2 <_printf_i+0x16a>
 8003a78:	2301      	movs	r3, #1
 8003a7a:	4632      	mov	r2, r6
 8003a7c:	4649      	mov	r1, r9
 8003a7e:	4640      	mov	r0, r8
 8003a80:	47d0      	blx	sl
 8003a82:	3001      	adds	r0, #1
 8003a84:	d09b      	beq.n	80039be <_printf_i+0x166>
 8003a86:	3501      	adds	r5, #1
 8003a88:	68e3      	ldr	r3, [r4, #12]
 8003a8a:	9903      	ldr	r1, [sp, #12]
 8003a8c:	1a5b      	subs	r3, r3, r1
 8003a8e:	42ab      	cmp	r3, r5
 8003a90:	dcf2      	bgt.n	8003a78 <_printf_i+0x220>
 8003a92:	e7eb      	b.n	8003a6c <_printf_i+0x214>
 8003a94:	2500      	movs	r5, #0
 8003a96:	f104 0619 	add.w	r6, r4, #25
 8003a9a:	e7f5      	b.n	8003a88 <_printf_i+0x230>
 8003a9c:	08005f9e 	.word	0x08005f9e
 8003aa0:	08005faf 	.word	0x08005faf

08003aa4 <siprintf>:
 8003aa4:	b40e      	push	{r1, r2, r3}
 8003aa6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003aaa:	b500      	push	{lr}
 8003aac:	b09c      	sub	sp, #112	; 0x70
 8003aae:	ab1d      	add	r3, sp, #116	; 0x74
 8003ab0:	9002      	str	r0, [sp, #8]
 8003ab2:	9006      	str	r0, [sp, #24]
 8003ab4:	9107      	str	r1, [sp, #28]
 8003ab6:	9104      	str	r1, [sp, #16]
 8003ab8:	4808      	ldr	r0, [pc, #32]	; (8003adc <siprintf+0x38>)
 8003aba:	4909      	ldr	r1, [pc, #36]	; (8003ae0 <siprintf+0x3c>)
 8003abc:	f853 2b04 	ldr.w	r2, [r3], #4
 8003ac0:	9105      	str	r1, [sp, #20]
 8003ac2:	6800      	ldr	r0, [r0, #0]
 8003ac4:	a902      	add	r1, sp, #8
 8003ac6:	9301      	str	r3, [sp, #4]
 8003ac8:	f001 fb42 	bl	8005150 <_svfiprintf_r>
 8003acc:	2200      	movs	r2, #0
 8003ace:	9b02      	ldr	r3, [sp, #8]
 8003ad0:	701a      	strb	r2, [r3, #0]
 8003ad2:	b01c      	add	sp, #112	; 0x70
 8003ad4:	f85d eb04 	ldr.w	lr, [sp], #4
 8003ad8:	b003      	add	sp, #12
 8003ada:	4770      	bx	lr
 8003adc:	2000000c 	.word	0x2000000c
 8003ae0:	ffff0208 	.word	0xffff0208

08003ae4 <quorem>:
 8003ae4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ae8:	6903      	ldr	r3, [r0, #16]
 8003aea:	690c      	ldr	r4, [r1, #16]
 8003aec:	4607      	mov	r7, r0
 8003aee:	42a3      	cmp	r3, r4
 8003af0:	f2c0 8083 	blt.w	8003bfa <quorem+0x116>
 8003af4:	3c01      	subs	r4, #1
 8003af6:	f100 0514 	add.w	r5, r0, #20
 8003afa:	f101 0814 	add.w	r8, r1, #20
 8003afe:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003b02:	9301      	str	r3, [sp, #4]
 8003b04:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8003b08:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003b0c:	3301      	adds	r3, #1
 8003b0e:	429a      	cmp	r2, r3
 8003b10:	fbb2 f6f3 	udiv	r6, r2, r3
 8003b14:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8003b18:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8003b1c:	d332      	bcc.n	8003b84 <quorem+0xa0>
 8003b1e:	f04f 0e00 	mov.w	lr, #0
 8003b22:	4640      	mov	r0, r8
 8003b24:	46ac      	mov	ip, r5
 8003b26:	46f2      	mov	sl, lr
 8003b28:	f850 2b04 	ldr.w	r2, [r0], #4
 8003b2c:	b293      	uxth	r3, r2
 8003b2e:	fb06 e303 	mla	r3, r6, r3, lr
 8003b32:	0c12      	lsrs	r2, r2, #16
 8003b34:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8003b38:	fb06 e202 	mla	r2, r6, r2, lr
 8003b3c:	b29b      	uxth	r3, r3
 8003b3e:	ebaa 0303 	sub.w	r3, sl, r3
 8003b42:	f8dc a000 	ldr.w	sl, [ip]
 8003b46:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8003b4a:	fa1f fa8a 	uxth.w	sl, sl
 8003b4e:	4453      	add	r3, sl
 8003b50:	fa1f fa82 	uxth.w	sl, r2
 8003b54:	f8dc 2000 	ldr.w	r2, [ip]
 8003b58:	4581      	cmp	r9, r0
 8003b5a:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 8003b5e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003b62:	b29b      	uxth	r3, r3
 8003b64:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003b68:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8003b6c:	f84c 3b04 	str.w	r3, [ip], #4
 8003b70:	d2da      	bcs.n	8003b28 <quorem+0x44>
 8003b72:	f855 300b 	ldr.w	r3, [r5, fp]
 8003b76:	b92b      	cbnz	r3, 8003b84 <quorem+0xa0>
 8003b78:	9b01      	ldr	r3, [sp, #4]
 8003b7a:	3b04      	subs	r3, #4
 8003b7c:	429d      	cmp	r5, r3
 8003b7e:	461a      	mov	r2, r3
 8003b80:	d32f      	bcc.n	8003be2 <quorem+0xfe>
 8003b82:	613c      	str	r4, [r7, #16]
 8003b84:	4638      	mov	r0, r7
 8003b86:	f001 f8cb 	bl	8004d20 <__mcmp>
 8003b8a:	2800      	cmp	r0, #0
 8003b8c:	db25      	blt.n	8003bda <quorem+0xf6>
 8003b8e:	4628      	mov	r0, r5
 8003b90:	f04f 0c00 	mov.w	ip, #0
 8003b94:	3601      	adds	r6, #1
 8003b96:	f858 1b04 	ldr.w	r1, [r8], #4
 8003b9a:	f8d0 e000 	ldr.w	lr, [r0]
 8003b9e:	b28b      	uxth	r3, r1
 8003ba0:	ebac 0303 	sub.w	r3, ip, r3
 8003ba4:	fa1f f28e 	uxth.w	r2, lr
 8003ba8:	4413      	add	r3, r2
 8003baa:	0c0a      	lsrs	r2, r1, #16
 8003bac:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8003bb0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003bb4:	b29b      	uxth	r3, r3
 8003bb6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003bba:	45c1      	cmp	r9, r8
 8003bbc:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8003bc0:	f840 3b04 	str.w	r3, [r0], #4
 8003bc4:	d2e7      	bcs.n	8003b96 <quorem+0xb2>
 8003bc6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003bca:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003bce:	b922      	cbnz	r2, 8003bda <quorem+0xf6>
 8003bd0:	3b04      	subs	r3, #4
 8003bd2:	429d      	cmp	r5, r3
 8003bd4:	461a      	mov	r2, r3
 8003bd6:	d30a      	bcc.n	8003bee <quorem+0x10a>
 8003bd8:	613c      	str	r4, [r7, #16]
 8003bda:	4630      	mov	r0, r6
 8003bdc:	b003      	add	sp, #12
 8003bde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003be2:	6812      	ldr	r2, [r2, #0]
 8003be4:	3b04      	subs	r3, #4
 8003be6:	2a00      	cmp	r2, #0
 8003be8:	d1cb      	bne.n	8003b82 <quorem+0x9e>
 8003bea:	3c01      	subs	r4, #1
 8003bec:	e7c6      	b.n	8003b7c <quorem+0x98>
 8003bee:	6812      	ldr	r2, [r2, #0]
 8003bf0:	3b04      	subs	r3, #4
 8003bf2:	2a00      	cmp	r2, #0
 8003bf4:	d1f0      	bne.n	8003bd8 <quorem+0xf4>
 8003bf6:	3c01      	subs	r4, #1
 8003bf8:	e7eb      	b.n	8003bd2 <quorem+0xee>
 8003bfa:	2000      	movs	r0, #0
 8003bfc:	e7ee      	b.n	8003bdc <quorem+0xf8>
	...

08003c00 <_dtoa_r>:
 8003c00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c04:	4616      	mov	r6, r2
 8003c06:	461f      	mov	r7, r3
 8003c08:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8003c0a:	b099      	sub	sp, #100	; 0x64
 8003c0c:	4605      	mov	r5, r0
 8003c0e:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8003c12:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 8003c16:	b974      	cbnz	r4, 8003c36 <_dtoa_r+0x36>
 8003c18:	2010      	movs	r0, #16
 8003c1a:	f000 fde3 	bl	80047e4 <malloc>
 8003c1e:	4602      	mov	r2, r0
 8003c20:	6268      	str	r0, [r5, #36]	; 0x24
 8003c22:	b920      	cbnz	r0, 8003c2e <_dtoa_r+0x2e>
 8003c24:	21ea      	movs	r1, #234	; 0xea
 8003c26:	4bae      	ldr	r3, [pc, #696]	; (8003ee0 <_dtoa_r+0x2e0>)
 8003c28:	48ae      	ldr	r0, [pc, #696]	; (8003ee4 <_dtoa_r+0x2e4>)
 8003c2a:	f001 fba1 	bl	8005370 <__assert_func>
 8003c2e:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003c32:	6004      	str	r4, [r0, #0]
 8003c34:	60c4      	str	r4, [r0, #12]
 8003c36:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003c38:	6819      	ldr	r1, [r3, #0]
 8003c3a:	b151      	cbz	r1, 8003c52 <_dtoa_r+0x52>
 8003c3c:	685a      	ldr	r2, [r3, #4]
 8003c3e:	2301      	movs	r3, #1
 8003c40:	4093      	lsls	r3, r2
 8003c42:	604a      	str	r2, [r1, #4]
 8003c44:	608b      	str	r3, [r1, #8]
 8003c46:	4628      	mov	r0, r5
 8003c48:	f000 fe30 	bl	80048ac <_Bfree>
 8003c4c:	2200      	movs	r2, #0
 8003c4e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003c50:	601a      	str	r2, [r3, #0]
 8003c52:	1e3b      	subs	r3, r7, #0
 8003c54:	bfaf      	iteee	ge
 8003c56:	2300      	movge	r3, #0
 8003c58:	2201      	movlt	r2, #1
 8003c5a:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8003c5e:	9305      	strlt	r3, [sp, #20]
 8003c60:	bfa8      	it	ge
 8003c62:	f8c8 3000 	strge.w	r3, [r8]
 8003c66:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8003c6a:	4b9f      	ldr	r3, [pc, #636]	; (8003ee8 <_dtoa_r+0x2e8>)
 8003c6c:	bfb8      	it	lt
 8003c6e:	f8c8 2000 	strlt.w	r2, [r8]
 8003c72:	ea33 0309 	bics.w	r3, r3, r9
 8003c76:	d119      	bne.n	8003cac <_dtoa_r+0xac>
 8003c78:	f242 730f 	movw	r3, #9999	; 0x270f
 8003c7c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8003c7e:	6013      	str	r3, [r2, #0]
 8003c80:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003c84:	4333      	orrs	r3, r6
 8003c86:	f000 8580 	beq.w	800478a <_dtoa_r+0xb8a>
 8003c8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003c8c:	b953      	cbnz	r3, 8003ca4 <_dtoa_r+0xa4>
 8003c8e:	4b97      	ldr	r3, [pc, #604]	; (8003eec <_dtoa_r+0x2ec>)
 8003c90:	e022      	b.n	8003cd8 <_dtoa_r+0xd8>
 8003c92:	4b97      	ldr	r3, [pc, #604]	; (8003ef0 <_dtoa_r+0x2f0>)
 8003c94:	9308      	str	r3, [sp, #32]
 8003c96:	3308      	adds	r3, #8
 8003c98:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8003c9a:	6013      	str	r3, [r2, #0]
 8003c9c:	9808      	ldr	r0, [sp, #32]
 8003c9e:	b019      	add	sp, #100	; 0x64
 8003ca0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ca4:	4b91      	ldr	r3, [pc, #580]	; (8003eec <_dtoa_r+0x2ec>)
 8003ca6:	9308      	str	r3, [sp, #32]
 8003ca8:	3303      	adds	r3, #3
 8003caa:	e7f5      	b.n	8003c98 <_dtoa_r+0x98>
 8003cac:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8003cb0:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8003cb4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003cb8:	2200      	movs	r2, #0
 8003cba:	2300      	movs	r3, #0
 8003cbc:	f7fc fe74 	bl	80009a8 <__aeabi_dcmpeq>
 8003cc0:	4680      	mov	r8, r0
 8003cc2:	b158      	cbz	r0, 8003cdc <_dtoa_r+0xdc>
 8003cc4:	2301      	movs	r3, #1
 8003cc6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8003cc8:	6013      	str	r3, [r2, #0]
 8003cca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003ccc:	2b00      	cmp	r3, #0
 8003cce:	f000 8559 	beq.w	8004784 <_dtoa_r+0xb84>
 8003cd2:	4888      	ldr	r0, [pc, #544]	; (8003ef4 <_dtoa_r+0x2f4>)
 8003cd4:	6018      	str	r0, [r3, #0]
 8003cd6:	1e43      	subs	r3, r0, #1
 8003cd8:	9308      	str	r3, [sp, #32]
 8003cda:	e7df      	b.n	8003c9c <_dtoa_r+0x9c>
 8003cdc:	ab16      	add	r3, sp, #88	; 0x58
 8003cde:	9301      	str	r3, [sp, #4]
 8003ce0:	ab17      	add	r3, sp, #92	; 0x5c
 8003ce2:	9300      	str	r3, [sp, #0]
 8003ce4:	4628      	mov	r0, r5
 8003ce6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8003cea:	f001 f8c5 	bl	8004e78 <__d2b>
 8003cee:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8003cf2:	4682      	mov	sl, r0
 8003cf4:	2c00      	cmp	r4, #0
 8003cf6:	d07e      	beq.n	8003df6 <_dtoa_r+0x1f6>
 8003cf8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003cfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003cfe:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8003d02:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003d06:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8003d0a:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8003d0e:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8003d12:	2200      	movs	r2, #0
 8003d14:	4b78      	ldr	r3, [pc, #480]	; (8003ef8 <_dtoa_r+0x2f8>)
 8003d16:	f7fc fa27 	bl	8000168 <__aeabi_dsub>
 8003d1a:	a36b      	add	r3, pc, #428	; (adr r3, 8003ec8 <_dtoa_r+0x2c8>)
 8003d1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d20:	f7fc fbda 	bl	80004d8 <__aeabi_dmul>
 8003d24:	a36a      	add	r3, pc, #424	; (adr r3, 8003ed0 <_dtoa_r+0x2d0>)
 8003d26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d2a:	f7fc fa1f 	bl	800016c <__adddf3>
 8003d2e:	4606      	mov	r6, r0
 8003d30:	4620      	mov	r0, r4
 8003d32:	460f      	mov	r7, r1
 8003d34:	f7fc fb66 	bl	8000404 <__aeabi_i2d>
 8003d38:	a367      	add	r3, pc, #412	; (adr r3, 8003ed8 <_dtoa_r+0x2d8>)
 8003d3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d3e:	f7fc fbcb 	bl	80004d8 <__aeabi_dmul>
 8003d42:	4602      	mov	r2, r0
 8003d44:	460b      	mov	r3, r1
 8003d46:	4630      	mov	r0, r6
 8003d48:	4639      	mov	r1, r7
 8003d4a:	f7fc fa0f 	bl	800016c <__adddf3>
 8003d4e:	4606      	mov	r6, r0
 8003d50:	460f      	mov	r7, r1
 8003d52:	f7fc fe71 	bl	8000a38 <__aeabi_d2iz>
 8003d56:	2200      	movs	r2, #0
 8003d58:	4681      	mov	r9, r0
 8003d5a:	2300      	movs	r3, #0
 8003d5c:	4630      	mov	r0, r6
 8003d5e:	4639      	mov	r1, r7
 8003d60:	f7fc fe2c 	bl	80009bc <__aeabi_dcmplt>
 8003d64:	b148      	cbz	r0, 8003d7a <_dtoa_r+0x17a>
 8003d66:	4648      	mov	r0, r9
 8003d68:	f7fc fb4c 	bl	8000404 <__aeabi_i2d>
 8003d6c:	4632      	mov	r2, r6
 8003d6e:	463b      	mov	r3, r7
 8003d70:	f7fc fe1a 	bl	80009a8 <__aeabi_dcmpeq>
 8003d74:	b908      	cbnz	r0, 8003d7a <_dtoa_r+0x17a>
 8003d76:	f109 39ff 	add.w	r9, r9, #4294967295
 8003d7a:	f1b9 0f16 	cmp.w	r9, #22
 8003d7e:	d857      	bhi.n	8003e30 <_dtoa_r+0x230>
 8003d80:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003d84:	4b5d      	ldr	r3, [pc, #372]	; (8003efc <_dtoa_r+0x2fc>)
 8003d86:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8003d8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d8e:	f7fc fe15 	bl	80009bc <__aeabi_dcmplt>
 8003d92:	2800      	cmp	r0, #0
 8003d94:	d04e      	beq.n	8003e34 <_dtoa_r+0x234>
 8003d96:	2300      	movs	r3, #0
 8003d98:	f109 39ff 	add.w	r9, r9, #4294967295
 8003d9c:	930f      	str	r3, [sp, #60]	; 0x3c
 8003d9e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8003da0:	1b1c      	subs	r4, r3, r4
 8003da2:	1e63      	subs	r3, r4, #1
 8003da4:	9309      	str	r3, [sp, #36]	; 0x24
 8003da6:	bf49      	itett	mi
 8003da8:	f1c4 0301 	rsbmi	r3, r4, #1
 8003dac:	2300      	movpl	r3, #0
 8003dae:	9306      	strmi	r3, [sp, #24]
 8003db0:	2300      	movmi	r3, #0
 8003db2:	bf54      	ite	pl
 8003db4:	9306      	strpl	r3, [sp, #24]
 8003db6:	9309      	strmi	r3, [sp, #36]	; 0x24
 8003db8:	f1b9 0f00 	cmp.w	r9, #0
 8003dbc:	db3c      	blt.n	8003e38 <_dtoa_r+0x238>
 8003dbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003dc0:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8003dc4:	444b      	add	r3, r9
 8003dc6:	9309      	str	r3, [sp, #36]	; 0x24
 8003dc8:	2300      	movs	r3, #0
 8003dca:	930a      	str	r3, [sp, #40]	; 0x28
 8003dcc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003dce:	2b09      	cmp	r3, #9
 8003dd0:	d86c      	bhi.n	8003eac <_dtoa_r+0x2ac>
 8003dd2:	2b05      	cmp	r3, #5
 8003dd4:	bfc4      	itt	gt
 8003dd6:	3b04      	subgt	r3, #4
 8003dd8:	9322      	strgt	r3, [sp, #136]	; 0x88
 8003dda:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003ddc:	bfc8      	it	gt
 8003dde:	2400      	movgt	r4, #0
 8003de0:	f1a3 0302 	sub.w	r3, r3, #2
 8003de4:	bfd8      	it	le
 8003de6:	2401      	movle	r4, #1
 8003de8:	2b03      	cmp	r3, #3
 8003dea:	f200 808b 	bhi.w	8003f04 <_dtoa_r+0x304>
 8003dee:	e8df f003 	tbb	[pc, r3]
 8003df2:	4f2d      	.short	0x4f2d
 8003df4:	5b4d      	.short	0x5b4d
 8003df6:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 8003dfa:	441c      	add	r4, r3
 8003dfc:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8003e00:	2b20      	cmp	r3, #32
 8003e02:	bfc3      	ittte	gt
 8003e04:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8003e08:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 8003e0c:	fa09 f303 	lslgt.w	r3, r9, r3
 8003e10:	f1c3 0320 	rsble	r3, r3, #32
 8003e14:	bfc6      	itte	gt
 8003e16:	fa26 f000 	lsrgt.w	r0, r6, r0
 8003e1a:	4318      	orrgt	r0, r3
 8003e1c:	fa06 f003 	lslle.w	r0, r6, r3
 8003e20:	f7fc fae0 	bl	80003e4 <__aeabi_ui2d>
 8003e24:	2301      	movs	r3, #1
 8003e26:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8003e2a:	3c01      	subs	r4, #1
 8003e2c:	9313      	str	r3, [sp, #76]	; 0x4c
 8003e2e:	e770      	b.n	8003d12 <_dtoa_r+0x112>
 8003e30:	2301      	movs	r3, #1
 8003e32:	e7b3      	b.n	8003d9c <_dtoa_r+0x19c>
 8003e34:	900f      	str	r0, [sp, #60]	; 0x3c
 8003e36:	e7b2      	b.n	8003d9e <_dtoa_r+0x19e>
 8003e38:	9b06      	ldr	r3, [sp, #24]
 8003e3a:	eba3 0309 	sub.w	r3, r3, r9
 8003e3e:	9306      	str	r3, [sp, #24]
 8003e40:	f1c9 0300 	rsb	r3, r9, #0
 8003e44:	930a      	str	r3, [sp, #40]	; 0x28
 8003e46:	2300      	movs	r3, #0
 8003e48:	930e      	str	r3, [sp, #56]	; 0x38
 8003e4a:	e7bf      	b.n	8003dcc <_dtoa_r+0x1cc>
 8003e4c:	2300      	movs	r3, #0
 8003e4e:	930b      	str	r3, [sp, #44]	; 0x2c
 8003e50:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003e52:	2b00      	cmp	r3, #0
 8003e54:	dc59      	bgt.n	8003f0a <_dtoa_r+0x30a>
 8003e56:	f04f 0b01 	mov.w	fp, #1
 8003e5a:	465b      	mov	r3, fp
 8003e5c:	f8cd b008 	str.w	fp, [sp, #8]
 8003e60:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8003e64:	2200      	movs	r2, #0
 8003e66:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8003e68:	6042      	str	r2, [r0, #4]
 8003e6a:	2204      	movs	r2, #4
 8003e6c:	f102 0614 	add.w	r6, r2, #20
 8003e70:	429e      	cmp	r6, r3
 8003e72:	6841      	ldr	r1, [r0, #4]
 8003e74:	d94f      	bls.n	8003f16 <_dtoa_r+0x316>
 8003e76:	4628      	mov	r0, r5
 8003e78:	f000 fcd8 	bl	800482c <_Balloc>
 8003e7c:	9008      	str	r0, [sp, #32]
 8003e7e:	2800      	cmp	r0, #0
 8003e80:	d14d      	bne.n	8003f1e <_dtoa_r+0x31e>
 8003e82:	4602      	mov	r2, r0
 8003e84:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8003e88:	4b1d      	ldr	r3, [pc, #116]	; (8003f00 <_dtoa_r+0x300>)
 8003e8a:	e6cd      	b.n	8003c28 <_dtoa_r+0x28>
 8003e8c:	2301      	movs	r3, #1
 8003e8e:	e7de      	b.n	8003e4e <_dtoa_r+0x24e>
 8003e90:	2300      	movs	r3, #0
 8003e92:	930b      	str	r3, [sp, #44]	; 0x2c
 8003e94:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003e96:	eb09 0b03 	add.w	fp, r9, r3
 8003e9a:	f10b 0301 	add.w	r3, fp, #1
 8003e9e:	2b01      	cmp	r3, #1
 8003ea0:	9302      	str	r3, [sp, #8]
 8003ea2:	bfb8      	it	lt
 8003ea4:	2301      	movlt	r3, #1
 8003ea6:	e7dd      	b.n	8003e64 <_dtoa_r+0x264>
 8003ea8:	2301      	movs	r3, #1
 8003eaa:	e7f2      	b.n	8003e92 <_dtoa_r+0x292>
 8003eac:	2401      	movs	r4, #1
 8003eae:	2300      	movs	r3, #0
 8003eb0:	940b      	str	r4, [sp, #44]	; 0x2c
 8003eb2:	9322      	str	r3, [sp, #136]	; 0x88
 8003eb4:	f04f 3bff 	mov.w	fp, #4294967295
 8003eb8:	2200      	movs	r2, #0
 8003eba:	2312      	movs	r3, #18
 8003ebc:	f8cd b008 	str.w	fp, [sp, #8]
 8003ec0:	9223      	str	r2, [sp, #140]	; 0x8c
 8003ec2:	e7cf      	b.n	8003e64 <_dtoa_r+0x264>
 8003ec4:	f3af 8000 	nop.w
 8003ec8:	636f4361 	.word	0x636f4361
 8003ecc:	3fd287a7 	.word	0x3fd287a7
 8003ed0:	8b60c8b3 	.word	0x8b60c8b3
 8003ed4:	3fc68a28 	.word	0x3fc68a28
 8003ed8:	509f79fb 	.word	0x509f79fb
 8003edc:	3fd34413 	.word	0x3fd34413
 8003ee0:	08005fcd 	.word	0x08005fcd
 8003ee4:	08005fe4 	.word	0x08005fe4
 8003ee8:	7ff00000 	.word	0x7ff00000
 8003eec:	08005fc9 	.word	0x08005fc9
 8003ef0:	08005fc0 	.word	0x08005fc0
 8003ef4:	08005f9d 	.word	0x08005f9d
 8003ef8:	3ff80000 	.word	0x3ff80000
 8003efc:	080060e0 	.word	0x080060e0
 8003f00:	08006043 	.word	0x08006043
 8003f04:	2301      	movs	r3, #1
 8003f06:	930b      	str	r3, [sp, #44]	; 0x2c
 8003f08:	e7d4      	b.n	8003eb4 <_dtoa_r+0x2b4>
 8003f0a:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8003f0e:	465b      	mov	r3, fp
 8003f10:	f8cd b008 	str.w	fp, [sp, #8]
 8003f14:	e7a6      	b.n	8003e64 <_dtoa_r+0x264>
 8003f16:	3101      	adds	r1, #1
 8003f18:	6041      	str	r1, [r0, #4]
 8003f1a:	0052      	lsls	r2, r2, #1
 8003f1c:	e7a6      	b.n	8003e6c <_dtoa_r+0x26c>
 8003f1e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003f20:	9a08      	ldr	r2, [sp, #32]
 8003f22:	601a      	str	r2, [r3, #0]
 8003f24:	9b02      	ldr	r3, [sp, #8]
 8003f26:	2b0e      	cmp	r3, #14
 8003f28:	f200 80a8 	bhi.w	800407c <_dtoa_r+0x47c>
 8003f2c:	2c00      	cmp	r4, #0
 8003f2e:	f000 80a5 	beq.w	800407c <_dtoa_r+0x47c>
 8003f32:	f1b9 0f00 	cmp.w	r9, #0
 8003f36:	dd34      	ble.n	8003fa2 <_dtoa_r+0x3a2>
 8003f38:	4a9a      	ldr	r2, [pc, #616]	; (80041a4 <_dtoa_r+0x5a4>)
 8003f3a:	f009 030f 	and.w	r3, r9, #15
 8003f3e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8003f42:	f419 7f80 	tst.w	r9, #256	; 0x100
 8003f46:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003f4a:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8003f4e:	ea4f 1429 	mov.w	r4, r9, asr #4
 8003f52:	d016      	beq.n	8003f82 <_dtoa_r+0x382>
 8003f54:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003f58:	4b93      	ldr	r3, [pc, #588]	; (80041a8 <_dtoa_r+0x5a8>)
 8003f5a:	2703      	movs	r7, #3
 8003f5c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003f60:	f7fc fbe4 	bl	800072c <__aeabi_ddiv>
 8003f64:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003f68:	f004 040f 	and.w	r4, r4, #15
 8003f6c:	4e8e      	ldr	r6, [pc, #568]	; (80041a8 <_dtoa_r+0x5a8>)
 8003f6e:	b954      	cbnz	r4, 8003f86 <_dtoa_r+0x386>
 8003f70:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003f74:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003f78:	f7fc fbd8 	bl	800072c <__aeabi_ddiv>
 8003f7c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003f80:	e029      	b.n	8003fd6 <_dtoa_r+0x3d6>
 8003f82:	2702      	movs	r7, #2
 8003f84:	e7f2      	b.n	8003f6c <_dtoa_r+0x36c>
 8003f86:	07e1      	lsls	r1, r4, #31
 8003f88:	d508      	bpl.n	8003f9c <_dtoa_r+0x39c>
 8003f8a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003f8e:	e9d6 2300 	ldrd	r2, r3, [r6]
 8003f92:	f7fc faa1 	bl	80004d8 <__aeabi_dmul>
 8003f96:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003f9a:	3701      	adds	r7, #1
 8003f9c:	1064      	asrs	r4, r4, #1
 8003f9e:	3608      	adds	r6, #8
 8003fa0:	e7e5      	b.n	8003f6e <_dtoa_r+0x36e>
 8003fa2:	f000 80a5 	beq.w	80040f0 <_dtoa_r+0x4f0>
 8003fa6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003faa:	f1c9 0400 	rsb	r4, r9, #0
 8003fae:	4b7d      	ldr	r3, [pc, #500]	; (80041a4 <_dtoa_r+0x5a4>)
 8003fb0:	f004 020f 	and.w	r2, r4, #15
 8003fb4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003fb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003fbc:	f7fc fa8c 	bl	80004d8 <__aeabi_dmul>
 8003fc0:	2702      	movs	r7, #2
 8003fc2:	2300      	movs	r3, #0
 8003fc4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003fc8:	4e77      	ldr	r6, [pc, #476]	; (80041a8 <_dtoa_r+0x5a8>)
 8003fca:	1124      	asrs	r4, r4, #4
 8003fcc:	2c00      	cmp	r4, #0
 8003fce:	f040 8084 	bne.w	80040da <_dtoa_r+0x4da>
 8003fd2:	2b00      	cmp	r3, #0
 8003fd4:	d1d2      	bne.n	8003f7c <_dtoa_r+0x37c>
 8003fd6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003fd8:	2b00      	cmp	r3, #0
 8003fda:	f000 808b 	beq.w	80040f4 <_dtoa_r+0x4f4>
 8003fde:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8003fe2:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8003fe6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003fea:	2200      	movs	r2, #0
 8003fec:	4b6f      	ldr	r3, [pc, #444]	; (80041ac <_dtoa_r+0x5ac>)
 8003fee:	f7fc fce5 	bl	80009bc <__aeabi_dcmplt>
 8003ff2:	2800      	cmp	r0, #0
 8003ff4:	d07e      	beq.n	80040f4 <_dtoa_r+0x4f4>
 8003ff6:	9b02      	ldr	r3, [sp, #8]
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	d07b      	beq.n	80040f4 <_dtoa_r+0x4f4>
 8003ffc:	f1bb 0f00 	cmp.w	fp, #0
 8004000:	dd38      	ble.n	8004074 <_dtoa_r+0x474>
 8004002:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004006:	2200      	movs	r2, #0
 8004008:	4b69      	ldr	r3, [pc, #420]	; (80041b0 <_dtoa_r+0x5b0>)
 800400a:	f7fc fa65 	bl	80004d8 <__aeabi_dmul>
 800400e:	465c      	mov	r4, fp
 8004010:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004014:	f109 38ff 	add.w	r8, r9, #4294967295
 8004018:	3701      	adds	r7, #1
 800401a:	4638      	mov	r0, r7
 800401c:	f7fc f9f2 	bl	8000404 <__aeabi_i2d>
 8004020:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004024:	f7fc fa58 	bl	80004d8 <__aeabi_dmul>
 8004028:	2200      	movs	r2, #0
 800402a:	4b62      	ldr	r3, [pc, #392]	; (80041b4 <_dtoa_r+0x5b4>)
 800402c:	f7fc f89e 	bl	800016c <__adddf3>
 8004030:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8004034:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004038:	9611      	str	r6, [sp, #68]	; 0x44
 800403a:	2c00      	cmp	r4, #0
 800403c:	d15d      	bne.n	80040fa <_dtoa_r+0x4fa>
 800403e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004042:	2200      	movs	r2, #0
 8004044:	4b5c      	ldr	r3, [pc, #368]	; (80041b8 <_dtoa_r+0x5b8>)
 8004046:	f7fc f88f 	bl	8000168 <__aeabi_dsub>
 800404a:	4602      	mov	r2, r0
 800404c:	460b      	mov	r3, r1
 800404e:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004052:	4633      	mov	r3, r6
 8004054:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004056:	f7fc fccf 	bl	80009f8 <__aeabi_dcmpgt>
 800405a:	2800      	cmp	r0, #0
 800405c:	f040 829e 	bne.w	800459c <_dtoa_r+0x99c>
 8004060:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004064:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004066:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800406a:	f7fc fca7 	bl	80009bc <__aeabi_dcmplt>
 800406e:	2800      	cmp	r0, #0
 8004070:	f040 8292 	bne.w	8004598 <_dtoa_r+0x998>
 8004074:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8004078:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800407c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800407e:	2b00      	cmp	r3, #0
 8004080:	f2c0 8153 	blt.w	800432a <_dtoa_r+0x72a>
 8004084:	f1b9 0f0e 	cmp.w	r9, #14
 8004088:	f300 814f 	bgt.w	800432a <_dtoa_r+0x72a>
 800408c:	4b45      	ldr	r3, [pc, #276]	; (80041a4 <_dtoa_r+0x5a4>)
 800408e:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8004092:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004096:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800409a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800409c:	2b00      	cmp	r3, #0
 800409e:	f280 80db 	bge.w	8004258 <_dtoa_r+0x658>
 80040a2:	9b02      	ldr	r3, [sp, #8]
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	f300 80d7 	bgt.w	8004258 <_dtoa_r+0x658>
 80040aa:	f040 8274 	bne.w	8004596 <_dtoa_r+0x996>
 80040ae:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80040b2:	2200      	movs	r2, #0
 80040b4:	4b40      	ldr	r3, [pc, #256]	; (80041b8 <_dtoa_r+0x5b8>)
 80040b6:	f7fc fa0f 	bl	80004d8 <__aeabi_dmul>
 80040ba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80040be:	f7fc fc91 	bl	80009e4 <__aeabi_dcmpge>
 80040c2:	9c02      	ldr	r4, [sp, #8]
 80040c4:	4626      	mov	r6, r4
 80040c6:	2800      	cmp	r0, #0
 80040c8:	f040 824a 	bne.w	8004560 <_dtoa_r+0x960>
 80040cc:	2331      	movs	r3, #49	; 0x31
 80040ce:	9f08      	ldr	r7, [sp, #32]
 80040d0:	f109 0901 	add.w	r9, r9, #1
 80040d4:	f807 3b01 	strb.w	r3, [r7], #1
 80040d8:	e246      	b.n	8004568 <_dtoa_r+0x968>
 80040da:	07e2      	lsls	r2, r4, #31
 80040dc:	d505      	bpl.n	80040ea <_dtoa_r+0x4ea>
 80040de:	e9d6 2300 	ldrd	r2, r3, [r6]
 80040e2:	f7fc f9f9 	bl	80004d8 <__aeabi_dmul>
 80040e6:	2301      	movs	r3, #1
 80040e8:	3701      	adds	r7, #1
 80040ea:	1064      	asrs	r4, r4, #1
 80040ec:	3608      	adds	r6, #8
 80040ee:	e76d      	b.n	8003fcc <_dtoa_r+0x3cc>
 80040f0:	2702      	movs	r7, #2
 80040f2:	e770      	b.n	8003fd6 <_dtoa_r+0x3d6>
 80040f4:	46c8      	mov	r8, r9
 80040f6:	9c02      	ldr	r4, [sp, #8]
 80040f8:	e78f      	b.n	800401a <_dtoa_r+0x41a>
 80040fa:	9908      	ldr	r1, [sp, #32]
 80040fc:	4b29      	ldr	r3, [pc, #164]	; (80041a4 <_dtoa_r+0x5a4>)
 80040fe:	4421      	add	r1, r4
 8004100:	9112      	str	r1, [sp, #72]	; 0x48
 8004102:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004104:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004108:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800410c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8004110:	2900      	cmp	r1, #0
 8004112:	d055      	beq.n	80041c0 <_dtoa_r+0x5c0>
 8004114:	2000      	movs	r0, #0
 8004116:	4929      	ldr	r1, [pc, #164]	; (80041bc <_dtoa_r+0x5bc>)
 8004118:	f7fc fb08 	bl	800072c <__aeabi_ddiv>
 800411c:	463b      	mov	r3, r7
 800411e:	4632      	mov	r2, r6
 8004120:	f7fc f822 	bl	8000168 <__aeabi_dsub>
 8004124:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004128:	9f08      	ldr	r7, [sp, #32]
 800412a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800412e:	f7fc fc83 	bl	8000a38 <__aeabi_d2iz>
 8004132:	4604      	mov	r4, r0
 8004134:	f7fc f966 	bl	8000404 <__aeabi_i2d>
 8004138:	4602      	mov	r2, r0
 800413a:	460b      	mov	r3, r1
 800413c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004140:	f7fc f812 	bl	8000168 <__aeabi_dsub>
 8004144:	4602      	mov	r2, r0
 8004146:	460b      	mov	r3, r1
 8004148:	3430      	adds	r4, #48	; 0x30
 800414a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800414e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004152:	f807 4b01 	strb.w	r4, [r7], #1
 8004156:	f7fc fc31 	bl	80009bc <__aeabi_dcmplt>
 800415a:	2800      	cmp	r0, #0
 800415c:	d174      	bne.n	8004248 <_dtoa_r+0x648>
 800415e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004162:	2000      	movs	r0, #0
 8004164:	4911      	ldr	r1, [pc, #68]	; (80041ac <_dtoa_r+0x5ac>)
 8004166:	f7fb ffff 	bl	8000168 <__aeabi_dsub>
 800416a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800416e:	f7fc fc25 	bl	80009bc <__aeabi_dcmplt>
 8004172:	2800      	cmp	r0, #0
 8004174:	f040 80b6 	bne.w	80042e4 <_dtoa_r+0x6e4>
 8004178:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800417a:	429f      	cmp	r7, r3
 800417c:	f43f af7a 	beq.w	8004074 <_dtoa_r+0x474>
 8004180:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004184:	2200      	movs	r2, #0
 8004186:	4b0a      	ldr	r3, [pc, #40]	; (80041b0 <_dtoa_r+0x5b0>)
 8004188:	f7fc f9a6 	bl	80004d8 <__aeabi_dmul>
 800418c:	2200      	movs	r2, #0
 800418e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004192:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004196:	4b06      	ldr	r3, [pc, #24]	; (80041b0 <_dtoa_r+0x5b0>)
 8004198:	f7fc f99e 	bl	80004d8 <__aeabi_dmul>
 800419c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80041a0:	e7c3      	b.n	800412a <_dtoa_r+0x52a>
 80041a2:	bf00      	nop
 80041a4:	080060e0 	.word	0x080060e0
 80041a8:	080060b8 	.word	0x080060b8
 80041ac:	3ff00000 	.word	0x3ff00000
 80041b0:	40240000 	.word	0x40240000
 80041b4:	401c0000 	.word	0x401c0000
 80041b8:	40140000 	.word	0x40140000
 80041bc:	3fe00000 	.word	0x3fe00000
 80041c0:	4630      	mov	r0, r6
 80041c2:	4639      	mov	r1, r7
 80041c4:	f7fc f988 	bl	80004d8 <__aeabi_dmul>
 80041c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80041ca:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80041ce:	9c08      	ldr	r4, [sp, #32]
 80041d0:	9314      	str	r3, [sp, #80]	; 0x50
 80041d2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80041d6:	f7fc fc2f 	bl	8000a38 <__aeabi_d2iz>
 80041da:	9015      	str	r0, [sp, #84]	; 0x54
 80041dc:	f7fc f912 	bl	8000404 <__aeabi_i2d>
 80041e0:	4602      	mov	r2, r0
 80041e2:	460b      	mov	r3, r1
 80041e4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80041e8:	f7fb ffbe 	bl	8000168 <__aeabi_dsub>
 80041ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80041ee:	4606      	mov	r6, r0
 80041f0:	3330      	adds	r3, #48	; 0x30
 80041f2:	f804 3b01 	strb.w	r3, [r4], #1
 80041f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80041f8:	460f      	mov	r7, r1
 80041fa:	429c      	cmp	r4, r3
 80041fc:	f04f 0200 	mov.w	r2, #0
 8004200:	d124      	bne.n	800424c <_dtoa_r+0x64c>
 8004202:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004206:	4bb3      	ldr	r3, [pc, #716]	; (80044d4 <_dtoa_r+0x8d4>)
 8004208:	f7fb ffb0 	bl	800016c <__adddf3>
 800420c:	4602      	mov	r2, r0
 800420e:	460b      	mov	r3, r1
 8004210:	4630      	mov	r0, r6
 8004212:	4639      	mov	r1, r7
 8004214:	f7fc fbf0 	bl	80009f8 <__aeabi_dcmpgt>
 8004218:	2800      	cmp	r0, #0
 800421a:	d162      	bne.n	80042e2 <_dtoa_r+0x6e2>
 800421c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004220:	2000      	movs	r0, #0
 8004222:	49ac      	ldr	r1, [pc, #688]	; (80044d4 <_dtoa_r+0x8d4>)
 8004224:	f7fb ffa0 	bl	8000168 <__aeabi_dsub>
 8004228:	4602      	mov	r2, r0
 800422a:	460b      	mov	r3, r1
 800422c:	4630      	mov	r0, r6
 800422e:	4639      	mov	r1, r7
 8004230:	f7fc fbc4 	bl	80009bc <__aeabi_dcmplt>
 8004234:	2800      	cmp	r0, #0
 8004236:	f43f af1d 	beq.w	8004074 <_dtoa_r+0x474>
 800423a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800423c:	1e7b      	subs	r3, r7, #1
 800423e:	9314      	str	r3, [sp, #80]	; 0x50
 8004240:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8004244:	2b30      	cmp	r3, #48	; 0x30
 8004246:	d0f8      	beq.n	800423a <_dtoa_r+0x63a>
 8004248:	46c1      	mov	r9, r8
 800424a:	e03a      	b.n	80042c2 <_dtoa_r+0x6c2>
 800424c:	4ba2      	ldr	r3, [pc, #648]	; (80044d8 <_dtoa_r+0x8d8>)
 800424e:	f7fc f943 	bl	80004d8 <__aeabi_dmul>
 8004252:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004256:	e7bc      	b.n	80041d2 <_dtoa_r+0x5d2>
 8004258:	9f08      	ldr	r7, [sp, #32]
 800425a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800425e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004262:	f7fc fa63 	bl	800072c <__aeabi_ddiv>
 8004266:	f7fc fbe7 	bl	8000a38 <__aeabi_d2iz>
 800426a:	4604      	mov	r4, r0
 800426c:	f7fc f8ca 	bl	8000404 <__aeabi_i2d>
 8004270:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004274:	f7fc f930 	bl	80004d8 <__aeabi_dmul>
 8004278:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800427c:	460b      	mov	r3, r1
 800427e:	4602      	mov	r2, r0
 8004280:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004284:	f7fb ff70 	bl	8000168 <__aeabi_dsub>
 8004288:	f807 6b01 	strb.w	r6, [r7], #1
 800428c:	9e08      	ldr	r6, [sp, #32]
 800428e:	9b02      	ldr	r3, [sp, #8]
 8004290:	1bbe      	subs	r6, r7, r6
 8004292:	42b3      	cmp	r3, r6
 8004294:	d13a      	bne.n	800430c <_dtoa_r+0x70c>
 8004296:	4602      	mov	r2, r0
 8004298:	460b      	mov	r3, r1
 800429a:	f7fb ff67 	bl	800016c <__adddf3>
 800429e:	4602      	mov	r2, r0
 80042a0:	460b      	mov	r3, r1
 80042a2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80042a6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80042aa:	f7fc fba5 	bl	80009f8 <__aeabi_dcmpgt>
 80042ae:	bb58      	cbnz	r0, 8004308 <_dtoa_r+0x708>
 80042b0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80042b4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80042b8:	f7fc fb76 	bl	80009a8 <__aeabi_dcmpeq>
 80042bc:	b108      	cbz	r0, 80042c2 <_dtoa_r+0x6c2>
 80042be:	07e1      	lsls	r1, r4, #31
 80042c0:	d422      	bmi.n	8004308 <_dtoa_r+0x708>
 80042c2:	4628      	mov	r0, r5
 80042c4:	4651      	mov	r1, sl
 80042c6:	f000 faf1 	bl	80048ac <_Bfree>
 80042ca:	2300      	movs	r3, #0
 80042cc:	703b      	strb	r3, [r7, #0]
 80042ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80042d0:	f109 0001 	add.w	r0, r9, #1
 80042d4:	6018      	str	r0, [r3, #0]
 80042d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80042d8:	2b00      	cmp	r3, #0
 80042da:	f43f acdf 	beq.w	8003c9c <_dtoa_r+0x9c>
 80042de:	601f      	str	r7, [r3, #0]
 80042e0:	e4dc      	b.n	8003c9c <_dtoa_r+0x9c>
 80042e2:	4627      	mov	r7, r4
 80042e4:	463b      	mov	r3, r7
 80042e6:	461f      	mov	r7, r3
 80042e8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80042ec:	2a39      	cmp	r2, #57	; 0x39
 80042ee:	d107      	bne.n	8004300 <_dtoa_r+0x700>
 80042f0:	9a08      	ldr	r2, [sp, #32]
 80042f2:	429a      	cmp	r2, r3
 80042f4:	d1f7      	bne.n	80042e6 <_dtoa_r+0x6e6>
 80042f6:	2230      	movs	r2, #48	; 0x30
 80042f8:	9908      	ldr	r1, [sp, #32]
 80042fa:	f108 0801 	add.w	r8, r8, #1
 80042fe:	700a      	strb	r2, [r1, #0]
 8004300:	781a      	ldrb	r2, [r3, #0]
 8004302:	3201      	adds	r2, #1
 8004304:	701a      	strb	r2, [r3, #0]
 8004306:	e79f      	b.n	8004248 <_dtoa_r+0x648>
 8004308:	46c8      	mov	r8, r9
 800430a:	e7eb      	b.n	80042e4 <_dtoa_r+0x6e4>
 800430c:	2200      	movs	r2, #0
 800430e:	4b72      	ldr	r3, [pc, #456]	; (80044d8 <_dtoa_r+0x8d8>)
 8004310:	f7fc f8e2 	bl	80004d8 <__aeabi_dmul>
 8004314:	4602      	mov	r2, r0
 8004316:	460b      	mov	r3, r1
 8004318:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800431c:	2200      	movs	r2, #0
 800431e:	2300      	movs	r3, #0
 8004320:	f7fc fb42 	bl	80009a8 <__aeabi_dcmpeq>
 8004324:	2800      	cmp	r0, #0
 8004326:	d098      	beq.n	800425a <_dtoa_r+0x65a>
 8004328:	e7cb      	b.n	80042c2 <_dtoa_r+0x6c2>
 800432a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800432c:	2a00      	cmp	r2, #0
 800432e:	f000 80cd 	beq.w	80044cc <_dtoa_r+0x8cc>
 8004332:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8004334:	2a01      	cmp	r2, #1
 8004336:	f300 80af 	bgt.w	8004498 <_dtoa_r+0x898>
 800433a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800433c:	2a00      	cmp	r2, #0
 800433e:	f000 80a7 	beq.w	8004490 <_dtoa_r+0x890>
 8004342:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8004346:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004348:	9f06      	ldr	r7, [sp, #24]
 800434a:	9a06      	ldr	r2, [sp, #24]
 800434c:	2101      	movs	r1, #1
 800434e:	441a      	add	r2, r3
 8004350:	9206      	str	r2, [sp, #24]
 8004352:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004354:	4628      	mov	r0, r5
 8004356:	441a      	add	r2, r3
 8004358:	9209      	str	r2, [sp, #36]	; 0x24
 800435a:	f000 fb61 	bl	8004a20 <__i2b>
 800435e:	4606      	mov	r6, r0
 8004360:	2f00      	cmp	r7, #0
 8004362:	dd0c      	ble.n	800437e <_dtoa_r+0x77e>
 8004364:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004366:	2b00      	cmp	r3, #0
 8004368:	dd09      	ble.n	800437e <_dtoa_r+0x77e>
 800436a:	42bb      	cmp	r3, r7
 800436c:	bfa8      	it	ge
 800436e:	463b      	movge	r3, r7
 8004370:	9a06      	ldr	r2, [sp, #24]
 8004372:	1aff      	subs	r7, r7, r3
 8004374:	1ad2      	subs	r2, r2, r3
 8004376:	9206      	str	r2, [sp, #24]
 8004378:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800437a:	1ad3      	subs	r3, r2, r3
 800437c:	9309      	str	r3, [sp, #36]	; 0x24
 800437e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004380:	b1f3      	cbz	r3, 80043c0 <_dtoa_r+0x7c0>
 8004382:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004384:	2b00      	cmp	r3, #0
 8004386:	f000 80a9 	beq.w	80044dc <_dtoa_r+0x8dc>
 800438a:	2c00      	cmp	r4, #0
 800438c:	dd10      	ble.n	80043b0 <_dtoa_r+0x7b0>
 800438e:	4631      	mov	r1, r6
 8004390:	4622      	mov	r2, r4
 8004392:	4628      	mov	r0, r5
 8004394:	f000 fbfe 	bl	8004b94 <__pow5mult>
 8004398:	4652      	mov	r2, sl
 800439a:	4601      	mov	r1, r0
 800439c:	4606      	mov	r6, r0
 800439e:	4628      	mov	r0, r5
 80043a0:	f000 fb54 	bl	8004a4c <__multiply>
 80043a4:	4680      	mov	r8, r0
 80043a6:	4651      	mov	r1, sl
 80043a8:	4628      	mov	r0, r5
 80043aa:	f000 fa7f 	bl	80048ac <_Bfree>
 80043ae:	46c2      	mov	sl, r8
 80043b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80043b2:	1b1a      	subs	r2, r3, r4
 80043b4:	d004      	beq.n	80043c0 <_dtoa_r+0x7c0>
 80043b6:	4651      	mov	r1, sl
 80043b8:	4628      	mov	r0, r5
 80043ba:	f000 fbeb 	bl	8004b94 <__pow5mult>
 80043be:	4682      	mov	sl, r0
 80043c0:	2101      	movs	r1, #1
 80043c2:	4628      	mov	r0, r5
 80043c4:	f000 fb2c 	bl	8004a20 <__i2b>
 80043c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80043ca:	4604      	mov	r4, r0
 80043cc:	2b00      	cmp	r3, #0
 80043ce:	f340 8087 	ble.w	80044e0 <_dtoa_r+0x8e0>
 80043d2:	461a      	mov	r2, r3
 80043d4:	4601      	mov	r1, r0
 80043d6:	4628      	mov	r0, r5
 80043d8:	f000 fbdc 	bl	8004b94 <__pow5mult>
 80043dc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80043de:	4604      	mov	r4, r0
 80043e0:	2b01      	cmp	r3, #1
 80043e2:	f340 8080 	ble.w	80044e6 <_dtoa_r+0x8e6>
 80043e6:	f04f 0800 	mov.w	r8, #0
 80043ea:	6923      	ldr	r3, [r4, #16]
 80043ec:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80043f0:	6918      	ldr	r0, [r3, #16]
 80043f2:	f000 fac7 	bl	8004984 <__hi0bits>
 80043f6:	f1c0 0020 	rsb	r0, r0, #32
 80043fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043fc:	4418      	add	r0, r3
 80043fe:	f010 001f 	ands.w	r0, r0, #31
 8004402:	f000 8092 	beq.w	800452a <_dtoa_r+0x92a>
 8004406:	f1c0 0320 	rsb	r3, r0, #32
 800440a:	2b04      	cmp	r3, #4
 800440c:	f340 808a 	ble.w	8004524 <_dtoa_r+0x924>
 8004410:	f1c0 001c 	rsb	r0, r0, #28
 8004414:	9b06      	ldr	r3, [sp, #24]
 8004416:	4407      	add	r7, r0
 8004418:	4403      	add	r3, r0
 800441a:	9306      	str	r3, [sp, #24]
 800441c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800441e:	4403      	add	r3, r0
 8004420:	9309      	str	r3, [sp, #36]	; 0x24
 8004422:	9b06      	ldr	r3, [sp, #24]
 8004424:	2b00      	cmp	r3, #0
 8004426:	dd05      	ble.n	8004434 <_dtoa_r+0x834>
 8004428:	4651      	mov	r1, sl
 800442a:	461a      	mov	r2, r3
 800442c:	4628      	mov	r0, r5
 800442e:	f000 fc0b 	bl	8004c48 <__lshift>
 8004432:	4682      	mov	sl, r0
 8004434:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004436:	2b00      	cmp	r3, #0
 8004438:	dd05      	ble.n	8004446 <_dtoa_r+0x846>
 800443a:	4621      	mov	r1, r4
 800443c:	461a      	mov	r2, r3
 800443e:	4628      	mov	r0, r5
 8004440:	f000 fc02 	bl	8004c48 <__lshift>
 8004444:	4604      	mov	r4, r0
 8004446:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004448:	2b00      	cmp	r3, #0
 800444a:	d070      	beq.n	800452e <_dtoa_r+0x92e>
 800444c:	4621      	mov	r1, r4
 800444e:	4650      	mov	r0, sl
 8004450:	f000 fc66 	bl	8004d20 <__mcmp>
 8004454:	2800      	cmp	r0, #0
 8004456:	da6a      	bge.n	800452e <_dtoa_r+0x92e>
 8004458:	2300      	movs	r3, #0
 800445a:	4651      	mov	r1, sl
 800445c:	220a      	movs	r2, #10
 800445e:	4628      	mov	r0, r5
 8004460:	f000 fa46 	bl	80048f0 <__multadd>
 8004464:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004466:	4682      	mov	sl, r0
 8004468:	f109 39ff 	add.w	r9, r9, #4294967295
 800446c:	2b00      	cmp	r3, #0
 800446e:	f000 8193 	beq.w	8004798 <_dtoa_r+0xb98>
 8004472:	4631      	mov	r1, r6
 8004474:	2300      	movs	r3, #0
 8004476:	220a      	movs	r2, #10
 8004478:	4628      	mov	r0, r5
 800447a:	f000 fa39 	bl	80048f0 <__multadd>
 800447e:	f1bb 0f00 	cmp.w	fp, #0
 8004482:	4606      	mov	r6, r0
 8004484:	f300 8093 	bgt.w	80045ae <_dtoa_r+0x9ae>
 8004488:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800448a:	2b02      	cmp	r3, #2
 800448c:	dc57      	bgt.n	800453e <_dtoa_r+0x93e>
 800448e:	e08e      	b.n	80045ae <_dtoa_r+0x9ae>
 8004490:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004492:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8004496:	e756      	b.n	8004346 <_dtoa_r+0x746>
 8004498:	9b02      	ldr	r3, [sp, #8]
 800449a:	1e5c      	subs	r4, r3, #1
 800449c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800449e:	42a3      	cmp	r3, r4
 80044a0:	bfb7      	itett	lt
 80044a2:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 80044a4:	1b1c      	subge	r4, r3, r4
 80044a6:	1ae2      	sublt	r2, r4, r3
 80044a8:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 80044aa:	bfbe      	ittt	lt
 80044ac:	940a      	strlt	r4, [sp, #40]	; 0x28
 80044ae:	189b      	addlt	r3, r3, r2
 80044b0:	930e      	strlt	r3, [sp, #56]	; 0x38
 80044b2:	9b02      	ldr	r3, [sp, #8]
 80044b4:	bfb8      	it	lt
 80044b6:	2400      	movlt	r4, #0
 80044b8:	2b00      	cmp	r3, #0
 80044ba:	bfbb      	ittet	lt
 80044bc:	9b06      	ldrlt	r3, [sp, #24]
 80044be:	9a02      	ldrlt	r2, [sp, #8]
 80044c0:	9f06      	ldrge	r7, [sp, #24]
 80044c2:	1a9f      	sublt	r7, r3, r2
 80044c4:	bfac      	ite	ge
 80044c6:	9b02      	ldrge	r3, [sp, #8]
 80044c8:	2300      	movlt	r3, #0
 80044ca:	e73e      	b.n	800434a <_dtoa_r+0x74a>
 80044cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80044ce:	9f06      	ldr	r7, [sp, #24]
 80044d0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80044d2:	e745      	b.n	8004360 <_dtoa_r+0x760>
 80044d4:	3fe00000 	.word	0x3fe00000
 80044d8:	40240000 	.word	0x40240000
 80044dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80044de:	e76a      	b.n	80043b6 <_dtoa_r+0x7b6>
 80044e0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80044e2:	2b01      	cmp	r3, #1
 80044e4:	dc19      	bgt.n	800451a <_dtoa_r+0x91a>
 80044e6:	9b04      	ldr	r3, [sp, #16]
 80044e8:	b9bb      	cbnz	r3, 800451a <_dtoa_r+0x91a>
 80044ea:	9b05      	ldr	r3, [sp, #20]
 80044ec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80044f0:	b99b      	cbnz	r3, 800451a <_dtoa_r+0x91a>
 80044f2:	9b05      	ldr	r3, [sp, #20]
 80044f4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80044f8:	0d1b      	lsrs	r3, r3, #20
 80044fa:	051b      	lsls	r3, r3, #20
 80044fc:	b183      	cbz	r3, 8004520 <_dtoa_r+0x920>
 80044fe:	f04f 0801 	mov.w	r8, #1
 8004502:	9b06      	ldr	r3, [sp, #24]
 8004504:	3301      	adds	r3, #1
 8004506:	9306      	str	r3, [sp, #24]
 8004508:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800450a:	3301      	adds	r3, #1
 800450c:	9309      	str	r3, [sp, #36]	; 0x24
 800450e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004510:	2b00      	cmp	r3, #0
 8004512:	f47f af6a 	bne.w	80043ea <_dtoa_r+0x7ea>
 8004516:	2001      	movs	r0, #1
 8004518:	e76f      	b.n	80043fa <_dtoa_r+0x7fa>
 800451a:	f04f 0800 	mov.w	r8, #0
 800451e:	e7f6      	b.n	800450e <_dtoa_r+0x90e>
 8004520:	4698      	mov	r8, r3
 8004522:	e7f4      	b.n	800450e <_dtoa_r+0x90e>
 8004524:	f43f af7d 	beq.w	8004422 <_dtoa_r+0x822>
 8004528:	4618      	mov	r0, r3
 800452a:	301c      	adds	r0, #28
 800452c:	e772      	b.n	8004414 <_dtoa_r+0x814>
 800452e:	9b02      	ldr	r3, [sp, #8]
 8004530:	2b00      	cmp	r3, #0
 8004532:	dc36      	bgt.n	80045a2 <_dtoa_r+0x9a2>
 8004534:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004536:	2b02      	cmp	r3, #2
 8004538:	dd33      	ble.n	80045a2 <_dtoa_r+0x9a2>
 800453a:	f8dd b008 	ldr.w	fp, [sp, #8]
 800453e:	f1bb 0f00 	cmp.w	fp, #0
 8004542:	d10d      	bne.n	8004560 <_dtoa_r+0x960>
 8004544:	4621      	mov	r1, r4
 8004546:	465b      	mov	r3, fp
 8004548:	2205      	movs	r2, #5
 800454a:	4628      	mov	r0, r5
 800454c:	f000 f9d0 	bl	80048f0 <__multadd>
 8004550:	4601      	mov	r1, r0
 8004552:	4604      	mov	r4, r0
 8004554:	4650      	mov	r0, sl
 8004556:	f000 fbe3 	bl	8004d20 <__mcmp>
 800455a:	2800      	cmp	r0, #0
 800455c:	f73f adb6 	bgt.w	80040cc <_dtoa_r+0x4cc>
 8004560:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004562:	9f08      	ldr	r7, [sp, #32]
 8004564:	ea6f 0903 	mvn.w	r9, r3
 8004568:	f04f 0800 	mov.w	r8, #0
 800456c:	4621      	mov	r1, r4
 800456e:	4628      	mov	r0, r5
 8004570:	f000 f99c 	bl	80048ac <_Bfree>
 8004574:	2e00      	cmp	r6, #0
 8004576:	f43f aea4 	beq.w	80042c2 <_dtoa_r+0x6c2>
 800457a:	f1b8 0f00 	cmp.w	r8, #0
 800457e:	d005      	beq.n	800458c <_dtoa_r+0x98c>
 8004580:	45b0      	cmp	r8, r6
 8004582:	d003      	beq.n	800458c <_dtoa_r+0x98c>
 8004584:	4641      	mov	r1, r8
 8004586:	4628      	mov	r0, r5
 8004588:	f000 f990 	bl	80048ac <_Bfree>
 800458c:	4631      	mov	r1, r6
 800458e:	4628      	mov	r0, r5
 8004590:	f000 f98c 	bl	80048ac <_Bfree>
 8004594:	e695      	b.n	80042c2 <_dtoa_r+0x6c2>
 8004596:	2400      	movs	r4, #0
 8004598:	4626      	mov	r6, r4
 800459a:	e7e1      	b.n	8004560 <_dtoa_r+0x960>
 800459c:	46c1      	mov	r9, r8
 800459e:	4626      	mov	r6, r4
 80045a0:	e594      	b.n	80040cc <_dtoa_r+0x4cc>
 80045a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80045a4:	f8dd b008 	ldr.w	fp, [sp, #8]
 80045a8:	2b00      	cmp	r3, #0
 80045aa:	f000 80fc 	beq.w	80047a6 <_dtoa_r+0xba6>
 80045ae:	2f00      	cmp	r7, #0
 80045b0:	dd05      	ble.n	80045be <_dtoa_r+0x9be>
 80045b2:	4631      	mov	r1, r6
 80045b4:	463a      	mov	r2, r7
 80045b6:	4628      	mov	r0, r5
 80045b8:	f000 fb46 	bl	8004c48 <__lshift>
 80045bc:	4606      	mov	r6, r0
 80045be:	f1b8 0f00 	cmp.w	r8, #0
 80045c2:	d05c      	beq.n	800467e <_dtoa_r+0xa7e>
 80045c4:	4628      	mov	r0, r5
 80045c6:	6871      	ldr	r1, [r6, #4]
 80045c8:	f000 f930 	bl	800482c <_Balloc>
 80045cc:	4607      	mov	r7, r0
 80045ce:	b928      	cbnz	r0, 80045dc <_dtoa_r+0x9dc>
 80045d0:	4602      	mov	r2, r0
 80045d2:	f240 21ea 	movw	r1, #746	; 0x2ea
 80045d6:	4b7e      	ldr	r3, [pc, #504]	; (80047d0 <_dtoa_r+0xbd0>)
 80045d8:	f7ff bb26 	b.w	8003c28 <_dtoa_r+0x28>
 80045dc:	6932      	ldr	r2, [r6, #16]
 80045de:	f106 010c 	add.w	r1, r6, #12
 80045e2:	3202      	adds	r2, #2
 80045e4:	0092      	lsls	r2, r2, #2
 80045e6:	300c      	adds	r0, #12
 80045e8:	f000 f912 	bl	8004810 <memcpy>
 80045ec:	2201      	movs	r2, #1
 80045ee:	4639      	mov	r1, r7
 80045f0:	4628      	mov	r0, r5
 80045f2:	f000 fb29 	bl	8004c48 <__lshift>
 80045f6:	46b0      	mov	r8, r6
 80045f8:	4606      	mov	r6, r0
 80045fa:	9b08      	ldr	r3, [sp, #32]
 80045fc:	3301      	adds	r3, #1
 80045fe:	9302      	str	r3, [sp, #8]
 8004600:	9b08      	ldr	r3, [sp, #32]
 8004602:	445b      	add	r3, fp
 8004604:	930a      	str	r3, [sp, #40]	; 0x28
 8004606:	9b04      	ldr	r3, [sp, #16]
 8004608:	f003 0301 	and.w	r3, r3, #1
 800460c:	9309      	str	r3, [sp, #36]	; 0x24
 800460e:	9b02      	ldr	r3, [sp, #8]
 8004610:	4621      	mov	r1, r4
 8004612:	4650      	mov	r0, sl
 8004614:	f103 3bff 	add.w	fp, r3, #4294967295
 8004618:	f7ff fa64 	bl	8003ae4 <quorem>
 800461c:	4603      	mov	r3, r0
 800461e:	4641      	mov	r1, r8
 8004620:	3330      	adds	r3, #48	; 0x30
 8004622:	9004      	str	r0, [sp, #16]
 8004624:	4650      	mov	r0, sl
 8004626:	930b      	str	r3, [sp, #44]	; 0x2c
 8004628:	f000 fb7a 	bl	8004d20 <__mcmp>
 800462c:	4632      	mov	r2, r6
 800462e:	9006      	str	r0, [sp, #24]
 8004630:	4621      	mov	r1, r4
 8004632:	4628      	mov	r0, r5
 8004634:	f000 fb90 	bl	8004d58 <__mdiff>
 8004638:	68c2      	ldr	r2, [r0, #12]
 800463a:	4607      	mov	r7, r0
 800463c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800463e:	bb02      	cbnz	r2, 8004682 <_dtoa_r+0xa82>
 8004640:	4601      	mov	r1, r0
 8004642:	4650      	mov	r0, sl
 8004644:	f000 fb6c 	bl	8004d20 <__mcmp>
 8004648:	4602      	mov	r2, r0
 800464a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800464c:	4639      	mov	r1, r7
 800464e:	4628      	mov	r0, r5
 8004650:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 8004654:	f000 f92a 	bl	80048ac <_Bfree>
 8004658:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800465a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800465c:	9f02      	ldr	r7, [sp, #8]
 800465e:	ea43 0102 	orr.w	r1, r3, r2
 8004662:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004664:	430b      	orrs	r3, r1
 8004666:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004668:	d10d      	bne.n	8004686 <_dtoa_r+0xa86>
 800466a:	2b39      	cmp	r3, #57	; 0x39
 800466c:	d027      	beq.n	80046be <_dtoa_r+0xabe>
 800466e:	9a06      	ldr	r2, [sp, #24]
 8004670:	2a00      	cmp	r2, #0
 8004672:	dd01      	ble.n	8004678 <_dtoa_r+0xa78>
 8004674:	9b04      	ldr	r3, [sp, #16]
 8004676:	3331      	adds	r3, #49	; 0x31
 8004678:	f88b 3000 	strb.w	r3, [fp]
 800467c:	e776      	b.n	800456c <_dtoa_r+0x96c>
 800467e:	4630      	mov	r0, r6
 8004680:	e7b9      	b.n	80045f6 <_dtoa_r+0x9f6>
 8004682:	2201      	movs	r2, #1
 8004684:	e7e2      	b.n	800464c <_dtoa_r+0xa4c>
 8004686:	9906      	ldr	r1, [sp, #24]
 8004688:	2900      	cmp	r1, #0
 800468a:	db04      	blt.n	8004696 <_dtoa_r+0xa96>
 800468c:	9822      	ldr	r0, [sp, #136]	; 0x88
 800468e:	4301      	orrs	r1, r0
 8004690:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004692:	4301      	orrs	r1, r0
 8004694:	d120      	bne.n	80046d8 <_dtoa_r+0xad8>
 8004696:	2a00      	cmp	r2, #0
 8004698:	ddee      	ble.n	8004678 <_dtoa_r+0xa78>
 800469a:	4651      	mov	r1, sl
 800469c:	2201      	movs	r2, #1
 800469e:	4628      	mov	r0, r5
 80046a0:	9302      	str	r3, [sp, #8]
 80046a2:	f000 fad1 	bl	8004c48 <__lshift>
 80046a6:	4621      	mov	r1, r4
 80046a8:	4682      	mov	sl, r0
 80046aa:	f000 fb39 	bl	8004d20 <__mcmp>
 80046ae:	2800      	cmp	r0, #0
 80046b0:	9b02      	ldr	r3, [sp, #8]
 80046b2:	dc02      	bgt.n	80046ba <_dtoa_r+0xaba>
 80046b4:	d1e0      	bne.n	8004678 <_dtoa_r+0xa78>
 80046b6:	07da      	lsls	r2, r3, #31
 80046b8:	d5de      	bpl.n	8004678 <_dtoa_r+0xa78>
 80046ba:	2b39      	cmp	r3, #57	; 0x39
 80046bc:	d1da      	bne.n	8004674 <_dtoa_r+0xa74>
 80046be:	2339      	movs	r3, #57	; 0x39
 80046c0:	f88b 3000 	strb.w	r3, [fp]
 80046c4:	463b      	mov	r3, r7
 80046c6:	461f      	mov	r7, r3
 80046c8:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 80046cc:	3b01      	subs	r3, #1
 80046ce:	2a39      	cmp	r2, #57	; 0x39
 80046d0:	d050      	beq.n	8004774 <_dtoa_r+0xb74>
 80046d2:	3201      	adds	r2, #1
 80046d4:	701a      	strb	r2, [r3, #0]
 80046d6:	e749      	b.n	800456c <_dtoa_r+0x96c>
 80046d8:	2a00      	cmp	r2, #0
 80046da:	dd03      	ble.n	80046e4 <_dtoa_r+0xae4>
 80046dc:	2b39      	cmp	r3, #57	; 0x39
 80046de:	d0ee      	beq.n	80046be <_dtoa_r+0xabe>
 80046e0:	3301      	adds	r3, #1
 80046e2:	e7c9      	b.n	8004678 <_dtoa_r+0xa78>
 80046e4:	9a02      	ldr	r2, [sp, #8]
 80046e6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80046e8:	f802 3c01 	strb.w	r3, [r2, #-1]
 80046ec:	428a      	cmp	r2, r1
 80046ee:	d02a      	beq.n	8004746 <_dtoa_r+0xb46>
 80046f0:	4651      	mov	r1, sl
 80046f2:	2300      	movs	r3, #0
 80046f4:	220a      	movs	r2, #10
 80046f6:	4628      	mov	r0, r5
 80046f8:	f000 f8fa 	bl	80048f0 <__multadd>
 80046fc:	45b0      	cmp	r8, r6
 80046fe:	4682      	mov	sl, r0
 8004700:	f04f 0300 	mov.w	r3, #0
 8004704:	f04f 020a 	mov.w	r2, #10
 8004708:	4641      	mov	r1, r8
 800470a:	4628      	mov	r0, r5
 800470c:	d107      	bne.n	800471e <_dtoa_r+0xb1e>
 800470e:	f000 f8ef 	bl	80048f0 <__multadd>
 8004712:	4680      	mov	r8, r0
 8004714:	4606      	mov	r6, r0
 8004716:	9b02      	ldr	r3, [sp, #8]
 8004718:	3301      	adds	r3, #1
 800471a:	9302      	str	r3, [sp, #8]
 800471c:	e777      	b.n	800460e <_dtoa_r+0xa0e>
 800471e:	f000 f8e7 	bl	80048f0 <__multadd>
 8004722:	4631      	mov	r1, r6
 8004724:	4680      	mov	r8, r0
 8004726:	2300      	movs	r3, #0
 8004728:	220a      	movs	r2, #10
 800472a:	4628      	mov	r0, r5
 800472c:	f000 f8e0 	bl	80048f0 <__multadd>
 8004730:	4606      	mov	r6, r0
 8004732:	e7f0      	b.n	8004716 <_dtoa_r+0xb16>
 8004734:	f1bb 0f00 	cmp.w	fp, #0
 8004738:	bfcc      	ite	gt
 800473a:	465f      	movgt	r7, fp
 800473c:	2701      	movle	r7, #1
 800473e:	f04f 0800 	mov.w	r8, #0
 8004742:	9a08      	ldr	r2, [sp, #32]
 8004744:	4417      	add	r7, r2
 8004746:	4651      	mov	r1, sl
 8004748:	2201      	movs	r2, #1
 800474a:	4628      	mov	r0, r5
 800474c:	9302      	str	r3, [sp, #8]
 800474e:	f000 fa7b 	bl	8004c48 <__lshift>
 8004752:	4621      	mov	r1, r4
 8004754:	4682      	mov	sl, r0
 8004756:	f000 fae3 	bl	8004d20 <__mcmp>
 800475a:	2800      	cmp	r0, #0
 800475c:	dcb2      	bgt.n	80046c4 <_dtoa_r+0xac4>
 800475e:	d102      	bne.n	8004766 <_dtoa_r+0xb66>
 8004760:	9b02      	ldr	r3, [sp, #8]
 8004762:	07db      	lsls	r3, r3, #31
 8004764:	d4ae      	bmi.n	80046c4 <_dtoa_r+0xac4>
 8004766:	463b      	mov	r3, r7
 8004768:	461f      	mov	r7, r3
 800476a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800476e:	2a30      	cmp	r2, #48	; 0x30
 8004770:	d0fa      	beq.n	8004768 <_dtoa_r+0xb68>
 8004772:	e6fb      	b.n	800456c <_dtoa_r+0x96c>
 8004774:	9a08      	ldr	r2, [sp, #32]
 8004776:	429a      	cmp	r2, r3
 8004778:	d1a5      	bne.n	80046c6 <_dtoa_r+0xac6>
 800477a:	2331      	movs	r3, #49	; 0x31
 800477c:	f109 0901 	add.w	r9, r9, #1
 8004780:	7013      	strb	r3, [r2, #0]
 8004782:	e6f3      	b.n	800456c <_dtoa_r+0x96c>
 8004784:	4b13      	ldr	r3, [pc, #76]	; (80047d4 <_dtoa_r+0xbd4>)
 8004786:	f7ff baa7 	b.w	8003cd8 <_dtoa_r+0xd8>
 800478a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800478c:	2b00      	cmp	r3, #0
 800478e:	f47f aa80 	bne.w	8003c92 <_dtoa_r+0x92>
 8004792:	4b11      	ldr	r3, [pc, #68]	; (80047d8 <_dtoa_r+0xbd8>)
 8004794:	f7ff baa0 	b.w	8003cd8 <_dtoa_r+0xd8>
 8004798:	f1bb 0f00 	cmp.w	fp, #0
 800479c:	dc03      	bgt.n	80047a6 <_dtoa_r+0xba6>
 800479e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80047a0:	2b02      	cmp	r3, #2
 80047a2:	f73f aecc 	bgt.w	800453e <_dtoa_r+0x93e>
 80047a6:	9f08      	ldr	r7, [sp, #32]
 80047a8:	4621      	mov	r1, r4
 80047aa:	4650      	mov	r0, sl
 80047ac:	f7ff f99a 	bl	8003ae4 <quorem>
 80047b0:	9a08      	ldr	r2, [sp, #32]
 80047b2:	f100 0330 	add.w	r3, r0, #48	; 0x30
 80047b6:	f807 3b01 	strb.w	r3, [r7], #1
 80047ba:	1aba      	subs	r2, r7, r2
 80047bc:	4593      	cmp	fp, r2
 80047be:	ddb9      	ble.n	8004734 <_dtoa_r+0xb34>
 80047c0:	4651      	mov	r1, sl
 80047c2:	2300      	movs	r3, #0
 80047c4:	220a      	movs	r2, #10
 80047c6:	4628      	mov	r0, r5
 80047c8:	f000 f892 	bl	80048f0 <__multadd>
 80047cc:	4682      	mov	sl, r0
 80047ce:	e7eb      	b.n	80047a8 <_dtoa_r+0xba8>
 80047d0:	08006043 	.word	0x08006043
 80047d4:	08005f9c 	.word	0x08005f9c
 80047d8:	08005fc0 	.word	0x08005fc0

080047dc <_localeconv_r>:
 80047dc:	4800      	ldr	r0, [pc, #0]	; (80047e0 <_localeconv_r+0x4>)
 80047de:	4770      	bx	lr
 80047e0:	20000160 	.word	0x20000160

080047e4 <malloc>:
 80047e4:	4b02      	ldr	r3, [pc, #8]	; (80047f0 <malloc+0xc>)
 80047e6:	4601      	mov	r1, r0
 80047e8:	6818      	ldr	r0, [r3, #0]
 80047ea:	f000 bbfb 	b.w	8004fe4 <_malloc_r>
 80047ee:	bf00      	nop
 80047f0:	2000000c 	.word	0x2000000c

080047f4 <memchr>:
 80047f4:	4603      	mov	r3, r0
 80047f6:	b510      	push	{r4, lr}
 80047f8:	b2c9      	uxtb	r1, r1
 80047fa:	4402      	add	r2, r0
 80047fc:	4293      	cmp	r3, r2
 80047fe:	4618      	mov	r0, r3
 8004800:	d101      	bne.n	8004806 <memchr+0x12>
 8004802:	2000      	movs	r0, #0
 8004804:	e003      	b.n	800480e <memchr+0x1a>
 8004806:	7804      	ldrb	r4, [r0, #0]
 8004808:	3301      	adds	r3, #1
 800480a:	428c      	cmp	r4, r1
 800480c:	d1f6      	bne.n	80047fc <memchr+0x8>
 800480e:	bd10      	pop	{r4, pc}

08004810 <memcpy>:
 8004810:	440a      	add	r2, r1
 8004812:	4291      	cmp	r1, r2
 8004814:	f100 33ff 	add.w	r3, r0, #4294967295
 8004818:	d100      	bne.n	800481c <memcpy+0xc>
 800481a:	4770      	bx	lr
 800481c:	b510      	push	{r4, lr}
 800481e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004822:	4291      	cmp	r1, r2
 8004824:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004828:	d1f9      	bne.n	800481e <memcpy+0xe>
 800482a:	bd10      	pop	{r4, pc}

0800482c <_Balloc>:
 800482c:	b570      	push	{r4, r5, r6, lr}
 800482e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8004830:	4604      	mov	r4, r0
 8004832:	460d      	mov	r5, r1
 8004834:	b976      	cbnz	r6, 8004854 <_Balloc+0x28>
 8004836:	2010      	movs	r0, #16
 8004838:	f7ff ffd4 	bl	80047e4 <malloc>
 800483c:	4602      	mov	r2, r0
 800483e:	6260      	str	r0, [r4, #36]	; 0x24
 8004840:	b920      	cbnz	r0, 800484c <_Balloc+0x20>
 8004842:	2166      	movs	r1, #102	; 0x66
 8004844:	4b17      	ldr	r3, [pc, #92]	; (80048a4 <_Balloc+0x78>)
 8004846:	4818      	ldr	r0, [pc, #96]	; (80048a8 <_Balloc+0x7c>)
 8004848:	f000 fd92 	bl	8005370 <__assert_func>
 800484c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004850:	6006      	str	r6, [r0, #0]
 8004852:	60c6      	str	r6, [r0, #12]
 8004854:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8004856:	68f3      	ldr	r3, [r6, #12]
 8004858:	b183      	cbz	r3, 800487c <_Balloc+0x50>
 800485a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800485c:	68db      	ldr	r3, [r3, #12]
 800485e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004862:	b9b8      	cbnz	r0, 8004894 <_Balloc+0x68>
 8004864:	2101      	movs	r1, #1
 8004866:	fa01 f605 	lsl.w	r6, r1, r5
 800486a:	1d72      	adds	r2, r6, #5
 800486c:	4620      	mov	r0, r4
 800486e:	0092      	lsls	r2, r2, #2
 8004870:	f000 fb5e 	bl	8004f30 <_calloc_r>
 8004874:	b160      	cbz	r0, 8004890 <_Balloc+0x64>
 8004876:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800487a:	e00e      	b.n	800489a <_Balloc+0x6e>
 800487c:	2221      	movs	r2, #33	; 0x21
 800487e:	2104      	movs	r1, #4
 8004880:	4620      	mov	r0, r4
 8004882:	f000 fb55 	bl	8004f30 <_calloc_r>
 8004886:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004888:	60f0      	str	r0, [r6, #12]
 800488a:	68db      	ldr	r3, [r3, #12]
 800488c:	2b00      	cmp	r3, #0
 800488e:	d1e4      	bne.n	800485a <_Balloc+0x2e>
 8004890:	2000      	movs	r0, #0
 8004892:	bd70      	pop	{r4, r5, r6, pc}
 8004894:	6802      	ldr	r2, [r0, #0]
 8004896:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800489a:	2300      	movs	r3, #0
 800489c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80048a0:	e7f7      	b.n	8004892 <_Balloc+0x66>
 80048a2:	bf00      	nop
 80048a4:	08005fcd 	.word	0x08005fcd
 80048a8:	08006054 	.word	0x08006054

080048ac <_Bfree>:
 80048ac:	b570      	push	{r4, r5, r6, lr}
 80048ae:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80048b0:	4605      	mov	r5, r0
 80048b2:	460c      	mov	r4, r1
 80048b4:	b976      	cbnz	r6, 80048d4 <_Bfree+0x28>
 80048b6:	2010      	movs	r0, #16
 80048b8:	f7ff ff94 	bl	80047e4 <malloc>
 80048bc:	4602      	mov	r2, r0
 80048be:	6268      	str	r0, [r5, #36]	; 0x24
 80048c0:	b920      	cbnz	r0, 80048cc <_Bfree+0x20>
 80048c2:	218a      	movs	r1, #138	; 0x8a
 80048c4:	4b08      	ldr	r3, [pc, #32]	; (80048e8 <_Bfree+0x3c>)
 80048c6:	4809      	ldr	r0, [pc, #36]	; (80048ec <_Bfree+0x40>)
 80048c8:	f000 fd52 	bl	8005370 <__assert_func>
 80048cc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80048d0:	6006      	str	r6, [r0, #0]
 80048d2:	60c6      	str	r6, [r0, #12]
 80048d4:	b13c      	cbz	r4, 80048e6 <_Bfree+0x3a>
 80048d6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80048d8:	6862      	ldr	r2, [r4, #4]
 80048da:	68db      	ldr	r3, [r3, #12]
 80048dc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80048e0:	6021      	str	r1, [r4, #0]
 80048e2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80048e6:	bd70      	pop	{r4, r5, r6, pc}
 80048e8:	08005fcd 	.word	0x08005fcd
 80048ec:	08006054 	.word	0x08006054

080048f0 <__multadd>:
 80048f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80048f4:	4698      	mov	r8, r3
 80048f6:	460c      	mov	r4, r1
 80048f8:	2300      	movs	r3, #0
 80048fa:	690e      	ldr	r6, [r1, #16]
 80048fc:	4607      	mov	r7, r0
 80048fe:	f101 0014 	add.w	r0, r1, #20
 8004902:	6805      	ldr	r5, [r0, #0]
 8004904:	3301      	adds	r3, #1
 8004906:	b2a9      	uxth	r1, r5
 8004908:	fb02 8101 	mla	r1, r2, r1, r8
 800490c:	0c2d      	lsrs	r5, r5, #16
 800490e:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8004912:	fb02 c505 	mla	r5, r2, r5, ip
 8004916:	b289      	uxth	r1, r1
 8004918:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 800491c:	429e      	cmp	r6, r3
 800491e:	ea4f 4815 	mov.w	r8, r5, lsr #16
 8004922:	f840 1b04 	str.w	r1, [r0], #4
 8004926:	dcec      	bgt.n	8004902 <__multadd+0x12>
 8004928:	f1b8 0f00 	cmp.w	r8, #0
 800492c:	d022      	beq.n	8004974 <__multadd+0x84>
 800492e:	68a3      	ldr	r3, [r4, #8]
 8004930:	42b3      	cmp	r3, r6
 8004932:	dc19      	bgt.n	8004968 <__multadd+0x78>
 8004934:	6861      	ldr	r1, [r4, #4]
 8004936:	4638      	mov	r0, r7
 8004938:	3101      	adds	r1, #1
 800493a:	f7ff ff77 	bl	800482c <_Balloc>
 800493e:	4605      	mov	r5, r0
 8004940:	b928      	cbnz	r0, 800494e <__multadd+0x5e>
 8004942:	4602      	mov	r2, r0
 8004944:	21b5      	movs	r1, #181	; 0xb5
 8004946:	4b0d      	ldr	r3, [pc, #52]	; (800497c <__multadd+0x8c>)
 8004948:	480d      	ldr	r0, [pc, #52]	; (8004980 <__multadd+0x90>)
 800494a:	f000 fd11 	bl	8005370 <__assert_func>
 800494e:	6922      	ldr	r2, [r4, #16]
 8004950:	f104 010c 	add.w	r1, r4, #12
 8004954:	3202      	adds	r2, #2
 8004956:	0092      	lsls	r2, r2, #2
 8004958:	300c      	adds	r0, #12
 800495a:	f7ff ff59 	bl	8004810 <memcpy>
 800495e:	4621      	mov	r1, r4
 8004960:	4638      	mov	r0, r7
 8004962:	f7ff ffa3 	bl	80048ac <_Bfree>
 8004966:	462c      	mov	r4, r5
 8004968:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 800496c:	3601      	adds	r6, #1
 800496e:	f8c3 8014 	str.w	r8, [r3, #20]
 8004972:	6126      	str	r6, [r4, #16]
 8004974:	4620      	mov	r0, r4
 8004976:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800497a:	bf00      	nop
 800497c:	08006043 	.word	0x08006043
 8004980:	08006054 	.word	0x08006054

08004984 <__hi0bits>:
 8004984:	0c02      	lsrs	r2, r0, #16
 8004986:	0412      	lsls	r2, r2, #16
 8004988:	4603      	mov	r3, r0
 800498a:	b9ca      	cbnz	r2, 80049c0 <__hi0bits+0x3c>
 800498c:	0403      	lsls	r3, r0, #16
 800498e:	2010      	movs	r0, #16
 8004990:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8004994:	bf04      	itt	eq
 8004996:	021b      	lsleq	r3, r3, #8
 8004998:	3008      	addeq	r0, #8
 800499a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800499e:	bf04      	itt	eq
 80049a0:	011b      	lsleq	r3, r3, #4
 80049a2:	3004      	addeq	r0, #4
 80049a4:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80049a8:	bf04      	itt	eq
 80049aa:	009b      	lsleq	r3, r3, #2
 80049ac:	3002      	addeq	r0, #2
 80049ae:	2b00      	cmp	r3, #0
 80049b0:	db05      	blt.n	80049be <__hi0bits+0x3a>
 80049b2:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 80049b6:	f100 0001 	add.w	r0, r0, #1
 80049ba:	bf08      	it	eq
 80049bc:	2020      	moveq	r0, #32
 80049be:	4770      	bx	lr
 80049c0:	2000      	movs	r0, #0
 80049c2:	e7e5      	b.n	8004990 <__hi0bits+0xc>

080049c4 <__lo0bits>:
 80049c4:	6803      	ldr	r3, [r0, #0]
 80049c6:	4602      	mov	r2, r0
 80049c8:	f013 0007 	ands.w	r0, r3, #7
 80049cc:	d00b      	beq.n	80049e6 <__lo0bits+0x22>
 80049ce:	07d9      	lsls	r1, r3, #31
 80049d0:	d422      	bmi.n	8004a18 <__lo0bits+0x54>
 80049d2:	0798      	lsls	r0, r3, #30
 80049d4:	bf49      	itett	mi
 80049d6:	085b      	lsrmi	r3, r3, #1
 80049d8:	089b      	lsrpl	r3, r3, #2
 80049da:	2001      	movmi	r0, #1
 80049dc:	6013      	strmi	r3, [r2, #0]
 80049de:	bf5c      	itt	pl
 80049e0:	2002      	movpl	r0, #2
 80049e2:	6013      	strpl	r3, [r2, #0]
 80049e4:	4770      	bx	lr
 80049e6:	b299      	uxth	r1, r3
 80049e8:	b909      	cbnz	r1, 80049ee <__lo0bits+0x2a>
 80049ea:	2010      	movs	r0, #16
 80049ec:	0c1b      	lsrs	r3, r3, #16
 80049ee:	f013 0fff 	tst.w	r3, #255	; 0xff
 80049f2:	bf04      	itt	eq
 80049f4:	0a1b      	lsreq	r3, r3, #8
 80049f6:	3008      	addeq	r0, #8
 80049f8:	0719      	lsls	r1, r3, #28
 80049fa:	bf04      	itt	eq
 80049fc:	091b      	lsreq	r3, r3, #4
 80049fe:	3004      	addeq	r0, #4
 8004a00:	0799      	lsls	r1, r3, #30
 8004a02:	bf04      	itt	eq
 8004a04:	089b      	lsreq	r3, r3, #2
 8004a06:	3002      	addeq	r0, #2
 8004a08:	07d9      	lsls	r1, r3, #31
 8004a0a:	d403      	bmi.n	8004a14 <__lo0bits+0x50>
 8004a0c:	085b      	lsrs	r3, r3, #1
 8004a0e:	f100 0001 	add.w	r0, r0, #1
 8004a12:	d003      	beq.n	8004a1c <__lo0bits+0x58>
 8004a14:	6013      	str	r3, [r2, #0]
 8004a16:	4770      	bx	lr
 8004a18:	2000      	movs	r0, #0
 8004a1a:	4770      	bx	lr
 8004a1c:	2020      	movs	r0, #32
 8004a1e:	4770      	bx	lr

08004a20 <__i2b>:
 8004a20:	b510      	push	{r4, lr}
 8004a22:	460c      	mov	r4, r1
 8004a24:	2101      	movs	r1, #1
 8004a26:	f7ff ff01 	bl	800482c <_Balloc>
 8004a2a:	4602      	mov	r2, r0
 8004a2c:	b928      	cbnz	r0, 8004a3a <__i2b+0x1a>
 8004a2e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8004a32:	4b04      	ldr	r3, [pc, #16]	; (8004a44 <__i2b+0x24>)
 8004a34:	4804      	ldr	r0, [pc, #16]	; (8004a48 <__i2b+0x28>)
 8004a36:	f000 fc9b 	bl	8005370 <__assert_func>
 8004a3a:	2301      	movs	r3, #1
 8004a3c:	6144      	str	r4, [r0, #20]
 8004a3e:	6103      	str	r3, [r0, #16]
 8004a40:	bd10      	pop	{r4, pc}
 8004a42:	bf00      	nop
 8004a44:	08006043 	.word	0x08006043
 8004a48:	08006054 	.word	0x08006054

08004a4c <__multiply>:
 8004a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004a50:	4614      	mov	r4, r2
 8004a52:	690a      	ldr	r2, [r1, #16]
 8004a54:	6923      	ldr	r3, [r4, #16]
 8004a56:	460d      	mov	r5, r1
 8004a58:	429a      	cmp	r2, r3
 8004a5a:	bfbe      	ittt	lt
 8004a5c:	460b      	movlt	r3, r1
 8004a5e:	4625      	movlt	r5, r4
 8004a60:	461c      	movlt	r4, r3
 8004a62:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8004a66:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8004a6a:	68ab      	ldr	r3, [r5, #8]
 8004a6c:	6869      	ldr	r1, [r5, #4]
 8004a6e:	eb0a 0709 	add.w	r7, sl, r9
 8004a72:	42bb      	cmp	r3, r7
 8004a74:	b085      	sub	sp, #20
 8004a76:	bfb8      	it	lt
 8004a78:	3101      	addlt	r1, #1
 8004a7a:	f7ff fed7 	bl	800482c <_Balloc>
 8004a7e:	b930      	cbnz	r0, 8004a8e <__multiply+0x42>
 8004a80:	4602      	mov	r2, r0
 8004a82:	f240 115d 	movw	r1, #349	; 0x15d
 8004a86:	4b41      	ldr	r3, [pc, #260]	; (8004b8c <__multiply+0x140>)
 8004a88:	4841      	ldr	r0, [pc, #260]	; (8004b90 <__multiply+0x144>)
 8004a8a:	f000 fc71 	bl	8005370 <__assert_func>
 8004a8e:	f100 0614 	add.w	r6, r0, #20
 8004a92:	4633      	mov	r3, r6
 8004a94:	2200      	movs	r2, #0
 8004a96:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8004a9a:	4543      	cmp	r3, r8
 8004a9c:	d31e      	bcc.n	8004adc <__multiply+0x90>
 8004a9e:	f105 0c14 	add.w	ip, r5, #20
 8004aa2:	f104 0314 	add.w	r3, r4, #20
 8004aa6:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8004aaa:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8004aae:	9202      	str	r2, [sp, #8]
 8004ab0:	ebac 0205 	sub.w	r2, ip, r5
 8004ab4:	3a15      	subs	r2, #21
 8004ab6:	f022 0203 	bic.w	r2, r2, #3
 8004aba:	3204      	adds	r2, #4
 8004abc:	f105 0115 	add.w	r1, r5, #21
 8004ac0:	458c      	cmp	ip, r1
 8004ac2:	bf38      	it	cc
 8004ac4:	2204      	movcc	r2, #4
 8004ac6:	9201      	str	r2, [sp, #4]
 8004ac8:	9a02      	ldr	r2, [sp, #8]
 8004aca:	9303      	str	r3, [sp, #12]
 8004acc:	429a      	cmp	r2, r3
 8004ace:	d808      	bhi.n	8004ae2 <__multiply+0x96>
 8004ad0:	2f00      	cmp	r7, #0
 8004ad2:	dc55      	bgt.n	8004b80 <__multiply+0x134>
 8004ad4:	6107      	str	r7, [r0, #16]
 8004ad6:	b005      	add	sp, #20
 8004ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004adc:	f843 2b04 	str.w	r2, [r3], #4
 8004ae0:	e7db      	b.n	8004a9a <__multiply+0x4e>
 8004ae2:	f8b3 a000 	ldrh.w	sl, [r3]
 8004ae6:	f1ba 0f00 	cmp.w	sl, #0
 8004aea:	d020      	beq.n	8004b2e <__multiply+0xe2>
 8004aec:	46b1      	mov	r9, r6
 8004aee:	2200      	movs	r2, #0
 8004af0:	f105 0e14 	add.w	lr, r5, #20
 8004af4:	f85e 4b04 	ldr.w	r4, [lr], #4
 8004af8:	f8d9 b000 	ldr.w	fp, [r9]
 8004afc:	b2a1      	uxth	r1, r4
 8004afe:	fa1f fb8b 	uxth.w	fp, fp
 8004b02:	fb0a b101 	mla	r1, sl, r1, fp
 8004b06:	4411      	add	r1, r2
 8004b08:	f8d9 2000 	ldr.w	r2, [r9]
 8004b0c:	0c24      	lsrs	r4, r4, #16
 8004b0e:	0c12      	lsrs	r2, r2, #16
 8004b10:	fb0a 2404 	mla	r4, sl, r4, r2
 8004b14:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8004b18:	b289      	uxth	r1, r1
 8004b1a:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8004b1e:	45f4      	cmp	ip, lr
 8004b20:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8004b24:	f849 1b04 	str.w	r1, [r9], #4
 8004b28:	d8e4      	bhi.n	8004af4 <__multiply+0xa8>
 8004b2a:	9901      	ldr	r1, [sp, #4]
 8004b2c:	5072      	str	r2, [r6, r1]
 8004b2e:	9a03      	ldr	r2, [sp, #12]
 8004b30:	3304      	adds	r3, #4
 8004b32:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8004b36:	f1b9 0f00 	cmp.w	r9, #0
 8004b3a:	d01f      	beq.n	8004b7c <__multiply+0x130>
 8004b3c:	46b6      	mov	lr, r6
 8004b3e:	f04f 0a00 	mov.w	sl, #0
 8004b42:	6834      	ldr	r4, [r6, #0]
 8004b44:	f105 0114 	add.w	r1, r5, #20
 8004b48:	880a      	ldrh	r2, [r1, #0]
 8004b4a:	f8be b002 	ldrh.w	fp, [lr, #2]
 8004b4e:	b2a4      	uxth	r4, r4
 8004b50:	fb09 b202 	mla	r2, r9, r2, fp
 8004b54:	4492      	add	sl, r2
 8004b56:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8004b5a:	f84e 4b04 	str.w	r4, [lr], #4
 8004b5e:	f851 4b04 	ldr.w	r4, [r1], #4
 8004b62:	f8be 2000 	ldrh.w	r2, [lr]
 8004b66:	0c24      	lsrs	r4, r4, #16
 8004b68:	fb09 2404 	mla	r4, r9, r4, r2
 8004b6c:	458c      	cmp	ip, r1
 8004b6e:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8004b72:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8004b76:	d8e7      	bhi.n	8004b48 <__multiply+0xfc>
 8004b78:	9a01      	ldr	r2, [sp, #4]
 8004b7a:	50b4      	str	r4, [r6, r2]
 8004b7c:	3604      	adds	r6, #4
 8004b7e:	e7a3      	b.n	8004ac8 <__multiply+0x7c>
 8004b80:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8004b84:	2b00      	cmp	r3, #0
 8004b86:	d1a5      	bne.n	8004ad4 <__multiply+0x88>
 8004b88:	3f01      	subs	r7, #1
 8004b8a:	e7a1      	b.n	8004ad0 <__multiply+0x84>
 8004b8c:	08006043 	.word	0x08006043
 8004b90:	08006054 	.word	0x08006054

08004b94 <__pow5mult>:
 8004b94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004b98:	4615      	mov	r5, r2
 8004b9a:	f012 0203 	ands.w	r2, r2, #3
 8004b9e:	4606      	mov	r6, r0
 8004ba0:	460f      	mov	r7, r1
 8004ba2:	d007      	beq.n	8004bb4 <__pow5mult+0x20>
 8004ba4:	4c25      	ldr	r4, [pc, #148]	; (8004c3c <__pow5mult+0xa8>)
 8004ba6:	3a01      	subs	r2, #1
 8004ba8:	2300      	movs	r3, #0
 8004baa:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004bae:	f7ff fe9f 	bl	80048f0 <__multadd>
 8004bb2:	4607      	mov	r7, r0
 8004bb4:	10ad      	asrs	r5, r5, #2
 8004bb6:	d03d      	beq.n	8004c34 <__pow5mult+0xa0>
 8004bb8:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8004bba:	b97c      	cbnz	r4, 8004bdc <__pow5mult+0x48>
 8004bbc:	2010      	movs	r0, #16
 8004bbe:	f7ff fe11 	bl	80047e4 <malloc>
 8004bc2:	4602      	mov	r2, r0
 8004bc4:	6270      	str	r0, [r6, #36]	; 0x24
 8004bc6:	b928      	cbnz	r0, 8004bd4 <__pow5mult+0x40>
 8004bc8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8004bcc:	4b1c      	ldr	r3, [pc, #112]	; (8004c40 <__pow5mult+0xac>)
 8004bce:	481d      	ldr	r0, [pc, #116]	; (8004c44 <__pow5mult+0xb0>)
 8004bd0:	f000 fbce 	bl	8005370 <__assert_func>
 8004bd4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004bd8:	6004      	str	r4, [r0, #0]
 8004bda:	60c4      	str	r4, [r0, #12]
 8004bdc:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8004be0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004be4:	b94c      	cbnz	r4, 8004bfa <__pow5mult+0x66>
 8004be6:	f240 2171 	movw	r1, #625	; 0x271
 8004bea:	4630      	mov	r0, r6
 8004bec:	f7ff ff18 	bl	8004a20 <__i2b>
 8004bf0:	2300      	movs	r3, #0
 8004bf2:	4604      	mov	r4, r0
 8004bf4:	f8c8 0008 	str.w	r0, [r8, #8]
 8004bf8:	6003      	str	r3, [r0, #0]
 8004bfa:	f04f 0900 	mov.w	r9, #0
 8004bfe:	07eb      	lsls	r3, r5, #31
 8004c00:	d50a      	bpl.n	8004c18 <__pow5mult+0x84>
 8004c02:	4639      	mov	r1, r7
 8004c04:	4622      	mov	r2, r4
 8004c06:	4630      	mov	r0, r6
 8004c08:	f7ff ff20 	bl	8004a4c <__multiply>
 8004c0c:	4680      	mov	r8, r0
 8004c0e:	4639      	mov	r1, r7
 8004c10:	4630      	mov	r0, r6
 8004c12:	f7ff fe4b 	bl	80048ac <_Bfree>
 8004c16:	4647      	mov	r7, r8
 8004c18:	106d      	asrs	r5, r5, #1
 8004c1a:	d00b      	beq.n	8004c34 <__pow5mult+0xa0>
 8004c1c:	6820      	ldr	r0, [r4, #0]
 8004c1e:	b938      	cbnz	r0, 8004c30 <__pow5mult+0x9c>
 8004c20:	4622      	mov	r2, r4
 8004c22:	4621      	mov	r1, r4
 8004c24:	4630      	mov	r0, r6
 8004c26:	f7ff ff11 	bl	8004a4c <__multiply>
 8004c2a:	6020      	str	r0, [r4, #0]
 8004c2c:	f8c0 9000 	str.w	r9, [r0]
 8004c30:	4604      	mov	r4, r0
 8004c32:	e7e4      	b.n	8004bfe <__pow5mult+0x6a>
 8004c34:	4638      	mov	r0, r7
 8004c36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004c3a:	bf00      	nop
 8004c3c:	080061a8 	.word	0x080061a8
 8004c40:	08005fcd 	.word	0x08005fcd
 8004c44:	08006054 	.word	0x08006054

08004c48 <__lshift>:
 8004c48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c4c:	460c      	mov	r4, r1
 8004c4e:	4607      	mov	r7, r0
 8004c50:	4691      	mov	r9, r2
 8004c52:	6923      	ldr	r3, [r4, #16]
 8004c54:	6849      	ldr	r1, [r1, #4]
 8004c56:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8004c5a:	68a3      	ldr	r3, [r4, #8]
 8004c5c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004c60:	f108 0601 	add.w	r6, r8, #1
 8004c64:	42b3      	cmp	r3, r6
 8004c66:	db0b      	blt.n	8004c80 <__lshift+0x38>
 8004c68:	4638      	mov	r0, r7
 8004c6a:	f7ff fddf 	bl	800482c <_Balloc>
 8004c6e:	4605      	mov	r5, r0
 8004c70:	b948      	cbnz	r0, 8004c86 <__lshift+0x3e>
 8004c72:	4602      	mov	r2, r0
 8004c74:	f240 11d9 	movw	r1, #473	; 0x1d9
 8004c78:	4b27      	ldr	r3, [pc, #156]	; (8004d18 <__lshift+0xd0>)
 8004c7a:	4828      	ldr	r0, [pc, #160]	; (8004d1c <__lshift+0xd4>)
 8004c7c:	f000 fb78 	bl	8005370 <__assert_func>
 8004c80:	3101      	adds	r1, #1
 8004c82:	005b      	lsls	r3, r3, #1
 8004c84:	e7ee      	b.n	8004c64 <__lshift+0x1c>
 8004c86:	2300      	movs	r3, #0
 8004c88:	f100 0114 	add.w	r1, r0, #20
 8004c8c:	f100 0210 	add.w	r2, r0, #16
 8004c90:	4618      	mov	r0, r3
 8004c92:	4553      	cmp	r3, sl
 8004c94:	db33      	blt.n	8004cfe <__lshift+0xb6>
 8004c96:	6920      	ldr	r0, [r4, #16]
 8004c98:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004c9c:	f104 0314 	add.w	r3, r4, #20
 8004ca0:	f019 091f 	ands.w	r9, r9, #31
 8004ca4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004ca8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004cac:	d02b      	beq.n	8004d06 <__lshift+0xbe>
 8004cae:	468a      	mov	sl, r1
 8004cb0:	2200      	movs	r2, #0
 8004cb2:	f1c9 0e20 	rsb	lr, r9, #32
 8004cb6:	6818      	ldr	r0, [r3, #0]
 8004cb8:	fa00 f009 	lsl.w	r0, r0, r9
 8004cbc:	4302      	orrs	r2, r0
 8004cbe:	f84a 2b04 	str.w	r2, [sl], #4
 8004cc2:	f853 2b04 	ldr.w	r2, [r3], #4
 8004cc6:	459c      	cmp	ip, r3
 8004cc8:	fa22 f20e 	lsr.w	r2, r2, lr
 8004ccc:	d8f3      	bhi.n	8004cb6 <__lshift+0x6e>
 8004cce:	ebac 0304 	sub.w	r3, ip, r4
 8004cd2:	3b15      	subs	r3, #21
 8004cd4:	f023 0303 	bic.w	r3, r3, #3
 8004cd8:	3304      	adds	r3, #4
 8004cda:	f104 0015 	add.w	r0, r4, #21
 8004cde:	4584      	cmp	ip, r0
 8004ce0:	bf38      	it	cc
 8004ce2:	2304      	movcc	r3, #4
 8004ce4:	50ca      	str	r2, [r1, r3]
 8004ce6:	b10a      	cbz	r2, 8004cec <__lshift+0xa4>
 8004ce8:	f108 0602 	add.w	r6, r8, #2
 8004cec:	3e01      	subs	r6, #1
 8004cee:	4638      	mov	r0, r7
 8004cf0:	4621      	mov	r1, r4
 8004cf2:	612e      	str	r6, [r5, #16]
 8004cf4:	f7ff fdda 	bl	80048ac <_Bfree>
 8004cf8:	4628      	mov	r0, r5
 8004cfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004cfe:	f842 0f04 	str.w	r0, [r2, #4]!
 8004d02:	3301      	adds	r3, #1
 8004d04:	e7c5      	b.n	8004c92 <__lshift+0x4a>
 8004d06:	3904      	subs	r1, #4
 8004d08:	f853 2b04 	ldr.w	r2, [r3], #4
 8004d0c:	459c      	cmp	ip, r3
 8004d0e:	f841 2f04 	str.w	r2, [r1, #4]!
 8004d12:	d8f9      	bhi.n	8004d08 <__lshift+0xc0>
 8004d14:	e7ea      	b.n	8004cec <__lshift+0xa4>
 8004d16:	bf00      	nop
 8004d18:	08006043 	.word	0x08006043
 8004d1c:	08006054 	.word	0x08006054

08004d20 <__mcmp>:
 8004d20:	4603      	mov	r3, r0
 8004d22:	690a      	ldr	r2, [r1, #16]
 8004d24:	6900      	ldr	r0, [r0, #16]
 8004d26:	b530      	push	{r4, r5, lr}
 8004d28:	1a80      	subs	r0, r0, r2
 8004d2a:	d10d      	bne.n	8004d48 <__mcmp+0x28>
 8004d2c:	3314      	adds	r3, #20
 8004d2e:	3114      	adds	r1, #20
 8004d30:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8004d34:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8004d38:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004d3c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004d40:	4295      	cmp	r5, r2
 8004d42:	d002      	beq.n	8004d4a <__mcmp+0x2a>
 8004d44:	d304      	bcc.n	8004d50 <__mcmp+0x30>
 8004d46:	2001      	movs	r0, #1
 8004d48:	bd30      	pop	{r4, r5, pc}
 8004d4a:	42a3      	cmp	r3, r4
 8004d4c:	d3f4      	bcc.n	8004d38 <__mcmp+0x18>
 8004d4e:	e7fb      	b.n	8004d48 <__mcmp+0x28>
 8004d50:	f04f 30ff 	mov.w	r0, #4294967295
 8004d54:	e7f8      	b.n	8004d48 <__mcmp+0x28>
	...

08004d58 <__mdiff>:
 8004d58:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d5c:	460c      	mov	r4, r1
 8004d5e:	4606      	mov	r6, r0
 8004d60:	4611      	mov	r1, r2
 8004d62:	4620      	mov	r0, r4
 8004d64:	4692      	mov	sl, r2
 8004d66:	f7ff ffdb 	bl	8004d20 <__mcmp>
 8004d6a:	1e05      	subs	r5, r0, #0
 8004d6c:	d111      	bne.n	8004d92 <__mdiff+0x3a>
 8004d6e:	4629      	mov	r1, r5
 8004d70:	4630      	mov	r0, r6
 8004d72:	f7ff fd5b 	bl	800482c <_Balloc>
 8004d76:	4602      	mov	r2, r0
 8004d78:	b928      	cbnz	r0, 8004d86 <__mdiff+0x2e>
 8004d7a:	f240 2132 	movw	r1, #562	; 0x232
 8004d7e:	4b3c      	ldr	r3, [pc, #240]	; (8004e70 <__mdiff+0x118>)
 8004d80:	483c      	ldr	r0, [pc, #240]	; (8004e74 <__mdiff+0x11c>)
 8004d82:	f000 faf5 	bl	8005370 <__assert_func>
 8004d86:	2301      	movs	r3, #1
 8004d88:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8004d8c:	4610      	mov	r0, r2
 8004d8e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004d92:	bfa4      	itt	ge
 8004d94:	4653      	movge	r3, sl
 8004d96:	46a2      	movge	sl, r4
 8004d98:	4630      	mov	r0, r6
 8004d9a:	f8da 1004 	ldr.w	r1, [sl, #4]
 8004d9e:	bfa6      	itte	ge
 8004da0:	461c      	movge	r4, r3
 8004da2:	2500      	movge	r5, #0
 8004da4:	2501      	movlt	r5, #1
 8004da6:	f7ff fd41 	bl	800482c <_Balloc>
 8004daa:	4602      	mov	r2, r0
 8004dac:	b918      	cbnz	r0, 8004db6 <__mdiff+0x5e>
 8004dae:	f44f 7110 	mov.w	r1, #576	; 0x240
 8004db2:	4b2f      	ldr	r3, [pc, #188]	; (8004e70 <__mdiff+0x118>)
 8004db4:	e7e4      	b.n	8004d80 <__mdiff+0x28>
 8004db6:	f100 0814 	add.w	r8, r0, #20
 8004dba:	f8da 7010 	ldr.w	r7, [sl, #16]
 8004dbe:	60c5      	str	r5, [r0, #12]
 8004dc0:	f04f 0c00 	mov.w	ip, #0
 8004dc4:	f10a 0514 	add.w	r5, sl, #20
 8004dc8:	f10a 0010 	add.w	r0, sl, #16
 8004dcc:	46c2      	mov	sl, r8
 8004dce:	6926      	ldr	r6, [r4, #16]
 8004dd0:	f104 0914 	add.w	r9, r4, #20
 8004dd4:	eb05 0e87 	add.w	lr, r5, r7, lsl #2
 8004dd8:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8004ddc:	f850 bf04 	ldr.w	fp, [r0, #4]!
 8004de0:	f859 3b04 	ldr.w	r3, [r9], #4
 8004de4:	fa1f f18b 	uxth.w	r1, fp
 8004de8:	4461      	add	r1, ip
 8004dea:	fa1f fc83 	uxth.w	ip, r3
 8004dee:	0c1b      	lsrs	r3, r3, #16
 8004df0:	eba1 010c 	sub.w	r1, r1, ip
 8004df4:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8004df8:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8004dfc:	b289      	uxth	r1, r1
 8004dfe:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8004e02:	454e      	cmp	r6, r9
 8004e04:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8004e08:	f84a 3b04 	str.w	r3, [sl], #4
 8004e0c:	d8e6      	bhi.n	8004ddc <__mdiff+0x84>
 8004e0e:	1b33      	subs	r3, r6, r4
 8004e10:	3b15      	subs	r3, #21
 8004e12:	f023 0303 	bic.w	r3, r3, #3
 8004e16:	3415      	adds	r4, #21
 8004e18:	3304      	adds	r3, #4
 8004e1a:	42a6      	cmp	r6, r4
 8004e1c:	bf38      	it	cc
 8004e1e:	2304      	movcc	r3, #4
 8004e20:	441d      	add	r5, r3
 8004e22:	4443      	add	r3, r8
 8004e24:	461e      	mov	r6, r3
 8004e26:	462c      	mov	r4, r5
 8004e28:	4574      	cmp	r4, lr
 8004e2a:	d30e      	bcc.n	8004e4a <__mdiff+0xf2>
 8004e2c:	f10e 0103 	add.w	r1, lr, #3
 8004e30:	1b49      	subs	r1, r1, r5
 8004e32:	f021 0103 	bic.w	r1, r1, #3
 8004e36:	3d03      	subs	r5, #3
 8004e38:	45ae      	cmp	lr, r5
 8004e3a:	bf38      	it	cc
 8004e3c:	2100      	movcc	r1, #0
 8004e3e:	4419      	add	r1, r3
 8004e40:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8004e44:	b18b      	cbz	r3, 8004e6a <__mdiff+0x112>
 8004e46:	6117      	str	r7, [r2, #16]
 8004e48:	e7a0      	b.n	8004d8c <__mdiff+0x34>
 8004e4a:	f854 8b04 	ldr.w	r8, [r4], #4
 8004e4e:	fa1f f188 	uxth.w	r1, r8
 8004e52:	4461      	add	r1, ip
 8004e54:	1408      	asrs	r0, r1, #16
 8004e56:	eb00 4018 	add.w	r0, r0, r8, lsr #16
 8004e5a:	b289      	uxth	r1, r1
 8004e5c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8004e60:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004e64:	f846 1b04 	str.w	r1, [r6], #4
 8004e68:	e7de      	b.n	8004e28 <__mdiff+0xd0>
 8004e6a:	3f01      	subs	r7, #1
 8004e6c:	e7e8      	b.n	8004e40 <__mdiff+0xe8>
 8004e6e:	bf00      	nop
 8004e70:	08006043 	.word	0x08006043
 8004e74:	08006054 	.word	0x08006054

08004e78 <__d2b>:
 8004e78:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8004e7c:	2101      	movs	r1, #1
 8004e7e:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 8004e82:	4690      	mov	r8, r2
 8004e84:	461d      	mov	r5, r3
 8004e86:	f7ff fcd1 	bl	800482c <_Balloc>
 8004e8a:	4604      	mov	r4, r0
 8004e8c:	b930      	cbnz	r0, 8004e9c <__d2b+0x24>
 8004e8e:	4602      	mov	r2, r0
 8004e90:	f240 310a 	movw	r1, #778	; 0x30a
 8004e94:	4b24      	ldr	r3, [pc, #144]	; (8004f28 <__d2b+0xb0>)
 8004e96:	4825      	ldr	r0, [pc, #148]	; (8004f2c <__d2b+0xb4>)
 8004e98:	f000 fa6a 	bl	8005370 <__assert_func>
 8004e9c:	f3c5 0313 	ubfx	r3, r5, #0, #20
 8004ea0:	f3c5 550a 	ubfx	r5, r5, #20, #11
 8004ea4:	bb2d      	cbnz	r5, 8004ef2 <__d2b+0x7a>
 8004ea6:	9301      	str	r3, [sp, #4]
 8004ea8:	f1b8 0300 	subs.w	r3, r8, #0
 8004eac:	d026      	beq.n	8004efc <__d2b+0x84>
 8004eae:	4668      	mov	r0, sp
 8004eb0:	9300      	str	r3, [sp, #0]
 8004eb2:	f7ff fd87 	bl	80049c4 <__lo0bits>
 8004eb6:	9900      	ldr	r1, [sp, #0]
 8004eb8:	b1f0      	cbz	r0, 8004ef8 <__d2b+0x80>
 8004eba:	9a01      	ldr	r2, [sp, #4]
 8004ebc:	f1c0 0320 	rsb	r3, r0, #32
 8004ec0:	fa02 f303 	lsl.w	r3, r2, r3
 8004ec4:	430b      	orrs	r3, r1
 8004ec6:	40c2      	lsrs	r2, r0
 8004ec8:	6163      	str	r3, [r4, #20]
 8004eca:	9201      	str	r2, [sp, #4]
 8004ecc:	9b01      	ldr	r3, [sp, #4]
 8004ece:	2b00      	cmp	r3, #0
 8004ed0:	bf14      	ite	ne
 8004ed2:	2102      	movne	r1, #2
 8004ed4:	2101      	moveq	r1, #1
 8004ed6:	61a3      	str	r3, [r4, #24]
 8004ed8:	6121      	str	r1, [r4, #16]
 8004eda:	b1c5      	cbz	r5, 8004f0e <__d2b+0x96>
 8004edc:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8004ee0:	4405      	add	r5, r0
 8004ee2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8004ee6:	603d      	str	r5, [r7, #0]
 8004ee8:	6030      	str	r0, [r6, #0]
 8004eea:	4620      	mov	r0, r4
 8004eec:	b002      	add	sp, #8
 8004eee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004ef2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004ef6:	e7d6      	b.n	8004ea6 <__d2b+0x2e>
 8004ef8:	6161      	str	r1, [r4, #20]
 8004efa:	e7e7      	b.n	8004ecc <__d2b+0x54>
 8004efc:	a801      	add	r0, sp, #4
 8004efe:	f7ff fd61 	bl	80049c4 <__lo0bits>
 8004f02:	2101      	movs	r1, #1
 8004f04:	9b01      	ldr	r3, [sp, #4]
 8004f06:	6121      	str	r1, [r4, #16]
 8004f08:	6163      	str	r3, [r4, #20]
 8004f0a:	3020      	adds	r0, #32
 8004f0c:	e7e5      	b.n	8004eda <__d2b+0x62>
 8004f0e:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 8004f12:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8004f16:	6038      	str	r0, [r7, #0]
 8004f18:	6918      	ldr	r0, [r3, #16]
 8004f1a:	f7ff fd33 	bl	8004984 <__hi0bits>
 8004f1e:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 8004f22:	6031      	str	r1, [r6, #0]
 8004f24:	e7e1      	b.n	8004eea <__d2b+0x72>
 8004f26:	bf00      	nop
 8004f28:	08006043 	.word	0x08006043
 8004f2c:	08006054 	.word	0x08006054

08004f30 <_calloc_r>:
 8004f30:	b538      	push	{r3, r4, r5, lr}
 8004f32:	fb02 f501 	mul.w	r5, r2, r1
 8004f36:	4629      	mov	r1, r5
 8004f38:	f000 f854 	bl	8004fe4 <_malloc_r>
 8004f3c:	4604      	mov	r4, r0
 8004f3e:	b118      	cbz	r0, 8004f48 <_calloc_r+0x18>
 8004f40:	462a      	mov	r2, r5
 8004f42:	2100      	movs	r1, #0
 8004f44:	f7fe f946 	bl	80031d4 <memset>
 8004f48:	4620      	mov	r0, r4
 8004f4a:	bd38      	pop	{r3, r4, r5, pc}

08004f4c <_free_r>:
 8004f4c:	b538      	push	{r3, r4, r5, lr}
 8004f4e:	4605      	mov	r5, r0
 8004f50:	2900      	cmp	r1, #0
 8004f52:	d043      	beq.n	8004fdc <_free_r+0x90>
 8004f54:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004f58:	1f0c      	subs	r4, r1, #4
 8004f5a:	2b00      	cmp	r3, #0
 8004f5c:	bfb8      	it	lt
 8004f5e:	18e4      	addlt	r4, r4, r3
 8004f60:	f000 fa62 	bl	8005428 <__malloc_lock>
 8004f64:	4a1e      	ldr	r2, [pc, #120]	; (8004fe0 <_free_r+0x94>)
 8004f66:	6813      	ldr	r3, [r2, #0]
 8004f68:	4610      	mov	r0, r2
 8004f6a:	b933      	cbnz	r3, 8004f7a <_free_r+0x2e>
 8004f6c:	6063      	str	r3, [r4, #4]
 8004f6e:	6014      	str	r4, [r2, #0]
 8004f70:	4628      	mov	r0, r5
 8004f72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004f76:	f000 ba5d 	b.w	8005434 <__malloc_unlock>
 8004f7a:	42a3      	cmp	r3, r4
 8004f7c:	d90a      	bls.n	8004f94 <_free_r+0x48>
 8004f7e:	6821      	ldr	r1, [r4, #0]
 8004f80:	1862      	adds	r2, r4, r1
 8004f82:	4293      	cmp	r3, r2
 8004f84:	bf01      	itttt	eq
 8004f86:	681a      	ldreq	r2, [r3, #0]
 8004f88:	685b      	ldreq	r3, [r3, #4]
 8004f8a:	1852      	addeq	r2, r2, r1
 8004f8c:	6022      	streq	r2, [r4, #0]
 8004f8e:	6063      	str	r3, [r4, #4]
 8004f90:	6004      	str	r4, [r0, #0]
 8004f92:	e7ed      	b.n	8004f70 <_free_r+0x24>
 8004f94:	461a      	mov	r2, r3
 8004f96:	685b      	ldr	r3, [r3, #4]
 8004f98:	b10b      	cbz	r3, 8004f9e <_free_r+0x52>
 8004f9a:	42a3      	cmp	r3, r4
 8004f9c:	d9fa      	bls.n	8004f94 <_free_r+0x48>
 8004f9e:	6811      	ldr	r1, [r2, #0]
 8004fa0:	1850      	adds	r0, r2, r1
 8004fa2:	42a0      	cmp	r0, r4
 8004fa4:	d10b      	bne.n	8004fbe <_free_r+0x72>
 8004fa6:	6820      	ldr	r0, [r4, #0]
 8004fa8:	4401      	add	r1, r0
 8004faa:	1850      	adds	r0, r2, r1
 8004fac:	4283      	cmp	r3, r0
 8004fae:	6011      	str	r1, [r2, #0]
 8004fb0:	d1de      	bne.n	8004f70 <_free_r+0x24>
 8004fb2:	6818      	ldr	r0, [r3, #0]
 8004fb4:	685b      	ldr	r3, [r3, #4]
 8004fb6:	4401      	add	r1, r0
 8004fb8:	6011      	str	r1, [r2, #0]
 8004fba:	6053      	str	r3, [r2, #4]
 8004fbc:	e7d8      	b.n	8004f70 <_free_r+0x24>
 8004fbe:	d902      	bls.n	8004fc6 <_free_r+0x7a>
 8004fc0:	230c      	movs	r3, #12
 8004fc2:	602b      	str	r3, [r5, #0]
 8004fc4:	e7d4      	b.n	8004f70 <_free_r+0x24>
 8004fc6:	6820      	ldr	r0, [r4, #0]
 8004fc8:	1821      	adds	r1, r4, r0
 8004fca:	428b      	cmp	r3, r1
 8004fcc:	bf01      	itttt	eq
 8004fce:	6819      	ldreq	r1, [r3, #0]
 8004fd0:	685b      	ldreq	r3, [r3, #4]
 8004fd2:	1809      	addeq	r1, r1, r0
 8004fd4:	6021      	streq	r1, [r4, #0]
 8004fd6:	6063      	str	r3, [r4, #4]
 8004fd8:	6054      	str	r4, [r2, #4]
 8004fda:	e7c9      	b.n	8004f70 <_free_r+0x24>
 8004fdc:	bd38      	pop	{r3, r4, r5, pc}
 8004fde:	bf00      	nop
 8004fe0:	20000230 	.word	0x20000230

08004fe4 <_malloc_r>:
 8004fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004fe6:	1ccd      	adds	r5, r1, #3
 8004fe8:	f025 0503 	bic.w	r5, r5, #3
 8004fec:	3508      	adds	r5, #8
 8004fee:	2d0c      	cmp	r5, #12
 8004ff0:	bf38      	it	cc
 8004ff2:	250c      	movcc	r5, #12
 8004ff4:	2d00      	cmp	r5, #0
 8004ff6:	4606      	mov	r6, r0
 8004ff8:	db01      	blt.n	8004ffe <_malloc_r+0x1a>
 8004ffa:	42a9      	cmp	r1, r5
 8004ffc:	d903      	bls.n	8005006 <_malloc_r+0x22>
 8004ffe:	230c      	movs	r3, #12
 8005000:	6033      	str	r3, [r6, #0]
 8005002:	2000      	movs	r0, #0
 8005004:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005006:	f000 fa0f 	bl	8005428 <__malloc_lock>
 800500a:	4921      	ldr	r1, [pc, #132]	; (8005090 <_malloc_r+0xac>)
 800500c:	680a      	ldr	r2, [r1, #0]
 800500e:	4614      	mov	r4, r2
 8005010:	b99c      	cbnz	r4, 800503a <_malloc_r+0x56>
 8005012:	4f20      	ldr	r7, [pc, #128]	; (8005094 <_malloc_r+0xb0>)
 8005014:	683b      	ldr	r3, [r7, #0]
 8005016:	b923      	cbnz	r3, 8005022 <_malloc_r+0x3e>
 8005018:	4621      	mov	r1, r4
 800501a:	4630      	mov	r0, r6
 800501c:	f000 f998 	bl	8005350 <_sbrk_r>
 8005020:	6038      	str	r0, [r7, #0]
 8005022:	4629      	mov	r1, r5
 8005024:	4630      	mov	r0, r6
 8005026:	f000 f993 	bl	8005350 <_sbrk_r>
 800502a:	1c43      	adds	r3, r0, #1
 800502c:	d123      	bne.n	8005076 <_malloc_r+0x92>
 800502e:	230c      	movs	r3, #12
 8005030:	4630      	mov	r0, r6
 8005032:	6033      	str	r3, [r6, #0]
 8005034:	f000 f9fe 	bl	8005434 <__malloc_unlock>
 8005038:	e7e3      	b.n	8005002 <_malloc_r+0x1e>
 800503a:	6823      	ldr	r3, [r4, #0]
 800503c:	1b5b      	subs	r3, r3, r5
 800503e:	d417      	bmi.n	8005070 <_malloc_r+0x8c>
 8005040:	2b0b      	cmp	r3, #11
 8005042:	d903      	bls.n	800504c <_malloc_r+0x68>
 8005044:	6023      	str	r3, [r4, #0]
 8005046:	441c      	add	r4, r3
 8005048:	6025      	str	r5, [r4, #0]
 800504a:	e004      	b.n	8005056 <_malloc_r+0x72>
 800504c:	6863      	ldr	r3, [r4, #4]
 800504e:	42a2      	cmp	r2, r4
 8005050:	bf0c      	ite	eq
 8005052:	600b      	streq	r3, [r1, #0]
 8005054:	6053      	strne	r3, [r2, #4]
 8005056:	4630      	mov	r0, r6
 8005058:	f000 f9ec 	bl	8005434 <__malloc_unlock>
 800505c:	f104 000b 	add.w	r0, r4, #11
 8005060:	1d23      	adds	r3, r4, #4
 8005062:	f020 0007 	bic.w	r0, r0, #7
 8005066:	1ac2      	subs	r2, r0, r3
 8005068:	d0cc      	beq.n	8005004 <_malloc_r+0x20>
 800506a:	1a1b      	subs	r3, r3, r0
 800506c:	50a3      	str	r3, [r4, r2]
 800506e:	e7c9      	b.n	8005004 <_malloc_r+0x20>
 8005070:	4622      	mov	r2, r4
 8005072:	6864      	ldr	r4, [r4, #4]
 8005074:	e7cc      	b.n	8005010 <_malloc_r+0x2c>
 8005076:	1cc4      	adds	r4, r0, #3
 8005078:	f024 0403 	bic.w	r4, r4, #3
 800507c:	42a0      	cmp	r0, r4
 800507e:	d0e3      	beq.n	8005048 <_malloc_r+0x64>
 8005080:	1a21      	subs	r1, r4, r0
 8005082:	4630      	mov	r0, r6
 8005084:	f000 f964 	bl	8005350 <_sbrk_r>
 8005088:	3001      	adds	r0, #1
 800508a:	d1dd      	bne.n	8005048 <_malloc_r+0x64>
 800508c:	e7cf      	b.n	800502e <_malloc_r+0x4a>
 800508e:	bf00      	nop
 8005090:	20000230 	.word	0x20000230
 8005094:	20000234 	.word	0x20000234

08005098 <__ssputs_r>:
 8005098:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800509c:	688e      	ldr	r6, [r1, #8]
 800509e:	4682      	mov	sl, r0
 80050a0:	429e      	cmp	r6, r3
 80050a2:	460c      	mov	r4, r1
 80050a4:	4690      	mov	r8, r2
 80050a6:	461f      	mov	r7, r3
 80050a8:	d838      	bhi.n	800511c <__ssputs_r+0x84>
 80050aa:	898a      	ldrh	r2, [r1, #12]
 80050ac:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80050b0:	d032      	beq.n	8005118 <__ssputs_r+0x80>
 80050b2:	6825      	ldr	r5, [r4, #0]
 80050b4:	6909      	ldr	r1, [r1, #16]
 80050b6:	3301      	adds	r3, #1
 80050b8:	eba5 0901 	sub.w	r9, r5, r1
 80050bc:	6965      	ldr	r5, [r4, #20]
 80050be:	444b      	add	r3, r9
 80050c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80050c4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80050c8:	106d      	asrs	r5, r5, #1
 80050ca:	429d      	cmp	r5, r3
 80050cc:	bf38      	it	cc
 80050ce:	461d      	movcc	r5, r3
 80050d0:	0553      	lsls	r3, r2, #21
 80050d2:	d531      	bpl.n	8005138 <__ssputs_r+0xa0>
 80050d4:	4629      	mov	r1, r5
 80050d6:	f7ff ff85 	bl	8004fe4 <_malloc_r>
 80050da:	4606      	mov	r6, r0
 80050dc:	b950      	cbnz	r0, 80050f4 <__ssputs_r+0x5c>
 80050de:	230c      	movs	r3, #12
 80050e0:	f04f 30ff 	mov.w	r0, #4294967295
 80050e4:	f8ca 3000 	str.w	r3, [sl]
 80050e8:	89a3      	ldrh	r3, [r4, #12]
 80050ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80050ee:	81a3      	strh	r3, [r4, #12]
 80050f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80050f4:	464a      	mov	r2, r9
 80050f6:	6921      	ldr	r1, [r4, #16]
 80050f8:	f7ff fb8a 	bl	8004810 <memcpy>
 80050fc:	89a3      	ldrh	r3, [r4, #12]
 80050fe:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005102:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005106:	81a3      	strh	r3, [r4, #12]
 8005108:	6126      	str	r6, [r4, #16]
 800510a:	444e      	add	r6, r9
 800510c:	6026      	str	r6, [r4, #0]
 800510e:	463e      	mov	r6, r7
 8005110:	6165      	str	r5, [r4, #20]
 8005112:	eba5 0509 	sub.w	r5, r5, r9
 8005116:	60a5      	str	r5, [r4, #8]
 8005118:	42be      	cmp	r6, r7
 800511a:	d900      	bls.n	800511e <__ssputs_r+0x86>
 800511c:	463e      	mov	r6, r7
 800511e:	4632      	mov	r2, r6
 8005120:	4641      	mov	r1, r8
 8005122:	6820      	ldr	r0, [r4, #0]
 8005124:	f000 f966 	bl	80053f4 <memmove>
 8005128:	68a3      	ldr	r3, [r4, #8]
 800512a:	6822      	ldr	r2, [r4, #0]
 800512c:	1b9b      	subs	r3, r3, r6
 800512e:	4432      	add	r2, r6
 8005130:	2000      	movs	r0, #0
 8005132:	60a3      	str	r3, [r4, #8]
 8005134:	6022      	str	r2, [r4, #0]
 8005136:	e7db      	b.n	80050f0 <__ssputs_r+0x58>
 8005138:	462a      	mov	r2, r5
 800513a:	f000 f981 	bl	8005440 <_realloc_r>
 800513e:	4606      	mov	r6, r0
 8005140:	2800      	cmp	r0, #0
 8005142:	d1e1      	bne.n	8005108 <__ssputs_r+0x70>
 8005144:	4650      	mov	r0, sl
 8005146:	6921      	ldr	r1, [r4, #16]
 8005148:	f7ff ff00 	bl	8004f4c <_free_r>
 800514c:	e7c7      	b.n	80050de <__ssputs_r+0x46>
	...

08005150 <_svfiprintf_r>:
 8005150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005154:	4698      	mov	r8, r3
 8005156:	898b      	ldrh	r3, [r1, #12]
 8005158:	4607      	mov	r7, r0
 800515a:	061b      	lsls	r3, r3, #24
 800515c:	460d      	mov	r5, r1
 800515e:	4614      	mov	r4, r2
 8005160:	b09d      	sub	sp, #116	; 0x74
 8005162:	d50e      	bpl.n	8005182 <_svfiprintf_r+0x32>
 8005164:	690b      	ldr	r3, [r1, #16]
 8005166:	b963      	cbnz	r3, 8005182 <_svfiprintf_r+0x32>
 8005168:	2140      	movs	r1, #64	; 0x40
 800516a:	f7ff ff3b 	bl	8004fe4 <_malloc_r>
 800516e:	6028      	str	r0, [r5, #0]
 8005170:	6128      	str	r0, [r5, #16]
 8005172:	b920      	cbnz	r0, 800517e <_svfiprintf_r+0x2e>
 8005174:	230c      	movs	r3, #12
 8005176:	603b      	str	r3, [r7, #0]
 8005178:	f04f 30ff 	mov.w	r0, #4294967295
 800517c:	e0d1      	b.n	8005322 <_svfiprintf_r+0x1d2>
 800517e:	2340      	movs	r3, #64	; 0x40
 8005180:	616b      	str	r3, [r5, #20]
 8005182:	2300      	movs	r3, #0
 8005184:	9309      	str	r3, [sp, #36]	; 0x24
 8005186:	2320      	movs	r3, #32
 8005188:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800518c:	2330      	movs	r3, #48	; 0x30
 800518e:	f04f 0901 	mov.w	r9, #1
 8005192:	f8cd 800c 	str.w	r8, [sp, #12]
 8005196:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800533c <_svfiprintf_r+0x1ec>
 800519a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800519e:	4623      	mov	r3, r4
 80051a0:	469a      	mov	sl, r3
 80051a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80051a6:	b10a      	cbz	r2, 80051ac <_svfiprintf_r+0x5c>
 80051a8:	2a25      	cmp	r2, #37	; 0x25
 80051aa:	d1f9      	bne.n	80051a0 <_svfiprintf_r+0x50>
 80051ac:	ebba 0b04 	subs.w	fp, sl, r4
 80051b0:	d00b      	beq.n	80051ca <_svfiprintf_r+0x7a>
 80051b2:	465b      	mov	r3, fp
 80051b4:	4622      	mov	r2, r4
 80051b6:	4629      	mov	r1, r5
 80051b8:	4638      	mov	r0, r7
 80051ba:	f7ff ff6d 	bl	8005098 <__ssputs_r>
 80051be:	3001      	adds	r0, #1
 80051c0:	f000 80aa 	beq.w	8005318 <_svfiprintf_r+0x1c8>
 80051c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80051c6:	445a      	add	r2, fp
 80051c8:	9209      	str	r2, [sp, #36]	; 0x24
 80051ca:	f89a 3000 	ldrb.w	r3, [sl]
 80051ce:	2b00      	cmp	r3, #0
 80051d0:	f000 80a2 	beq.w	8005318 <_svfiprintf_r+0x1c8>
 80051d4:	2300      	movs	r3, #0
 80051d6:	f04f 32ff 	mov.w	r2, #4294967295
 80051da:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80051de:	f10a 0a01 	add.w	sl, sl, #1
 80051e2:	9304      	str	r3, [sp, #16]
 80051e4:	9307      	str	r3, [sp, #28]
 80051e6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80051ea:	931a      	str	r3, [sp, #104]	; 0x68
 80051ec:	4654      	mov	r4, sl
 80051ee:	2205      	movs	r2, #5
 80051f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80051f4:	4851      	ldr	r0, [pc, #324]	; (800533c <_svfiprintf_r+0x1ec>)
 80051f6:	f7ff fafd 	bl	80047f4 <memchr>
 80051fa:	9a04      	ldr	r2, [sp, #16]
 80051fc:	b9d8      	cbnz	r0, 8005236 <_svfiprintf_r+0xe6>
 80051fe:	06d0      	lsls	r0, r2, #27
 8005200:	bf44      	itt	mi
 8005202:	2320      	movmi	r3, #32
 8005204:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005208:	0711      	lsls	r1, r2, #28
 800520a:	bf44      	itt	mi
 800520c:	232b      	movmi	r3, #43	; 0x2b
 800520e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005212:	f89a 3000 	ldrb.w	r3, [sl]
 8005216:	2b2a      	cmp	r3, #42	; 0x2a
 8005218:	d015      	beq.n	8005246 <_svfiprintf_r+0xf6>
 800521a:	4654      	mov	r4, sl
 800521c:	2000      	movs	r0, #0
 800521e:	f04f 0c0a 	mov.w	ip, #10
 8005222:	9a07      	ldr	r2, [sp, #28]
 8005224:	4621      	mov	r1, r4
 8005226:	f811 3b01 	ldrb.w	r3, [r1], #1
 800522a:	3b30      	subs	r3, #48	; 0x30
 800522c:	2b09      	cmp	r3, #9
 800522e:	d94e      	bls.n	80052ce <_svfiprintf_r+0x17e>
 8005230:	b1b0      	cbz	r0, 8005260 <_svfiprintf_r+0x110>
 8005232:	9207      	str	r2, [sp, #28]
 8005234:	e014      	b.n	8005260 <_svfiprintf_r+0x110>
 8005236:	eba0 0308 	sub.w	r3, r0, r8
 800523a:	fa09 f303 	lsl.w	r3, r9, r3
 800523e:	4313      	orrs	r3, r2
 8005240:	46a2      	mov	sl, r4
 8005242:	9304      	str	r3, [sp, #16]
 8005244:	e7d2      	b.n	80051ec <_svfiprintf_r+0x9c>
 8005246:	9b03      	ldr	r3, [sp, #12]
 8005248:	1d19      	adds	r1, r3, #4
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	9103      	str	r1, [sp, #12]
 800524e:	2b00      	cmp	r3, #0
 8005250:	bfbb      	ittet	lt
 8005252:	425b      	neglt	r3, r3
 8005254:	f042 0202 	orrlt.w	r2, r2, #2
 8005258:	9307      	strge	r3, [sp, #28]
 800525a:	9307      	strlt	r3, [sp, #28]
 800525c:	bfb8      	it	lt
 800525e:	9204      	strlt	r2, [sp, #16]
 8005260:	7823      	ldrb	r3, [r4, #0]
 8005262:	2b2e      	cmp	r3, #46	; 0x2e
 8005264:	d10c      	bne.n	8005280 <_svfiprintf_r+0x130>
 8005266:	7863      	ldrb	r3, [r4, #1]
 8005268:	2b2a      	cmp	r3, #42	; 0x2a
 800526a:	d135      	bne.n	80052d8 <_svfiprintf_r+0x188>
 800526c:	9b03      	ldr	r3, [sp, #12]
 800526e:	3402      	adds	r4, #2
 8005270:	1d1a      	adds	r2, r3, #4
 8005272:	681b      	ldr	r3, [r3, #0]
 8005274:	9203      	str	r2, [sp, #12]
 8005276:	2b00      	cmp	r3, #0
 8005278:	bfb8      	it	lt
 800527a:	f04f 33ff 	movlt.w	r3, #4294967295
 800527e:	9305      	str	r3, [sp, #20]
 8005280:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800534c <_svfiprintf_r+0x1fc>
 8005284:	2203      	movs	r2, #3
 8005286:	4650      	mov	r0, sl
 8005288:	7821      	ldrb	r1, [r4, #0]
 800528a:	f7ff fab3 	bl	80047f4 <memchr>
 800528e:	b140      	cbz	r0, 80052a2 <_svfiprintf_r+0x152>
 8005290:	2340      	movs	r3, #64	; 0x40
 8005292:	eba0 000a 	sub.w	r0, r0, sl
 8005296:	fa03 f000 	lsl.w	r0, r3, r0
 800529a:	9b04      	ldr	r3, [sp, #16]
 800529c:	3401      	adds	r4, #1
 800529e:	4303      	orrs	r3, r0
 80052a0:	9304      	str	r3, [sp, #16]
 80052a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80052a6:	2206      	movs	r2, #6
 80052a8:	4825      	ldr	r0, [pc, #148]	; (8005340 <_svfiprintf_r+0x1f0>)
 80052aa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80052ae:	f7ff faa1 	bl	80047f4 <memchr>
 80052b2:	2800      	cmp	r0, #0
 80052b4:	d038      	beq.n	8005328 <_svfiprintf_r+0x1d8>
 80052b6:	4b23      	ldr	r3, [pc, #140]	; (8005344 <_svfiprintf_r+0x1f4>)
 80052b8:	bb1b      	cbnz	r3, 8005302 <_svfiprintf_r+0x1b2>
 80052ba:	9b03      	ldr	r3, [sp, #12]
 80052bc:	3307      	adds	r3, #7
 80052be:	f023 0307 	bic.w	r3, r3, #7
 80052c2:	3308      	adds	r3, #8
 80052c4:	9303      	str	r3, [sp, #12]
 80052c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052c8:	4433      	add	r3, r6
 80052ca:	9309      	str	r3, [sp, #36]	; 0x24
 80052cc:	e767      	b.n	800519e <_svfiprintf_r+0x4e>
 80052ce:	460c      	mov	r4, r1
 80052d0:	2001      	movs	r0, #1
 80052d2:	fb0c 3202 	mla	r2, ip, r2, r3
 80052d6:	e7a5      	b.n	8005224 <_svfiprintf_r+0xd4>
 80052d8:	2300      	movs	r3, #0
 80052da:	f04f 0c0a 	mov.w	ip, #10
 80052de:	4619      	mov	r1, r3
 80052e0:	3401      	adds	r4, #1
 80052e2:	9305      	str	r3, [sp, #20]
 80052e4:	4620      	mov	r0, r4
 80052e6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80052ea:	3a30      	subs	r2, #48	; 0x30
 80052ec:	2a09      	cmp	r2, #9
 80052ee:	d903      	bls.n	80052f8 <_svfiprintf_r+0x1a8>
 80052f0:	2b00      	cmp	r3, #0
 80052f2:	d0c5      	beq.n	8005280 <_svfiprintf_r+0x130>
 80052f4:	9105      	str	r1, [sp, #20]
 80052f6:	e7c3      	b.n	8005280 <_svfiprintf_r+0x130>
 80052f8:	4604      	mov	r4, r0
 80052fa:	2301      	movs	r3, #1
 80052fc:	fb0c 2101 	mla	r1, ip, r1, r2
 8005300:	e7f0      	b.n	80052e4 <_svfiprintf_r+0x194>
 8005302:	ab03      	add	r3, sp, #12
 8005304:	9300      	str	r3, [sp, #0]
 8005306:	462a      	mov	r2, r5
 8005308:	4638      	mov	r0, r7
 800530a:	4b0f      	ldr	r3, [pc, #60]	; (8005348 <_svfiprintf_r+0x1f8>)
 800530c:	a904      	add	r1, sp, #16
 800530e:	f7fe f807 	bl	8003320 <_printf_float>
 8005312:	1c42      	adds	r2, r0, #1
 8005314:	4606      	mov	r6, r0
 8005316:	d1d6      	bne.n	80052c6 <_svfiprintf_r+0x176>
 8005318:	89ab      	ldrh	r3, [r5, #12]
 800531a:	065b      	lsls	r3, r3, #25
 800531c:	f53f af2c 	bmi.w	8005178 <_svfiprintf_r+0x28>
 8005320:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005322:	b01d      	add	sp, #116	; 0x74
 8005324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005328:	ab03      	add	r3, sp, #12
 800532a:	9300      	str	r3, [sp, #0]
 800532c:	462a      	mov	r2, r5
 800532e:	4638      	mov	r0, r7
 8005330:	4b05      	ldr	r3, [pc, #20]	; (8005348 <_svfiprintf_r+0x1f8>)
 8005332:	a904      	add	r1, sp, #16
 8005334:	f7fe fa90 	bl	8003858 <_printf_i>
 8005338:	e7eb      	b.n	8005312 <_svfiprintf_r+0x1c2>
 800533a:	bf00      	nop
 800533c:	080061b4 	.word	0x080061b4
 8005340:	080061be 	.word	0x080061be
 8005344:	08003321 	.word	0x08003321
 8005348:	08005099 	.word	0x08005099
 800534c:	080061ba 	.word	0x080061ba

08005350 <_sbrk_r>:
 8005350:	b538      	push	{r3, r4, r5, lr}
 8005352:	2300      	movs	r3, #0
 8005354:	4d05      	ldr	r5, [pc, #20]	; (800536c <_sbrk_r+0x1c>)
 8005356:	4604      	mov	r4, r0
 8005358:	4608      	mov	r0, r1
 800535a:	602b      	str	r3, [r5, #0]
 800535c:	f7fc fba4 	bl	8001aa8 <_sbrk>
 8005360:	1c43      	adds	r3, r0, #1
 8005362:	d102      	bne.n	800536a <_sbrk_r+0x1a>
 8005364:	682b      	ldr	r3, [r5, #0]
 8005366:	b103      	cbz	r3, 800536a <_sbrk_r+0x1a>
 8005368:	6023      	str	r3, [r4, #0]
 800536a:	bd38      	pop	{r3, r4, r5, pc}
 800536c:	200002c8 	.word	0x200002c8

08005370 <__assert_func>:
 8005370:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005372:	4614      	mov	r4, r2
 8005374:	461a      	mov	r2, r3
 8005376:	4b09      	ldr	r3, [pc, #36]	; (800539c <__assert_func+0x2c>)
 8005378:	4605      	mov	r5, r0
 800537a:	681b      	ldr	r3, [r3, #0]
 800537c:	68d8      	ldr	r0, [r3, #12]
 800537e:	b14c      	cbz	r4, 8005394 <__assert_func+0x24>
 8005380:	4b07      	ldr	r3, [pc, #28]	; (80053a0 <__assert_func+0x30>)
 8005382:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005386:	9100      	str	r1, [sp, #0]
 8005388:	462b      	mov	r3, r5
 800538a:	4906      	ldr	r1, [pc, #24]	; (80053a4 <__assert_func+0x34>)
 800538c:	f000 f80e 	bl	80053ac <fiprintf>
 8005390:	f000 faa2 	bl	80058d8 <abort>
 8005394:	4b04      	ldr	r3, [pc, #16]	; (80053a8 <__assert_func+0x38>)
 8005396:	461c      	mov	r4, r3
 8005398:	e7f3      	b.n	8005382 <__assert_func+0x12>
 800539a:	bf00      	nop
 800539c:	2000000c 	.word	0x2000000c
 80053a0:	080061c5 	.word	0x080061c5
 80053a4:	080061d2 	.word	0x080061d2
 80053a8:	08006200 	.word	0x08006200

080053ac <fiprintf>:
 80053ac:	b40e      	push	{r1, r2, r3}
 80053ae:	b503      	push	{r0, r1, lr}
 80053b0:	4601      	mov	r1, r0
 80053b2:	ab03      	add	r3, sp, #12
 80053b4:	4805      	ldr	r0, [pc, #20]	; (80053cc <fiprintf+0x20>)
 80053b6:	f853 2b04 	ldr.w	r2, [r3], #4
 80053ba:	6800      	ldr	r0, [r0, #0]
 80053bc:	9301      	str	r3, [sp, #4]
 80053be:	f000 f88d 	bl	80054dc <_vfiprintf_r>
 80053c2:	b002      	add	sp, #8
 80053c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80053c8:	b003      	add	sp, #12
 80053ca:	4770      	bx	lr
 80053cc:	2000000c 	.word	0x2000000c

080053d0 <__ascii_mbtowc>:
 80053d0:	b082      	sub	sp, #8
 80053d2:	b901      	cbnz	r1, 80053d6 <__ascii_mbtowc+0x6>
 80053d4:	a901      	add	r1, sp, #4
 80053d6:	b142      	cbz	r2, 80053ea <__ascii_mbtowc+0x1a>
 80053d8:	b14b      	cbz	r3, 80053ee <__ascii_mbtowc+0x1e>
 80053da:	7813      	ldrb	r3, [r2, #0]
 80053dc:	600b      	str	r3, [r1, #0]
 80053de:	7812      	ldrb	r2, [r2, #0]
 80053e0:	1e10      	subs	r0, r2, #0
 80053e2:	bf18      	it	ne
 80053e4:	2001      	movne	r0, #1
 80053e6:	b002      	add	sp, #8
 80053e8:	4770      	bx	lr
 80053ea:	4610      	mov	r0, r2
 80053ec:	e7fb      	b.n	80053e6 <__ascii_mbtowc+0x16>
 80053ee:	f06f 0001 	mvn.w	r0, #1
 80053f2:	e7f8      	b.n	80053e6 <__ascii_mbtowc+0x16>

080053f4 <memmove>:
 80053f4:	4288      	cmp	r0, r1
 80053f6:	b510      	push	{r4, lr}
 80053f8:	eb01 0402 	add.w	r4, r1, r2
 80053fc:	d902      	bls.n	8005404 <memmove+0x10>
 80053fe:	4284      	cmp	r4, r0
 8005400:	4623      	mov	r3, r4
 8005402:	d807      	bhi.n	8005414 <memmove+0x20>
 8005404:	1e43      	subs	r3, r0, #1
 8005406:	42a1      	cmp	r1, r4
 8005408:	d008      	beq.n	800541c <memmove+0x28>
 800540a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800540e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005412:	e7f8      	b.n	8005406 <memmove+0x12>
 8005414:	4601      	mov	r1, r0
 8005416:	4402      	add	r2, r0
 8005418:	428a      	cmp	r2, r1
 800541a:	d100      	bne.n	800541e <memmove+0x2a>
 800541c:	bd10      	pop	{r4, pc}
 800541e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005422:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005426:	e7f7      	b.n	8005418 <memmove+0x24>

08005428 <__malloc_lock>:
 8005428:	4801      	ldr	r0, [pc, #4]	; (8005430 <__malloc_lock+0x8>)
 800542a:	f000 bc15 	b.w	8005c58 <__retarget_lock_acquire_recursive>
 800542e:	bf00      	nop
 8005430:	200002d0 	.word	0x200002d0

08005434 <__malloc_unlock>:
 8005434:	4801      	ldr	r0, [pc, #4]	; (800543c <__malloc_unlock+0x8>)
 8005436:	f000 bc10 	b.w	8005c5a <__retarget_lock_release_recursive>
 800543a:	bf00      	nop
 800543c:	200002d0 	.word	0x200002d0

08005440 <_realloc_r>:
 8005440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005442:	4607      	mov	r7, r0
 8005444:	4614      	mov	r4, r2
 8005446:	460e      	mov	r6, r1
 8005448:	b921      	cbnz	r1, 8005454 <_realloc_r+0x14>
 800544a:	4611      	mov	r1, r2
 800544c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005450:	f7ff bdc8 	b.w	8004fe4 <_malloc_r>
 8005454:	b922      	cbnz	r2, 8005460 <_realloc_r+0x20>
 8005456:	f7ff fd79 	bl	8004f4c <_free_r>
 800545a:	4625      	mov	r5, r4
 800545c:	4628      	mov	r0, r5
 800545e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005460:	f000 fc60 	bl	8005d24 <_malloc_usable_size_r>
 8005464:	42a0      	cmp	r0, r4
 8005466:	d20f      	bcs.n	8005488 <_realloc_r+0x48>
 8005468:	4621      	mov	r1, r4
 800546a:	4638      	mov	r0, r7
 800546c:	f7ff fdba 	bl	8004fe4 <_malloc_r>
 8005470:	4605      	mov	r5, r0
 8005472:	2800      	cmp	r0, #0
 8005474:	d0f2      	beq.n	800545c <_realloc_r+0x1c>
 8005476:	4631      	mov	r1, r6
 8005478:	4622      	mov	r2, r4
 800547a:	f7ff f9c9 	bl	8004810 <memcpy>
 800547e:	4631      	mov	r1, r6
 8005480:	4638      	mov	r0, r7
 8005482:	f7ff fd63 	bl	8004f4c <_free_r>
 8005486:	e7e9      	b.n	800545c <_realloc_r+0x1c>
 8005488:	4635      	mov	r5, r6
 800548a:	e7e7      	b.n	800545c <_realloc_r+0x1c>

0800548c <__sfputc_r>:
 800548c:	6893      	ldr	r3, [r2, #8]
 800548e:	b410      	push	{r4}
 8005490:	3b01      	subs	r3, #1
 8005492:	2b00      	cmp	r3, #0
 8005494:	6093      	str	r3, [r2, #8]
 8005496:	da07      	bge.n	80054a8 <__sfputc_r+0x1c>
 8005498:	6994      	ldr	r4, [r2, #24]
 800549a:	42a3      	cmp	r3, r4
 800549c:	db01      	blt.n	80054a2 <__sfputc_r+0x16>
 800549e:	290a      	cmp	r1, #10
 80054a0:	d102      	bne.n	80054a8 <__sfputc_r+0x1c>
 80054a2:	bc10      	pop	{r4}
 80054a4:	f000 b94a 	b.w	800573c <__swbuf_r>
 80054a8:	6813      	ldr	r3, [r2, #0]
 80054aa:	1c58      	adds	r0, r3, #1
 80054ac:	6010      	str	r0, [r2, #0]
 80054ae:	7019      	strb	r1, [r3, #0]
 80054b0:	4608      	mov	r0, r1
 80054b2:	bc10      	pop	{r4}
 80054b4:	4770      	bx	lr

080054b6 <__sfputs_r>:
 80054b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80054b8:	4606      	mov	r6, r0
 80054ba:	460f      	mov	r7, r1
 80054bc:	4614      	mov	r4, r2
 80054be:	18d5      	adds	r5, r2, r3
 80054c0:	42ac      	cmp	r4, r5
 80054c2:	d101      	bne.n	80054c8 <__sfputs_r+0x12>
 80054c4:	2000      	movs	r0, #0
 80054c6:	e007      	b.n	80054d8 <__sfputs_r+0x22>
 80054c8:	463a      	mov	r2, r7
 80054ca:	4630      	mov	r0, r6
 80054cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80054d0:	f7ff ffdc 	bl	800548c <__sfputc_r>
 80054d4:	1c43      	adds	r3, r0, #1
 80054d6:	d1f3      	bne.n	80054c0 <__sfputs_r+0xa>
 80054d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080054dc <_vfiprintf_r>:
 80054dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054e0:	460d      	mov	r5, r1
 80054e2:	4614      	mov	r4, r2
 80054e4:	4698      	mov	r8, r3
 80054e6:	4606      	mov	r6, r0
 80054e8:	b09d      	sub	sp, #116	; 0x74
 80054ea:	b118      	cbz	r0, 80054f4 <_vfiprintf_r+0x18>
 80054ec:	6983      	ldr	r3, [r0, #24]
 80054ee:	b90b      	cbnz	r3, 80054f4 <_vfiprintf_r+0x18>
 80054f0:	f000 fb14 	bl	8005b1c <__sinit>
 80054f4:	4b89      	ldr	r3, [pc, #548]	; (800571c <_vfiprintf_r+0x240>)
 80054f6:	429d      	cmp	r5, r3
 80054f8:	d11b      	bne.n	8005532 <_vfiprintf_r+0x56>
 80054fa:	6875      	ldr	r5, [r6, #4]
 80054fc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80054fe:	07d9      	lsls	r1, r3, #31
 8005500:	d405      	bmi.n	800550e <_vfiprintf_r+0x32>
 8005502:	89ab      	ldrh	r3, [r5, #12]
 8005504:	059a      	lsls	r2, r3, #22
 8005506:	d402      	bmi.n	800550e <_vfiprintf_r+0x32>
 8005508:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800550a:	f000 fba5 	bl	8005c58 <__retarget_lock_acquire_recursive>
 800550e:	89ab      	ldrh	r3, [r5, #12]
 8005510:	071b      	lsls	r3, r3, #28
 8005512:	d501      	bpl.n	8005518 <_vfiprintf_r+0x3c>
 8005514:	692b      	ldr	r3, [r5, #16]
 8005516:	b9eb      	cbnz	r3, 8005554 <_vfiprintf_r+0x78>
 8005518:	4629      	mov	r1, r5
 800551a:	4630      	mov	r0, r6
 800551c:	f000 f96e 	bl	80057fc <__swsetup_r>
 8005520:	b1c0      	cbz	r0, 8005554 <_vfiprintf_r+0x78>
 8005522:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005524:	07dc      	lsls	r4, r3, #31
 8005526:	d50e      	bpl.n	8005546 <_vfiprintf_r+0x6a>
 8005528:	f04f 30ff 	mov.w	r0, #4294967295
 800552c:	b01d      	add	sp, #116	; 0x74
 800552e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005532:	4b7b      	ldr	r3, [pc, #492]	; (8005720 <_vfiprintf_r+0x244>)
 8005534:	429d      	cmp	r5, r3
 8005536:	d101      	bne.n	800553c <_vfiprintf_r+0x60>
 8005538:	68b5      	ldr	r5, [r6, #8]
 800553a:	e7df      	b.n	80054fc <_vfiprintf_r+0x20>
 800553c:	4b79      	ldr	r3, [pc, #484]	; (8005724 <_vfiprintf_r+0x248>)
 800553e:	429d      	cmp	r5, r3
 8005540:	bf08      	it	eq
 8005542:	68f5      	ldreq	r5, [r6, #12]
 8005544:	e7da      	b.n	80054fc <_vfiprintf_r+0x20>
 8005546:	89ab      	ldrh	r3, [r5, #12]
 8005548:	0598      	lsls	r0, r3, #22
 800554a:	d4ed      	bmi.n	8005528 <_vfiprintf_r+0x4c>
 800554c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800554e:	f000 fb84 	bl	8005c5a <__retarget_lock_release_recursive>
 8005552:	e7e9      	b.n	8005528 <_vfiprintf_r+0x4c>
 8005554:	2300      	movs	r3, #0
 8005556:	9309      	str	r3, [sp, #36]	; 0x24
 8005558:	2320      	movs	r3, #32
 800555a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800555e:	2330      	movs	r3, #48	; 0x30
 8005560:	f04f 0901 	mov.w	r9, #1
 8005564:	f8cd 800c 	str.w	r8, [sp, #12]
 8005568:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8005728 <_vfiprintf_r+0x24c>
 800556c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005570:	4623      	mov	r3, r4
 8005572:	469a      	mov	sl, r3
 8005574:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005578:	b10a      	cbz	r2, 800557e <_vfiprintf_r+0xa2>
 800557a:	2a25      	cmp	r2, #37	; 0x25
 800557c:	d1f9      	bne.n	8005572 <_vfiprintf_r+0x96>
 800557e:	ebba 0b04 	subs.w	fp, sl, r4
 8005582:	d00b      	beq.n	800559c <_vfiprintf_r+0xc0>
 8005584:	465b      	mov	r3, fp
 8005586:	4622      	mov	r2, r4
 8005588:	4629      	mov	r1, r5
 800558a:	4630      	mov	r0, r6
 800558c:	f7ff ff93 	bl	80054b6 <__sfputs_r>
 8005590:	3001      	adds	r0, #1
 8005592:	f000 80aa 	beq.w	80056ea <_vfiprintf_r+0x20e>
 8005596:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005598:	445a      	add	r2, fp
 800559a:	9209      	str	r2, [sp, #36]	; 0x24
 800559c:	f89a 3000 	ldrb.w	r3, [sl]
 80055a0:	2b00      	cmp	r3, #0
 80055a2:	f000 80a2 	beq.w	80056ea <_vfiprintf_r+0x20e>
 80055a6:	2300      	movs	r3, #0
 80055a8:	f04f 32ff 	mov.w	r2, #4294967295
 80055ac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80055b0:	f10a 0a01 	add.w	sl, sl, #1
 80055b4:	9304      	str	r3, [sp, #16]
 80055b6:	9307      	str	r3, [sp, #28]
 80055b8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80055bc:	931a      	str	r3, [sp, #104]	; 0x68
 80055be:	4654      	mov	r4, sl
 80055c0:	2205      	movs	r2, #5
 80055c2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80055c6:	4858      	ldr	r0, [pc, #352]	; (8005728 <_vfiprintf_r+0x24c>)
 80055c8:	f7ff f914 	bl	80047f4 <memchr>
 80055cc:	9a04      	ldr	r2, [sp, #16]
 80055ce:	b9d8      	cbnz	r0, 8005608 <_vfiprintf_r+0x12c>
 80055d0:	06d1      	lsls	r1, r2, #27
 80055d2:	bf44      	itt	mi
 80055d4:	2320      	movmi	r3, #32
 80055d6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80055da:	0713      	lsls	r3, r2, #28
 80055dc:	bf44      	itt	mi
 80055de:	232b      	movmi	r3, #43	; 0x2b
 80055e0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80055e4:	f89a 3000 	ldrb.w	r3, [sl]
 80055e8:	2b2a      	cmp	r3, #42	; 0x2a
 80055ea:	d015      	beq.n	8005618 <_vfiprintf_r+0x13c>
 80055ec:	4654      	mov	r4, sl
 80055ee:	2000      	movs	r0, #0
 80055f0:	f04f 0c0a 	mov.w	ip, #10
 80055f4:	9a07      	ldr	r2, [sp, #28]
 80055f6:	4621      	mov	r1, r4
 80055f8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80055fc:	3b30      	subs	r3, #48	; 0x30
 80055fe:	2b09      	cmp	r3, #9
 8005600:	d94e      	bls.n	80056a0 <_vfiprintf_r+0x1c4>
 8005602:	b1b0      	cbz	r0, 8005632 <_vfiprintf_r+0x156>
 8005604:	9207      	str	r2, [sp, #28]
 8005606:	e014      	b.n	8005632 <_vfiprintf_r+0x156>
 8005608:	eba0 0308 	sub.w	r3, r0, r8
 800560c:	fa09 f303 	lsl.w	r3, r9, r3
 8005610:	4313      	orrs	r3, r2
 8005612:	46a2      	mov	sl, r4
 8005614:	9304      	str	r3, [sp, #16]
 8005616:	e7d2      	b.n	80055be <_vfiprintf_r+0xe2>
 8005618:	9b03      	ldr	r3, [sp, #12]
 800561a:	1d19      	adds	r1, r3, #4
 800561c:	681b      	ldr	r3, [r3, #0]
 800561e:	9103      	str	r1, [sp, #12]
 8005620:	2b00      	cmp	r3, #0
 8005622:	bfbb      	ittet	lt
 8005624:	425b      	neglt	r3, r3
 8005626:	f042 0202 	orrlt.w	r2, r2, #2
 800562a:	9307      	strge	r3, [sp, #28]
 800562c:	9307      	strlt	r3, [sp, #28]
 800562e:	bfb8      	it	lt
 8005630:	9204      	strlt	r2, [sp, #16]
 8005632:	7823      	ldrb	r3, [r4, #0]
 8005634:	2b2e      	cmp	r3, #46	; 0x2e
 8005636:	d10c      	bne.n	8005652 <_vfiprintf_r+0x176>
 8005638:	7863      	ldrb	r3, [r4, #1]
 800563a:	2b2a      	cmp	r3, #42	; 0x2a
 800563c:	d135      	bne.n	80056aa <_vfiprintf_r+0x1ce>
 800563e:	9b03      	ldr	r3, [sp, #12]
 8005640:	3402      	adds	r4, #2
 8005642:	1d1a      	adds	r2, r3, #4
 8005644:	681b      	ldr	r3, [r3, #0]
 8005646:	9203      	str	r2, [sp, #12]
 8005648:	2b00      	cmp	r3, #0
 800564a:	bfb8      	it	lt
 800564c:	f04f 33ff 	movlt.w	r3, #4294967295
 8005650:	9305      	str	r3, [sp, #20]
 8005652:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8005738 <_vfiprintf_r+0x25c>
 8005656:	2203      	movs	r2, #3
 8005658:	4650      	mov	r0, sl
 800565a:	7821      	ldrb	r1, [r4, #0]
 800565c:	f7ff f8ca 	bl	80047f4 <memchr>
 8005660:	b140      	cbz	r0, 8005674 <_vfiprintf_r+0x198>
 8005662:	2340      	movs	r3, #64	; 0x40
 8005664:	eba0 000a 	sub.w	r0, r0, sl
 8005668:	fa03 f000 	lsl.w	r0, r3, r0
 800566c:	9b04      	ldr	r3, [sp, #16]
 800566e:	3401      	adds	r4, #1
 8005670:	4303      	orrs	r3, r0
 8005672:	9304      	str	r3, [sp, #16]
 8005674:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005678:	2206      	movs	r2, #6
 800567a:	482c      	ldr	r0, [pc, #176]	; (800572c <_vfiprintf_r+0x250>)
 800567c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005680:	f7ff f8b8 	bl	80047f4 <memchr>
 8005684:	2800      	cmp	r0, #0
 8005686:	d03f      	beq.n	8005708 <_vfiprintf_r+0x22c>
 8005688:	4b29      	ldr	r3, [pc, #164]	; (8005730 <_vfiprintf_r+0x254>)
 800568a:	bb1b      	cbnz	r3, 80056d4 <_vfiprintf_r+0x1f8>
 800568c:	9b03      	ldr	r3, [sp, #12]
 800568e:	3307      	adds	r3, #7
 8005690:	f023 0307 	bic.w	r3, r3, #7
 8005694:	3308      	adds	r3, #8
 8005696:	9303      	str	r3, [sp, #12]
 8005698:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800569a:	443b      	add	r3, r7
 800569c:	9309      	str	r3, [sp, #36]	; 0x24
 800569e:	e767      	b.n	8005570 <_vfiprintf_r+0x94>
 80056a0:	460c      	mov	r4, r1
 80056a2:	2001      	movs	r0, #1
 80056a4:	fb0c 3202 	mla	r2, ip, r2, r3
 80056a8:	e7a5      	b.n	80055f6 <_vfiprintf_r+0x11a>
 80056aa:	2300      	movs	r3, #0
 80056ac:	f04f 0c0a 	mov.w	ip, #10
 80056b0:	4619      	mov	r1, r3
 80056b2:	3401      	adds	r4, #1
 80056b4:	9305      	str	r3, [sp, #20]
 80056b6:	4620      	mov	r0, r4
 80056b8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80056bc:	3a30      	subs	r2, #48	; 0x30
 80056be:	2a09      	cmp	r2, #9
 80056c0:	d903      	bls.n	80056ca <_vfiprintf_r+0x1ee>
 80056c2:	2b00      	cmp	r3, #0
 80056c4:	d0c5      	beq.n	8005652 <_vfiprintf_r+0x176>
 80056c6:	9105      	str	r1, [sp, #20]
 80056c8:	e7c3      	b.n	8005652 <_vfiprintf_r+0x176>
 80056ca:	4604      	mov	r4, r0
 80056cc:	2301      	movs	r3, #1
 80056ce:	fb0c 2101 	mla	r1, ip, r1, r2
 80056d2:	e7f0      	b.n	80056b6 <_vfiprintf_r+0x1da>
 80056d4:	ab03      	add	r3, sp, #12
 80056d6:	9300      	str	r3, [sp, #0]
 80056d8:	462a      	mov	r2, r5
 80056da:	4630      	mov	r0, r6
 80056dc:	4b15      	ldr	r3, [pc, #84]	; (8005734 <_vfiprintf_r+0x258>)
 80056de:	a904      	add	r1, sp, #16
 80056e0:	f7fd fe1e 	bl	8003320 <_printf_float>
 80056e4:	4607      	mov	r7, r0
 80056e6:	1c78      	adds	r0, r7, #1
 80056e8:	d1d6      	bne.n	8005698 <_vfiprintf_r+0x1bc>
 80056ea:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80056ec:	07d9      	lsls	r1, r3, #31
 80056ee:	d405      	bmi.n	80056fc <_vfiprintf_r+0x220>
 80056f0:	89ab      	ldrh	r3, [r5, #12]
 80056f2:	059a      	lsls	r2, r3, #22
 80056f4:	d402      	bmi.n	80056fc <_vfiprintf_r+0x220>
 80056f6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80056f8:	f000 faaf 	bl	8005c5a <__retarget_lock_release_recursive>
 80056fc:	89ab      	ldrh	r3, [r5, #12]
 80056fe:	065b      	lsls	r3, r3, #25
 8005700:	f53f af12 	bmi.w	8005528 <_vfiprintf_r+0x4c>
 8005704:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005706:	e711      	b.n	800552c <_vfiprintf_r+0x50>
 8005708:	ab03      	add	r3, sp, #12
 800570a:	9300      	str	r3, [sp, #0]
 800570c:	462a      	mov	r2, r5
 800570e:	4630      	mov	r0, r6
 8005710:	4b08      	ldr	r3, [pc, #32]	; (8005734 <_vfiprintf_r+0x258>)
 8005712:	a904      	add	r1, sp, #16
 8005714:	f7fe f8a0 	bl	8003858 <_printf_i>
 8005718:	e7e4      	b.n	80056e4 <_vfiprintf_r+0x208>
 800571a:	bf00      	nop
 800571c:	0800632c 	.word	0x0800632c
 8005720:	0800634c 	.word	0x0800634c
 8005724:	0800630c 	.word	0x0800630c
 8005728:	080061b4 	.word	0x080061b4
 800572c:	080061be 	.word	0x080061be
 8005730:	08003321 	.word	0x08003321
 8005734:	080054b7 	.word	0x080054b7
 8005738:	080061ba 	.word	0x080061ba

0800573c <__swbuf_r>:
 800573c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800573e:	460e      	mov	r6, r1
 8005740:	4614      	mov	r4, r2
 8005742:	4605      	mov	r5, r0
 8005744:	b118      	cbz	r0, 800574e <__swbuf_r+0x12>
 8005746:	6983      	ldr	r3, [r0, #24]
 8005748:	b90b      	cbnz	r3, 800574e <__swbuf_r+0x12>
 800574a:	f000 f9e7 	bl	8005b1c <__sinit>
 800574e:	4b21      	ldr	r3, [pc, #132]	; (80057d4 <__swbuf_r+0x98>)
 8005750:	429c      	cmp	r4, r3
 8005752:	d12b      	bne.n	80057ac <__swbuf_r+0x70>
 8005754:	686c      	ldr	r4, [r5, #4]
 8005756:	69a3      	ldr	r3, [r4, #24]
 8005758:	60a3      	str	r3, [r4, #8]
 800575a:	89a3      	ldrh	r3, [r4, #12]
 800575c:	071a      	lsls	r2, r3, #28
 800575e:	d52f      	bpl.n	80057c0 <__swbuf_r+0x84>
 8005760:	6923      	ldr	r3, [r4, #16]
 8005762:	b36b      	cbz	r3, 80057c0 <__swbuf_r+0x84>
 8005764:	6923      	ldr	r3, [r4, #16]
 8005766:	6820      	ldr	r0, [r4, #0]
 8005768:	b2f6      	uxtb	r6, r6
 800576a:	1ac0      	subs	r0, r0, r3
 800576c:	6963      	ldr	r3, [r4, #20]
 800576e:	4637      	mov	r7, r6
 8005770:	4283      	cmp	r3, r0
 8005772:	dc04      	bgt.n	800577e <__swbuf_r+0x42>
 8005774:	4621      	mov	r1, r4
 8005776:	4628      	mov	r0, r5
 8005778:	f000 f93c 	bl	80059f4 <_fflush_r>
 800577c:	bb30      	cbnz	r0, 80057cc <__swbuf_r+0x90>
 800577e:	68a3      	ldr	r3, [r4, #8]
 8005780:	3001      	adds	r0, #1
 8005782:	3b01      	subs	r3, #1
 8005784:	60a3      	str	r3, [r4, #8]
 8005786:	6823      	ldr	r3, [r4, #0]
 8005788:	1c5a      	adds	r2, r3, #1
 800578a:	6022      	str	r2, [r4, #0]
 800578c:	701e      	strb	r6, [r3, #0]
 800578e:	6963      	ldr	r3, [r4, #20]
 8005790:	4283      	cmp	r3, r0
 8005792:	d004      	beq.n	800579e <__swbuf_r+0x62>
 8005794:	89a3      	ldrh	r3, [r4, #12]
 8005796:	07db      	lsls	r3, r3, #31
 8005798:	d506      	bpl.n	80057a8 <__swbuf_r+0x6c>
 800579a:	2e0a      	cmp	r6, #10
 800579c:	d104      	bne.n	80057a8 <__swbuf_r+0x6c>
 800579e:	4621      	mov	r1, r4
 80057a0:	4628      	mov	r0, r5
 80057a2:	f000 f927 	bl	80059f4 <_fflush_r>
 80057a6:	b988      	cbnz	r0, 80057cc <__swbuf_r+0x90>
 80057a8:	4638      	mov	r0, r7
 80057aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80057ac:	4b0a      	ldr	r3, [pc, #40]	; (80057d8 <__swbuf_r+0x9c>)
 80057ae:	429c      	cmp	r4, r3
 80057b0:	d101      	bne.n	80057b6 <__swbuf_r+0x7a>
 80057b2:	68ac      	ldr	r4, [r5, #8]
 80057b4:	e7cf      	b.n	8005756 <__swbuf_r+0x1a>
 80057b6:	4b09      	ldr	r3, [pc, #36]	; (80057dc <__swbuf_r+0xa0>)
 80057b8:	429c      	cmp	r4, r3
 80057ba:	bf08      	it	eq
 80057bc:	68ec      	ldreq	r4, [r5, #12]
 80057be:	e7ca      	b.n	8005756 <__swbuf_r+0x1a>
 80057c0:	4621      	mov	r1, r4
 80057c2:	4628      	mov	r0, r5
 80057c4:	f000 f81a 	bl	80057fc <__swsetup_r>
 80057c8:	2800      	cmp	r0, #0
 80057ca:	d0cb      	beq.n	8005764 <__swbuf_r+0x28>
 80057cc:	f04f 37ff 	mov.w	r7, #4294967295
 80057d0:	e7ea      	b.n	80057a8 <__swbuf_r+0x6c>
 80057d2:	bf00      	nop
 80057d4:	0800632c 	.word	0x0800632c
 80057d8:	0800634c 	.word	0x0800634c
 80057dc:	0800630c 	.word	0x0800630c

080057e0 <__ascii_wctomb>:
 80057e0:	4603      	mov	r3, r0
 80057e2:	4608      	mov	r0, r1
 80057e4:	b141      	cbz	r1, 80057f8 <__ascii_wctomb+0x18>
 80057e6:	2aff      	cmp	r2, #255	; 0xff
 80057e8:	d904      	bls.n	80057f4 <__ascii_wctomb+0x14>
 80057ea:	228a      	movs	r2, #138	; 0x8a
 80057ec:	f04f 30ff 	mov.w	r0, #4294967295
 80057f0:	601a      	str	r2, [r3, #0]
 80057f2:	4770      	bx	lr
 80057f4:	2001      	movs	r0, #1
 80057f6:	700a      	strb	r2, [r1, #0]
 80057f8:	4770      	bx	lr
	...

080057fc <__swsetup_r>:
 80057fc:	4b32      	ldr	r3, [pc, #200]	; (80058c8 <__swsetup_r+0xcc>)
 80057fe:	b570      	push	{r4, r5, r6, lr}
 8005800:	681d      	ldr	r5, [r3, #0]
 8005802:	4606      	mov	r6, r0
 8005804:	460c      	mov	r4, r1
 8005806:	b125      	cbz	r5, 8005812 <__swsetup_r+0x16>
 8005808:	69ab      	ldr	r3, [r5, #24]
 800580a:	b913      	cbnz	r3, 8005812 <__swsetup_r+0x16>
 800580c:	4628      	mov	r0, r5
 800580e:	f000 f985 	bl	8005b1c <__sinit>
 8005812:	4b2e      	ldr	r3, [pc, #184]	; (80058cc <__swsetup_r+0xd0>)
 8005814:	429c      	cmp	r4, r3
 8005816:	d10f      	bne.n	8005838 <__swsetup_r+0x3c>
 8005818:	686c      	ldr	r4, [r5, #4]
 800581a:	89a3      	ldrh	r3, [r4, #12]
 800581c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005820:	0719      	lsls	r1, r3, #28
 8005822:	d42c      	bmi.n	800587e <__swsetup_r+0x82>
 8005824:	06dd      	lsls	r5, r3, #27
 8005826:	d411      	bmi.n	800584c <__swsetup_r+0x50>
 8005828:	2309      	movs	r3, #9
 800582a:	6033      	str	r3, [r6, #0]
 800582c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8005830:	f04f 30ff 	mov.w	r0, #4294967295
 8005834:	81a3      	strh	r3, [r4, #12]
 8005836:	e03e      	b.n	80058b6 <__swsetup_r+0xba>
 8005838:	4b25      	ldr	r3, [pc, #148]	; (80058d0 <__swsetup_r+0xd4>)
 800583a:	429c      	cmp	r4, r3
 800583c:	d101      	bne.n	8005842 <__swsetup_r+0x46>
 800583e:	68ac      	ldr	r4, [r5, #8]
 8005840:	e7eb      	b.n	800581a <__swsetup_r+0x1e>
 8005842:	4b24      	ldr	r3, [pc, #144]	; (80058d4 <__swsetup_r+0xd8>)
 8005844:	429c      	cmp	r4, r3
 8005846:	bf08      	it	eq
 8005848:	68ec      	ldreq	r4, [r5, #12]
 800584a:	e7e6      	b.n	800581a <__swsetup_r+0x1e>
 800584c:	0758      	lsls	r0, r3, #29
 800584e:	d512      	bpl.n	8005876 <__swsetup_r+0x7a>
 8005850:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005852:	b141      	cbz	r1, 8005866 <__swsetup_r+0x6a>
 8005854:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005858:	4299      	cmp	r1, r3
 800585a:	d002      	beq.n	8005862 <__swsetup_r+0x66>
 800585c:	4630      	mov	r0, r6
 800585e:	f7ff fb75 	bl	8004f4c <_free_r>
 8005862:	2300      	movs	r3, #0
 8005864:	6363      	str	r3, [r4, #52]	; 0x34
 8005866:	89a3      	ldrh	r3, [r4, #12]
 8005868:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800586c:	81a3      	strh	r3, [r4, #12]
 800586e:	2300      	movs	r3, #0
 8005870:	6063      	str	r3, [r4, #4]
 8005872:	6923      	ldr	r3, [r4, #16]
 8005874:	6023      	str	r3, [r4, #0]
 8005876:	89a3      	ldrh	r3, [r4, #12]
 8005878:	f043 0308 	orr.w	r3, r3, #8
 800587c:	81a3      	strh	r3, [r4, #12]
 800587e:	6923      	ldr	r3, [r4, #16]
 8005880:	b94b      	cbnz	r3, 8005896 <__swsetup_r+0x9a>
 8005882:	89a3      	ldrh	r3, [r4, #12]
 8005884:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8005888:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800588c:	d003      	beq.n	8005896 <__swsetup_r+0x9a>
 800588e:	4621      	mov	r1, r4
 8005890:	4630      	mov	r0, r6
 8005892:	f000 fa07 	bl	8005ca4 <__smakebuf_r>
 8005896:	89a0      	ldrh	r0, [r4, #12]
 8005898:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800589c:	f010 0301 	ands.w	r3, r0, #1
 80058a0:	d00a      	beq.n	80058b8 <__swsetup_r+0xbc>
 80058a2:	2300      	movs	r3, #0
 80058a4:	60a3      	str	r3, [r4, #8]
 80058a6:	6963      	ldr	r3, [r4, #20]
 80058a8:	425b      	negs	r3, r3
 80058aa:	61a3      	str	r3, [r4, #24]
 80058ac:	6923      	ldr	r3, [r4, #16]
 80058ae:	b943      	cbnz	r3, 80058c2 <__swsetup_r+0xc6>
 80058b0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80058b4:	d1ba      	bne.n	800582c <__swsetup_r+0x30>
 80058b6:	bd70      	pop	{r4, r5, r6, pc}
 80058b8:	0781      	lsls	r1, r0, #30
 80058ba:	bf58      	it	pl
 80058bc:	6963      	ldrpl	r3, [r4, #20]
 80058be:	60a3      	str	r3, [r4, #8]
 80058c0:	e7f4      	b.n	80058ac <__swsetup_r+0xb0>
 80058c2:	2000      	movs	r0, #0
 80058c4:	e7f7      	b.n	80058b6 <__swsetup_r+0xba>
 80058c6:	bf00      	nop
 80058c8:	2000000c 	.word	0x2000000c
 80058cc:	0800632c 	.word	0x0800632c
 80058d0:	0800634c 	.word	0x0800634c
 80058d4:	0800630c 	.word	0x0800630c

080058d8 <abort>:
 80058d8:	2006      	movs	r0, #6
 80058da:	b508      	push	{r3, lr}
 80058dc:	f000 fa52 	bl	8005d84 <raise>
 80058e0:	2001      	movs	r0, #1
 80058e2:	f7fc f86e 	bl	80019c2 <_exit>
	...

080058e8 <__sflush_r>:
 80058e8:	898a      	ldrh	r2, [r1, #12]
 80058ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80058ee:	4605      	mov	r5, r0
 80058f0:	0710      	lsls	r0, r2, #28
 80058f2:	460c      	mov	r4, r1
 80058f4:	d458      	bmi.n	80059a8 <__sflush_r+0xc0>
 80058f6:	684b      	ldr	r3, [r1, #4]
 80058f8:	2b00      	cmp	r3, #0
 80058fa:	dc05      	bgt.n	8005908 <__sflush_r+0x20>
 80058fc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80058fe:	2b00      	cmp	r3, #0
 8005900:	dc02      	bgt.n	8005908 <__sflush_r+0x20>
 8005902:	2000      	movs	r0, #0
 8005904:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005908:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800590a:	2e00      	cmp	r6, #0
 800590c:	d0f9      	beq.n	8005902 <__sflush_r+0x1a>
 800590e:	2300      	movs	r3, #0
 8005910:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005914:	682f      	ldr	r7, [r5, #0]
 8005916:	602b      	str	r3, [r5, #0]
 8005918:	d032      	beq.n	8005980 <__sflush_r+0x98>
 800591a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800591c:	89a3      	ldrh	r3, [r4, #12]
 800591e:	075a      	lsls	r2, r3, #29
 8005920:	d505      	bpl.n	800592e <__sflush_r+0x46>
 8005922:	6863      	ldr	r3, [r4, #4]
 8005924:	1ac0      	subs	r0, r0, r3
 8005926:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005928:	b10b      	cbz	r3, 800592e <__sflush_r+0x46>
 800592a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800592c:	1ac0      	subs	r0, r0, r3
 800592e:	2300      	movs	r3, #0
 8005930:	4602      	mov	r2, r0
 8005932:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005934:	4628      	mov	r0, r5
 8005936:	6a21      	ldr	r1, [r4, #32]
 8005938:	47b0      	blx	r6
 800593a:	1c43      	adds	r3, r0, #1
 800593c:	89a3      	ldrh	r3, [r4, #12]
 800593e:	d106      	bne.n	800594e <__sflush_r+0x66>
 8005940:	6829      	ldr	r1, [r5, #0]
 8005942:	291d      	cmp	r1, #29
 8005944:	d82c      	bhi.n	80059a0 <__sflush_r+0xb8>
 8005946:	4a2a      	ldr	r2, [pc, #168]	; (80059f0 <__sflush_r+0x108>)
 8005948:	40ca      	lsrs	r2, r1
 800594a:	07d6      	lsls	r6, r2, #31
 800594c:	d528      	bpl.n	80059a0 <__sflush_r+0xb8>
 800594e:	2200      	movs	r2, #0
 8005950:	6062      	str	r2, [r4, #4]
 8005952:	6922      	ldr	r2, [r4, #16]
 8005954:	04d9      	lsls	r1, r3, #19
 8005956:	6022      	str	r2, [r4, #0]
 8005958:	d504      	bpl.n	8005964 <__sflush_r+0x7c>
 800595a:	1c42      	adds	r2, r0, #1
 800595c:	d101      	bne.n	8005962 <__sflush_r+0x7a>
 800595e:	682b      	ldr	r3, [r5, #0]
 8005960:	b903      	cbnz	r3, 8005964 <__sflush_r+0x7c>
 8005962:	6560      	str	r0, [r4, #84]	; 0x54
 8005964:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005966:	602f      	str	r7, [r5, #0]
 8005968:	2900      	cmp	r1, #0
 800596a:	d0ca      	beq.n	8005902 <__sflush_r+0x1a>
 800596c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005970:	4299      	cmp	r1, r3
 8005972:	d002      	beq.n	800597a <__sflush_r+0x92>
 8005974:	4628      	mov	r0, r5
 8005976:	f7ff fae9 	bl	8004f4c <_free_r>
 800597a:	2000      	movs	r0, #0
 800597c:	6360      	str	r0, [r4, #52]	; 0x34
 800597e:	e7c1      	b.n	8005904 <__sflush_r+0x1c>
 8005980:	6a21      	ldr	r1, [r4, #32]
 8005982:	2301      	movs	r3, #1
 8005984:	4628      	mov	r0, r5
 8005986:	47b0      	blx	r6
 8005988:	1c41      	adds	r1, r0, #1
 800598a:	d1c7      	bne.n	800591c <__sflush_r+0x34>
 800598c:	682b      	ldr	r3, [r5, #0]
 800598e:	2b00      	cmp	r3, #0
 8005990:	d0c4      	beq.n	800591c <__sflush_r+0x34>
 8005992:	2b1d      	cmp	r3, #29
 8005994:	d001      	beq.n	800599a <__sflush_r+0xb2>
 8005996:	2b16      	cmp	r3, #22
 8005998:	d101      	bne.n	800599e <__sflush_r+0xb6>
 800599a:	602f      	str	r7, [r5, #0]
 800599c:	e7b1      	b.n	8005902 <__sflush_r+0x1a>
 800599e:	89a3      	ldrh	r3, [r4, #12]
 80059a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80059a4:	81a3      	strh	r3, [r4, #12]
 80059a6:	e7ad      	b.n	8005904 <__sflush_r+0x1c>
 80059a8:	690f      	ldr	r7, [r1, #16]
 80059aa:	2f00      	cmp	r7, #0
 80059ac:	d0a9      	beq.n	8005902 <__sflush_r+0x1a>
 80059ae:	0793      	lsls	r3, r2, #30
 80059b0:	bf18      	it	ne
 80059b2:	2300      	movne	r3, #0
 80059b4:	680e      	ldr	r6, [r1, #0]
 80059b6:	bf08      	it	eq
 80059b8:	694b      	ldreq	r3, [r1, #20]
 80059ba:	eba6 0807 	sub.w	r8, r6, r7
 80059be:	600f      	str	r7, [r1, #0]
 80059c0:	608b      	str	r3, [r1, #8]
 80059c2:	f1b8 0f00 	cmp.w	r8, #0
 80059c6:	dd9c      	ble.n	8005902 <__sflush_r+0x1a>
 80059c8:	4643      	mov	r3, r8
 80059ca:	463a      	mov	r2, r7
 80059cc:	4628      	mov	r0, r5
 80059ce:	6a21      	ldr	r1, [r4, #32]
 80059d0:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80059d2:	47b0      	blx	r6
 80059d4:	2800      	cmp	r0, #0
 80059d6:	dc06      	bgt.n	80059e6 <__sflush_r+0xfe>
 80059d8:	89a3      	ldrh	r3, [r4, #12]
 80059da:	f04f 30ff 	mov.w	r0, #4294967295
 80059de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80059e2:	81a3      	strh	r3, [r4, #12]
 80059e4:	e78e      	b.n	8005904 <__sflush_r+0x1c>
 80059e6:	4407      	add	r7, r0
 80059e8:	eba8 0800 	sub.w	r8, r8, r0
 80059ec:	e7e9      	b.n	80059c2 <__sflush_r+0xda>
 80059ee:	bf00      	nop
 80059f0:	20400001 	.word	0x20400001

080059f4 <_fflush_r>:
 80059f4:	b538      	push	{r3, r4, r5, lr}
 80059f6:	690b      	ldr	r3, [r1, #16]
 80059f8:	4605      	mov	r5, r0
 80059fa:	460c      	mov	r4, r1
 80059fc:	b913      	cbnz	r3, 8005a04 <_fflush_r+0x10>
 80059fe:	2500      	movs	r5, #0
 8005a00:	4628      	mov	r0, r5
 8005a02:	bd38      	pop	{r3, r4, r5, pc}
 8005a04:	b118      	cbz	r0, 8005a0e <_fflush_r+0x1a>
 8005a06:	6983      	ldr	r3, [r0, #24]
 8005a08:	b90b      	cbnz	r3, 8005a0e <_fflush_r+0x1a>
 8005a0a:	f000 f887 	bl	8005b1c <__sinit>
 8005a0e:	4b14      	ldr	r3, [pc, #80]	; (8005a60 <_fflush_r+0x6c>)
 8005a10:	429c      	cmp	r4, r3
 8005a12:	d11b      	bne.n	8005a4c <_fflush_r+0x58>
 8005a14:	686c      	ldr	r4, [r5, #4]
 8005a16:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005a1a:	2b00      	cmp	r3, #0
 8005a1c:	d0ef      	beq.n	80059fe <_fflush_r+0xa>
 8005a1e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8005a20:	07d0      	lsls	r0, r2, #31
 8005a22:	d404      	bmi.n	8005a2e <_fflush_r+0x3a>
 8005a24:	0599      	lsls	r1, r3, #22
 8005a26:	d402      	bmi.n	8005a2e <_fflush_r+0x3a>
 8005a28:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005a2a:	f000 f915 	bl	8005c58 <__retarget_lock_acquire_recursive>
 8005a2e:	4628      	mov	r0, r5
 8005a30:	4621      	mov	r1, r4
 8005a32:	f7ff ff59 	bl	80058e8 <__sflush_r>
 8005a36:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005a38:	4605      	mov	r5, r0
 8005a3a:	07da      	lsls	r2, r3, #31
 8005a3c:	d4e0      	bmi.n	8005a00 <_fflush_r+0xc>
 8005a3e:	89a3      	ldrh	r3, [r4, #12]
 8005a40:	059b      	lsls	r3, r3, #22
 8005a42:	d4dd      	bmi.n	8005a00 <_fflush_r+0xc>
 8005a44:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005a46:	f000 f908 	bl	8005c5a <__retarget_lock_release_recursive>
 8005a4a:	e7d9      	b.n	8005a00 <_fflush_r+0xc>
 8005a4c:	4b05      	ldr	r3, [pc, #20]	; (8005a64 <_fflush_r+0x70>)
 8005a4e:	429c      	cmp	r4, r3
 8005a50:	d101      	bne.n	8005a56 <_fflush_r+0x62>
 8005a52:	68ac      	ldr	r4, [r5, #8]
 8005a54:	e7df      	b.n	8005a16 <_fflush_r+0x22>
 8005a56:	4b04      	ldr	r3, [pc, #16]	; (8005a68 <_fflush_r+0x74>)
 8005a58:	429c      	cmp	r4, r3
 8005a5a:	bf08      	it	eq
 8005a5c:	68ec      	ldreq	r4, [r5, #12]
 8005a5e:	e7da      	b.n	8005a16 <_fflush_r+0x22>
 8005a60:	0800632c 	.word	0x0800632c
 8005a64:	0800634c 	.word	0x0800634c
 8005a68:	0800630c 	.word	0x0800630c

08005a6c <std>:
 8005a6c:	2300      	movs	r3, #0
 8005a6e:	b510      	push	{r4, lr}
 8005a70:	4604      	mov	r4, r0
 8005a72:	e9c0 3300 	strd	r3, r3, [r0]
 8005a76:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005a7a:	6083      	str	r3, [r0, #8]
 8005a7c:	8181      	strh	r1, [r0, #12]
 8005a7e:	6643      	str	r3, [r0, #100]	; 0x64
 8005a80:	81c2      	strh	r2, [r0, #14]
 8005a82:	6183      	str	r3, [r0, #24]
 8005a84:	4619      	mov	r1, r3
 8005a86:	2208      	movs	r2, #8
 8005a88:	305c      	adds	r0, #92	; 0x5c
 8005a8a:	f7fd fba3 	bl	80031d4 <memset>
 8005a8e:	4b05      	ldr	r3, [pc, #20]	; (8005aa4 <std+0x38>)
 8005a90:	6224      	str	r4, [r4, #32]
 8005a92:	6263      	str	r3, [r4, #36]	; 0x24
 8005a94:	4b04      	ldr	r3, [pc, #16]	; (8005aa8 <std+0x3c>)
 8005a96:	62a3      	str	r3, [r4, #40]	; 0x28
 8005a98:	4b04      	ldr	r3, [pc, #16]	; (8005aac <std+0x40>)
 8005a9a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005a9c:	4b04      	ldr	r3, [pc, #16]	; (8005ab0 <std+0x44>)
 8005a9e:	6323      	str	r3, [r4, #48]	; 0x30
 8005aa0:	bd10      	pop	{r4, pc}
 8005aa2:	bf00      	nop
 8005aa4:	08005dbd 	.word	0x08005dbd
 8005aa8:	08005ddf 	.word	0x08005ddf
 8005aac:	08005e17 	.word	0x08005e17
 8005ab0:	08005e3b 	.word	0x08005e3b

08005ab4 <_cleanup_r>:
 8005ab4:	4901      	ldr	r1, [pc, #4]	; (8005abc <_cleanup_r+0x8>)
 8005ab6:	f000 b8af 	b.w	8005c18 <_fwalk_reent>
 8005aba:	bf00      	nop
 8005abc:	080059f5 	.word	0x080059f5

08005ac0 <__sfmoreglue>:
 8005ac0:	b570      	push	{r4, r5, r6, lr}
 8005ac2:	2568      	movs	r5, #104	; 0x68
 8005ac4:	1e4a      	subs	r2, r1, #1
 8005ac6:	4355      	muls	r5, r2
 8005ac8:	460e      	mov	r6, r1
 8005aca:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8005ace:	f7ff fa89 	bl	8004fe4 <_malloc_r>
 8005ad2:	4604      	mov	r4, r0
 8005ad4:	b140      	cbz	r0, 8005ae8 <__sfmoreglue+0x28>
 8005ad6:	2100      	movs	r1, #0
 8005ad8:	e9c0 1600 	strd	r1, r6, [r0]
 8005adc:	300c      	adds	r0, #12
 8005ade:	60a0      	str	r0, [r4, #8]
 8005ae0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8005ae4:	f7fd fb76 	bl	80031d4 <memset>
 8005ae8:	4620      	mov	r0, r4
 8005aea:	bd70      	pop	{r4, r5, r6, pc}

08005aec <__sfp_lock_acquire>:
 8005aec:	4801      	ldr	r0, [pc, #4]	; (8005af4 <__sfp_lock_acquire+0x8>)
 8005aee:	f000 b8b3 	b.w	8005c58 <__retarget_lock_acquire_recursive>
 8005af2:	bf00      	nop
 8005af4:	200002d4 	.word	0x200002d4

08005af8 <__sfp_lock_release>:
 8005af8:	4801      	ldr	r0, [pc, #4]	; (8005b00 <__sfp_lock_release+0x8>)
 8005afa:	f000 b8ae 	b.w	8005c5a <__retarget_lock_release_recursive>
 8005afe:	bf00      	nop
 8005b00:	200002d4 	.word	0x200002d4

08005b04 <__sinit_lock_acquire>:
 8005b04:	4801      	ldr	r0, [pc, #4]	; (8005b0c <__sinit_lock_acquire+0x8>)
 8005b06:	f000 b8a7 	b.w	8005c58 <__retarget_lock_acquire_recursive>
 8005b0a:	bf00      	nop
 8005b0c:	200002cf 	.word	0x200002cf

08005b10 <__sinit_lock_release>:
 8005b10:	4801      	ldr	r0, [pc, #4]	; (8005b18 <__sinit_lock_release+0x8>)
 8005b12:	f000 b8a2 	b.w	8005c5a <__retarget_lock_release_recursive>
 8005b16:	bf00      	nop
 8005b18:	200002cf 	.word	0x200002cf

08005b1c <__sinit>:
 8005b1c:	b510      	push	{r4, lr}
 8005b1e:	4604      	mov	r4, r0
 8005b20:	f7ff fff0 	bl	8005b04 <__sinit_lock_acquire>
 8005b24:	69a3      	ldr	r3, [r4, #24]
 8005b26:	b11b      	cbz	r3, 8005b30 <__sinit+0x14>
 8005b28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005b2c:	f7ff bff0 	b.w	8005b10 <__sinit_lock_release>
 8005b30:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8005b34:	6523      	str	r3, [r4, #80]	; 0x50
 8005b36:	4b13      	ldr	r3, [pc, #76]	; (8005b84 <__sinit+0x68>)
 8005b38:	4a13      	ldr	r2, [pc, #76]	; (8005b88 <__sinit+0x6c>)
 8005b3a:	681b      	ldr	r3, [r3, #0]
 8005b3c:	62a2      	str	r2, [r4, #40]	; 0x28
 8005b3e:	42a3      	cmp	r3, r4
 8005b40:	bf08      	it	eq
 8005b42:	2301      	moveq	r3, #1
 8005b44:	4620      	mov	r0, r4
 8005b46:	bf08      	it	eq
 8005b48:	61a3      	streq	r3, [r4, #24]
 8005b4a:	f000 f81f 	bl	8005b8c <__sfp>
 8005b4e:	6060      	str	r0, [r4, #4]
 8005b50:	4620      	mov	r0, r4
 8005b52:	f000 f81b 	bl	8005b8c <__sfp>
 8005b56:	60a0      	str	r0, [r4, #8]
 8005b58:	4620      	mov	r0, r4
 8005b5a:	f000 f817 	bl	8005b8c <__sfp>
 8005b5e:	2200      	movs	r2, #0
 8005b60:	2104      	movs	r1, #4
 8005b62:	60e0      	str	r0, [r4, #12]
 8005b64:	6860      	ldr	r0, [r4, #4]
 8005b66:	f7ff ff81 	bl	8005a6c <std>
 8005b6a:	2201      	movs	r2, #1
 8005b6c:	2109      	movs	r1, #9
 8005b6e:	68a0      	ldr	r0, [r4, #8]
 8005b70:	f7ff ff7c 	bl	8005a6c <std>
 8005b74:	2202      	movs	r2, #2
 8005b76:	2112      	movs	r1, #18
 8005b78:	68e0      	ldr	r0, [r4, #12]
 8005b7a:	f7ff ff77 	bl	8005a6c <std>
 8005b7e:	2301      	movs	r3, #1
 8005b80:	61a3      	str	r3, [r4, #24]
 8005b82:	e7d1      	b.n	8005b28 <__sinit+0xc>
 8005b84:	08005f88 	.word	0x08005f88
 8005b88:	08005ab5 	.word	0x08005ab5

08005b8c <__sfp>:
 8005b8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005b8e:	4607      	mov	r7, r0
 8005b90:	f7ff ffac 	bl	8005aec <__sfp_lock_acquire>
 8005b94:	4b1e      	ldr	r3, [pc, #120]	; (8005c10 <__sfp+0x84>)
 8005b96:	681e      	ldr	r6, [r3, #0]
 8005b98:	69b3      	ldr	r3, [r6, #24]
 8005b9a:	b913      	cbnz	r3, 8005ba2 <__sfp+0x16>
 8005b9c:	4630      	mov	r0, r6
 8005b9e:	f7ff ffbd 	bl	8005b1c <__sinit>
 8005ba2:	3648      	adds	r6, #72	; 0x48
 8005ba4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8005ba8:	3b01      	subs	r3, #1
 8005baa:	d503      	bpl.n	8005bb4 <__sfp+0x28>
 8005bac:	6833      	ldr	r3, [r6, #0]
 8005bae:	b30b      	cbz	r3, 8005bf4 <__sfp+0x68>
 8005bb0:	6836      	ldr	r6, [r6, #0]
 8005bb2:	e7f7      	b.n	8005ba4 <__sfp+0x18>
 8005bb4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005bb8:	b9d5      	cbnz	r5, 8005bf0 <__sfp+0x64>
 8005bba:	4b16      	ldr	r3, [pc, #88]	; (8005c14 <__sfp+0x88>)
 8005bbc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8005bc0:	60e3      	str	r3, [r4, #12]
 8005bc2:	6665      	str	r5, [r4, #100]	; 0x64
 8005bc4:	f000 f847 	bl	8005c56 <__retarget_lock_init_recursive>
 8005bc8:	f7ff ff96 	bl	8005af8 <__sfp_lock_release>
 8005bcc:	2208      	movs	r2, #8
 8005bce:	4629      	mov	r1, r5
 8005bd0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8005bd4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8005bd8:	6025      	str	r5, [r4, #0]
 8005bda:	61a5      	str	r5, [r4, #24]
 8005bdc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8005be0:	f7fd faf8 	bl	80031d4 <memset>
 8005be4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8005be8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8005bec:	4620      	mov	r0, r4
 8005bee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005bf0:	3468      	adds	r4, #104	; 0x68
 8005bf2:	e7d9      	b.n	8005ba8 <__sfp+0x1c>
 8005bf4:	2104      	movs	r1, #4
 8005bf6:	4638      	mov	r0, r7
 8005bf8:	f7ff ff62 	bl	8005ac0 <__sfmoreglue>
 8005bfc:	4604      	mov	r4, r0
 8005bfe:	6030      	str	r0, [r6, #0]
 8005c00:	2800      	cmp	r0, #0
 8005c02:	d1d5      	bne.n	8005bb0 <__sfp+0x24>
 8005c04:	f7ff ff78 	bl	8005af8 <__sfp_lock_release>
 8005c08:	230c      	movs	r3, #12
 8005c0a:	603b      	str	r3, [r7, #0]
 8005c0c:	e7ee      	b.n	8005bec <__sfp+0x60>
 8005c0e:	bf00      	nop
 8005c10:	08005f88 	.word	0x08005f88
 8005c14:	ffff0001 	.word	0xffff0001

08005c18 <_fwalk_reent>:
 8005c18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005c1c:	4606      	mov	r6, r0
 8005c1e:	4688      	mov	r8, r1
 8005c20:	2700      	movs	r7, #0
 8005c22:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8005c26:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8005c2a:	f1b9 0901 	subs.w	r9, r9, #1
 8005c2e:	d505      	bpl.n	8005c3c <_fwalk_reent+0x24>
 8005c30:	6824      	ldr	r4, [r4, #0]
 8005c32:	2c00      	cmp	r4, #0
 8005c34:	d1f7      	bne.n	8005c26 <_fwalk_reent+0xe>
 8005c36:	4638      	mov	r0, r7
 8005c38:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005c3c:	89ab      	ldrh	r3, [r5, #12]
 8005c3e:	2b01      	cmp	r3, #1
 8005c40:	d907      	bls.n	8005c52 <_fwalk_reent+0x3a>
 8005c42:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005c46:	3301      	adds	r3, #1
 8005c48:	d003      	beq.n	8005c52 <_fwalk_reent+0x3a>
 8005c4a:	4629      	mov	r1, r5
 8005c4c:	4630      	mov	r0, r6
 8005c4e:	47c0      	blx	r8
 8005c50:	4307      	orrs	r7, r0
 8005c52:	3568      	adds	r5, #104	; 0x68
 8005c54:	e7e9      	b.n	8005c2a <_fwalk_reent+0x12>

08005c56 <__retarget_lock_init_recursive>:
 8005c56:	4770      	bx	lr

08005c58 <__retarget_lock_acquire_recursive>:
 8005c58:	4770      	bx	lr

08005c5a <__retarget_lock_release_recursive>:
 8005c5a:	4770      	bx	lr

08005c5c <__swhatbuf_r>:
 8005c5c:	b570      	push	{r4, r5, r6, lr}
 8005c5e:	460e      	mov	r6, r1
 8005c60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c64:	4614      	mov	r4, r2
 8005c66:	2900      	cmp	r1, #0
 8005c68:	461d      	mov	r5, r3
 8005c6a:	b096      	sub	sp, #88	; 0x58
 8005c6c:	da07      	bge.n	8005c7e <__swhatbuf_r+0x22>
 8005c6e:	2300      	movs	r3, #0
 8005c70:	602b      	str	r3, [r5, #0]
 8005c72:	89b3      	ldrh	r3, [r6, #12]
 8005c74:	061a      	lsls	r2, r3, #24
 8005c76:	d410      	bmi.n	8005c9a <__swhatbuf_r+0x3e>
 8005c78:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005c7c:	e00e      	b.n	8005c9c <__swhatbuf_r+0x40>
 8005c7e:	466a      	mov	r2, sp
 8005c80:	f000 f902 	bl	8005e88 <_fstat_r>
 8005c84:	2800      	cmp	r0, #0
 8005c86:	dbf2      	blt.n	8005c6e <__swhatbuf_r+0x12>
 8005c88:	9a01      	ldr	r2, [sp, #4]
 8005c8a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8005c8e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8005c92:	425a      	negs	r2, r3
 8005c94:	415a      	adcs	r2, r3
 8005c96:	602a      	str	r2, [r5, #0]
 8005c98:	e7ee      	b.n	8005c78 <__swhatbuf_r+0x1c>
 8005c9a:	2340      	movs	r3, #64	; 0x40
 8005c9c:	2000      	movs	r0, #0
 8005c9e:	6023      	str	r3, [r4, #0]
 8005ca0:	b016      	add	sp, #88	; 0x58
 8005ca2:	bd70      	pop	{r4, r5, r6, pc}

08005ca4 <__smakebuf_r>:
 8005ca4:	898b      	ldrh	r3, [r1, #12]
 8005ca6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005ca8:	079d      	lsls	r5, r3, #30
 8005caa:	4606      	mov	r6, r0
 8005cac:	460c      	mov	r4, r1
 8005cae:	d507      	bpl.n	8005cc0 <__smakebuf_r+0x1c>
 8005cb0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8005cb4:	6023      	str	r3, [r4, #0]
 8005cb6:	6123      	str	r3, [r4, #16]
 8005cb8:	2301      	movs	r3, #1
 8005cba:	6163      	str	r3, [r4, #20]
 8005cbc:	b002      	add	sp, #8
 8005cbe:	bd70      	pop	{r4, r5, r6, pc}
 8005cc0:	466a      	mov	r2, sp
 8005cc2:	ab01      	add	r3, sp, #4
 8005cc4:	f7ff ffca 	bl	8005c5c <__swhatbuf_r>
 8005cc8:	9900      	ldr	r1, [sp, #0]
 8005cca:	4605      	mov	r5, r0
 8005ccc:	4630      	mov	r0, r6
 8005cce:	f7ff f989 	bl	8004fe4 <_malloc_r>
 8005cd2:	b948      	cbnz	r0, 8005ce8 <__smakebuf_r+0x44>
 8005cd4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005cd8:	059a      	lsls	r2, r3, #22
 8005cda:	d4ef      	bmi.n	8005cbc <__smakebuf_r+0x18>
 8005cdc:	f023 0303 	bic.w	r3, r3, #3
 8005ce0:	f043 0302 	orr.w	r3, r3, #2
 8005ce4:	81a3      	strh	r3, [r4, #12]
 8005ce6:	e7e3      	b.n	8005cb0 <__smakebuf_r+0xc>
 8005ce8:	4b0d      	ldr	r3, [pc, #52]	; (8005d20 <__smakebuf_r+0x7c>)
 8005cea:	62b3      	str	r3, [r6, #40]	; 0x28
 8005cec:	89a3      	ldrh	r3, [r4, #12]
 8005cee:	6020      	str	r0, [r4, #0]
 8005cf0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005cf4:	81a3      	strh	r3, [r4, #12]
 8005cf6:	9b00      	ldr	r3, [sp, #0]
 8005cf8:	6120      	str	r0, [r4, #16]
 8005cfa:	6163      	str	r3, [r4, #20]
 8005cfc:	9b01      	ldr	r3, [sp, #4]
 8005cfe:	b15b      	cbz	r3, 8005d18 <__smakebuf_r+0x74>
 8005d00:	4630      	mov	r0, r6
 8005d02:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005d06:	f000 f8d1 	bl	8005eac <_isatty_r>
 8005d0a:	b128      	cbz	r0, 8005d18 <__smakebuf_r+0x74>
 8005d0c:	89a3      	ldrh	r3, [r4, #12]
 8005d0e:	f023 0303 	bic.w	r3, r3, #3
 8005d12:	f043 0301 	orr.w	r3, r3, #1
 8005d16:	81a3      	strh	r3, [r4, #12]
 8005d18:	89a0      	ldrh	r0, [r4, #12]
 8005d1a:	4305      	orrs	r5, r0
 8005d1c:	81a5      	strh	r5, [r4, #12]
 8005d1e:	e7cd      	b.n	8005cbc <__smakebuf_r+0x18>
 8005d20:	08005ab5 	.word	0x08005ab5

08005d24 <_malloc_usable_size_r>:
 8005d24:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005d28:	1f18      	subs	r0, r3, #4
 8005d2a:	2b00      	cmp	r3, #0
 8005d2c:	bfbc      	itt	lt
 8005d2e:	580b      	ldrlt	r3, [r1, r0]
 8005d30:	18c0      	addlt	r0, r0, r3
 8005d32:	4770      	bx	lr

08005d34 <_raise_r>:
 8005d34:	291f      	cmp	r1, #31
 8005d36:	b538      	push	{r3, r4, r5, lr}
 8005d38:	4604      	mov	r4, r0
 8005d3a:	460d      	mov	r5, r1
 8005d3c:	d904      	bls.n	8005d48 <_raise_r+0x14>
 8005d3e:	2316      	movs	r3, #22
 8005d40:	6003      	str	r3, [r0, #0]
 8005d42:	f04f 30ff 	mov.w	r0, #4294967295
 8005d46:	bd38      	pop	{r3, r4, r5, pc}
 8005d48:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8005d4a:	b112      	cbz	r2, 8005d52 <_raise_r+0x1e>
 8005d4c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005d50:	b94b      	cbnz	r3, 8005d66 <_raise_r+0x32>
 8005d52:	4620      	mov	r0, r4
 8005d54:	f000 f830 	bl	8005db8 <_getpid_r>
 8005d58:	462a      	mov	r2, r5
 8005d5a:	4601      	mov	r1, r0
 8005d5c:	4620      	mov	r0, r4
 8005d5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005d62:	f000 b817 	b.w	8005d94 <_kill_r>
 8005d66:	2b01      	cmp	r3, #1
 8005d68:	d00a      	beq.n	8005d80 <_raise_r+0x4c>
 8005d6a:	1c59      	adds	r1, r3, #1
 8005d6c:	d103      	bne.n	8005d76 <_raise_r+0x42>
 8005d6e:	2316      	movs	r3, #22
 8005d70:	6003      	str	r3, [r0, #0]
 8005d72:	2001      	movs	r0, #1
 8005d74:	e7e7      	b.n	8005d46 <_raise_r+0x12>
 8005d76:	2400      	movs	r4, #0
 8005d78:	4628      	mov	r0, r5
 8005d7a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8005d7e:	4798      	blx	r3
 8005d80:	2000      	movs	r0, #0
 8005d82:	e7e0      	b.n	8005d46 <_raise_r+0x12>

08005d84 <raise>:
 8005d84:	4b02      	ldr	r3, [pc, #8]	; (8005d90 <raise+0xc>)
 8005d86:	4601      	mov	r1, r0
 8005d88:	6818      	ldr	r0, [r3, #0]
 8005d8a:	f7ff bfd3 	b.w	8005d34 <_raise_r>
 8005d8e:	bf00      	nop
 8005d90:	2000000c 	.word	0x2000000c

08005d94 <_kill_r>:
 8005d94:	b538      	push	{r3, r4, r5, lr}
 8005d96:	2300      	movs	r3, #0
 8005d98:	4d06      	ldr	r5, [pc, #24]	; (8005db4 <_kill_r+0x20>)
 8005d9a:	4604      	mov	r4, r0
 8005d9c:	4608      	mov	r0, r1
 8005d9e:	4611      	mov	r1, r2
 8005da0:	602b      	str	r3, [r5, #0]
 8005da2:	f7fb fdfe 	bl	80019a2 <_kill>
 8005da6:	1c43      	adds	r3, r0, #1
 8005da8:	d102      	bne.n	8005db0 <_kill_r+0x1c>
 8005daa:	682b      	ldr	r3, [r5, #0]
 8005dac:	b103      	cbz	r3, 8005db0 <_kill_r+0x1c>
 8005dae:	6023      	str	r3, [r4, #0]
 8005db0:	bd38      	pop	{r3, r4, r5, pc}
 8005db2:	bf00      	nop
 8005db4:	200002c8 	.word	0x200002c8

08005db8 <_getpid_r>:
 8005db8:	f7fb bdec 	b.w	8001994 <_getpid>

08005dbc <__sread>:
 8005dbc:	b510      	push	{r4, lr}
 8005dbe:	460c      	mov	r4, r1
 8005dc0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005dc4:	f000 f894 	bl	8005ef0 <_read_r>
 8005dc8:	2800      	cmp	r0, #0
 8005dca:	bfab      	itete	ge
 8005dcc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8005dce:	89a3      	ldrhlt	r3, [r4, #12]
 8005dd0:	181b      	addge	r3, r3, r0
 8005dd2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005dd6:	bfac      	ite	ge
 8005dd8:	6563      	strge	r3, [r4, #84]	; 0x54
 8005dda:	81a3      	strhlt	r3, [r4, #12]
 8005ddc:	bd10      	pop	{r4, pc}

08005dde <__swrite>:
 8005dde:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005de2:	461f      	mov	r7, r3
 8005de4:	898b      	ldrh	r3, [r1, #12]
 8005de6:	4605      	mov	r5, r0
 8005de8:	05db      	lsls	r3, r3, #23
 8005dea:	460c      	mov	r4, r1
 8005dec:	4616      	mov	r6, r2
 8005dee:	d505      	bpl.n	8005dfc <__swrite+0x1e>
 8005df0:	2302      	movs	r3, #2
 8005df2:	2200      	movs	r2, #0
 8005df4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005df8:	f000 f868 	bl	8005ecc <_lseek_r>
 8005dfc:	89a3      	ldrh	r3, [r4, #12]
 8005dfe:	4632      	mov	r2, r6
 8005e00:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005e04:	81a3      	strh	r3, [r4, #12]
 8005e06:	4628      	mov	r0, r5
 8005e08:	463b      	mov	r3, r7
 8005e0a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005e0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005e12:	f000 b817 	b.w	8005e44 <_write_r>

08005e16 <__sseek>:
 8005e16:	b510      	push	{r4, lr}
 8005e18:	460c      	mov	r4, r1
 8005e1a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005e1e:	f000 f855 	bl	8005ecc <_lseek_r>
 8005e22:	1c43      	adds	r3, r0, #1
 8005e24:	89a3      	ldrh	r3, [r4, #12]
 8005e26:	bf15      	itete	ne
 8005e28:	6560      	strne	r0, [r4, #84]	; 0x54
 8005e2a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8005e2e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005e32:	81a3      	strheq	r3, [r4, #12]
 8005e34:	bf18      	it	ne
 8005e36:	81a3      	strhne	r3, [r4, #12]
 8005e38:	bd10      	pop	{r4, pc}

08005e3a <__sclose>:
 8005e3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005e3e:	f000 b813 	b.w	8005e68 <_close_r>
	...

08005e44 <_write_r>:
 8005e44:	b538      	push	{r3, r4, r5, lr}
 8005e46:	4604      	mov	r4, r0
 8005e48:	4608      	mov	r0, r1
 8005e4a:	4611      	mov	r1, r2
 8005e4c:	2200      	movs	r2, #0
 8005e4e:	4d05      	ldr	r5, [pc, #20]	; (8005e64 <_write_r+0x20>)
 8005e50:	602a      	str	r2, [r5, #0]
 8005e52:	461a      	mov	r2, r3
 8005e54:	f7fb fddc 	bl	8001a10 <_write>
 8005e58:	1c43      	adds	r3, r0, #1
 8005e5a:	d102      	bne.n	8005e62 <_write_r+0x1e>
 8005e5c:	682b      	ldr	r3, [r5, #0]
 8005e5e:	b103      	cbz	r3, 8005e62 <_write_r+0x1e>
 8005e60:	6023      	str	r3, [r4, #0]
 8005e62:	bd38      	pop	{r3, r4, r5, pc}
 8005e64:	200002c8 	.word	0x200002c8

08005e68 <_close_r>:
 8005e68:	b538      	push	{r3, r4, r5, lr}
 8005e6a:	2300      	movs	r3, #0
 8005e6c:	4d05      	ldr	r5, [pc, #20]	; (8005e84 <_close_r+0x1c>)
 8005e6e:	4604      	mov	r4, r0
 8005e70:	4608      	mov	r0, r1
 8005e72:	602b      	str	r3, [r5, #0]
 8005e74:	f7fb fde8 	bl	8001a48 <_close>
 8005e78:	1c43      	adds	r3, r0, #1
 8005e7a:	d102      	bne.n	8005e82 <_close_r+0x1a>
 8005e7c:	682b      	ldr	r3, [r5, #0]
 8005e7e:	b103      	cbz	r3, 8005e82 <_close_r+0x1a>
 8005e80:	6023      	str	r3, [r4, #0]
 8005e82:	bd38      	pop	{r3, r4, r5, pc}
 8005e84:	200002c8 	.word	0x200002c8

08005e88 <_fstat_r>:
 8005e88:	b538      	push	{r3, r4, r5, lr}
 8005e8a:	2300      	movs	r3, #0
 8005e8c:	4d06      	ldr	r5, [pc, #24]	; (8005ea8 <_fstat_r+0x20>)
 8005e8e:	4604      	mov	r4, r0
 8005e90:	4608      	mov	r0, r1
 8005e92:	4611      	mov	r1, r2
 8005e94:	602b      	str	r3, [r5, #0]
 8005e96:	f7fb fde2 	bl	8001a5e <_fstat>
 8005e9a:	1c43      	adds	r3, r0, #1
 8005e9c:	d102      	bne.n	8005ea4 <_fstat_r+0x1c>
 8005e9e:	682b      	ldr	r3, [r5, #0]
 8005ea0:	b103      	cbz	r3, 8005ea4 <_fstat_r+0x1c>
 8005ea2:	6023      	str	r3, [r4, #0]
 8005ea4:	bd38      	pop	{r3, r4, r5, pc}
 8005ea6:	bf00      	nop
 8005ea8:	200002c8 	.word	0x200002c8

08005eac <_isatty_r>:
 8005eac:	b538      	push	{r3, r4, r5, lr}
 8005eae:	2300      	movs	r3, #0
 8005eb0:	4d05      	ldr	r5, [pc, #20]	; (8005ec8 <_isatty_r+0x1c>)
 8005eb2:	4604      	mov	r4, r0
 8005eb4:	4608      	mov	r0, r1
 8005eb6:	602b      	str	r3, [r5, #0]
 8005eb8:	f7fb fde0 	bl	8001a7c <_isatty>
 8005ebc:	1c43      	adds	r3, r0, #1
 8005ebe:	d102      	bne.n	8005ec6 <_isatty_r+0x1a>
 8005ec0:	682b      	ldr	r3, [r5, #0]
 8005ec2:	b103      	cbz	r3, 8005ec6 <_isatty_r+0x1a>
 8005ec4:	6023      	str	r3, [r4, #0]
 8005ec6:	bd38      	pop	{r3, r4, r5, pc}
 8005ec8:	200002c8 	.word	0x200002c8

08005ecc <_lseek_r>:
 8005ecc:	b538      	push	{r3, r4, r5, lr}
 8005ece:	4604      	mov	r4, r0
 8005ed0:	4608      	mov	r0, r1
 8005ed2:	4611      	mov	r1, r2
 8005ed4:	2200      	movs	r2, #0
 8005ed6:	4d05      	ldr	r5, [pc, #20]	; (8005eec <_lseek_r+0x20>)
 8005ed8:	602a      	str	r2, [r5, #0]
 8005eda:	461a      	mov	r2, r3
 8005edc:	f7fb fdd8 	bl	8001a90 <_lseek>
 8005ee0:	1c43      	adds	r3, r0, #1
 8005ee2:	d102      	bne.n	8005eea <_lseek_r+0x1e>
 8005ee4:	682b      	ldr	r3, [r5, #0]
 8005ee6:	b103      	cbz	r3, 8005eea <_lseek_r+0x1e>
 8005ee8:	6023      	str	r3, [r4, #0]
 8005eea:	bd38      	pop	{r3, r4, r5, pc}
 8005eec:	200002c8 	.word	0x200002c8

08005ef0 <_read_r>:
 8005ef0:	b538      	push	{r3, r4, r5, lr}
 8005ef2:	4604      	mov	r4, r0
 8005ef4:	4608      	mov	r0, r1
 8005ef6:	4611      	mov	r1, r2
 8005ef8:	2200      	movs	r2, #0
 8005efa:	4d05      	ldr	r5, [pc, #20]	; (8005f10 <_read_r+0x20>)
 8005efc:	602a      	str	r2, [r5, #0]
 8005efe:	461a      	mov	r2, r3
 8005f00:	f7fb fd69 	bl	80019d6 <_read>
 8005f04:	1c43      	adds	r3, r0, #1
 8005f06:	d102      	bne.n	8005f0e <_read_r+0x1e>
 8005f08:	682b      	ldr	r3, [r5, #0]
 8005f0a:	b103      	cbz	r3, 8005f0e <_read_r+0x1e>
 8005f0c:	6023      	str	r3, [r4, #0]
 8005f0e:	bd38      	pop	{r3, r4, r5, pc}
 8005f10:	200002c8 	.word	0x200002c8

08005f14 <_init>:
 8005f14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f16:	bf00      	nop
 8005f18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005f1a:	bc08      	pop	{r3}
 8005f1c:	469e      	mov	lr, r3
 8005f1e:	4770      	bx	lr

08005f20 <_fini>:
 8005f20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f22:	bf00      	nop
 8005f24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005f26:	bc08      	pop	{r3}
 8005f28:	469e      	mov	lr, r3
 8005f2a:	4770      	bx	lr
